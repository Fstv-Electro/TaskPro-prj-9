{"version":3,"file":"static/js/30.6137df5f.chunk.js","mappings":"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","sources":["components/sidebar/CreateBoard/CreateBoard.styled.jsx","components/sidebar/modalBoard/ModalBoard.styled.jsx","components/iconRadioButtons/IconRadioButtons.styled.jsx","components/iconRadioButtons/IconRadioButtons.jsx","components/sidebar/modalBoard/ModalBoard.jsx","components/sidebar/CreateBoard/CreateBoard.jsx","components/sidebar/MyBoards/MyBoards.styled.jsx","components/sidebar/modalBoard/EditBoard.jsx","components/sidebar/modalBoard/DeleteBoard.jsx","components/sidebar/MyBoards/MyBoards.jsx","components/sidebar/LogOut/LogOut.styled.jsx","components/sidebar/LogOut/LogOut.jsx","components/sidebar/needHelp/needHelp.styled.js","components/sidebar/needHelp/needHelpForm.styled.js","components/sidebar/needHelp/needHelpForm.jsx","components/sidebar/needHelp/needHelp.jsx","components/sidebar/Sidebar.styled.jsx","components/sidebar/Sidebar.jsx","components/Header/Header.styled.js","components/Header/UserInfo/UserInfo.styled.js","components/Header/UserInfo/EditUserForm/EditUserForm.styled.js","components/Header/UserInfo/EditUserForm/EditUserForm.js","components/Header/Loading/Loading.styled.js","components/Header/Loading/Loading.js","components/Header/UserInfo/UserInfo.js","components/Header/Header.js","components/HomeEmptyPage/HomeEmptyPage.styled.js","components/HomeEmptyPage/HomeEmptyPage.jsx","pages/homePage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const WrapperBoards = styled.div`\n  border-bottom: 1px solid var(--sidebar-line-color);\n  margin-bottom: 9px;\n  margin-right: 24px;\n  padding-bottom: 8px;\n`;\n\nexport const Boards = styled.p`\n  font-size: 12px;\n  letter-spacing: -0.24px;\n  opacity: 0.5;\n`;\n\nexport const WrapperCreate = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid var(--sidebar-line-color);\n  margin-bottom: 40px;\n  margin-right: 24px;\n  padding-top: 14px;\n  padding-bottom: 14px;\n`;\n\nexport const CreateTitle = styled.p`\n  width: 76px;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\n\nexport const CreateButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  width: 40px;\n  height: 36px;\n  border-radius: 8px;\n  background: var(--sidebar-bg-icon-plus-color);\n  border: none;\n  outline: none;\n  cursor: pointer;\n  transform: scale(1);\n  transition: transform 550ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.1);\n  }\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const IconPlus = styled.svg`\n  flex-shrink: 0;\n  fill: var(--sidebar-bg-icon-plus-color);\n  color: var(--color-icon-plus);\n`;\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const Forma = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n`;\n\nexport const Input = styled(Field)`\n  display: flex;\n  width: 280px;\n  padding: 14px 1px 14px 18px;\n  /* margin: 0 24px 0 24px; */\n  align-items: center;\n  background: transparent;\n  outline: none;\n  border-radius: 8px;\n  border: 1px solid var(--button-bg-color);\n  opacity: 0.4000000059604645;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  color: currentColor;\n\n    &:focus {\n      opacity: 1;\n    }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  /* width: 250px; */\n`;\n\nexport const Text = styled.p`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 12px;\n  letter-spacing: 0.03em;\n  margin-bottom: 10px;\n`;\n\nexport const FormTitle = styled.h2`\n  font-size: 18px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin-top: 14px;\n  margin-bottom: 24px;\n`;\n\nexport const DeleteTitle = styled.h2`\n  text-align: center;\n  font-size: 18px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin-top: 14px;\n  margin-bottom: 24px;\n`;\n\nexport const WrapperDelete = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 25px;\n  width: 250px;\n  transform: scale(1);\n  transition: transform 550ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const Btn = styled.button`\n  font-size: 18px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  padding: 5px;\n  background-color: var(--button-bg-color);\n  border: none;\n  border-radius: 8%;\n  color: #161616;\n  cursor: pointer;\n  width: 100px;\n  &:hover {\n    transform: scale(1.1);\n  }\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.div`\n  margin-bottom: 24px;\n`;\n\nexport const FormOptions = styled.ul`\n  border: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const FormQuestion = styled.legend`\n  color: currentColor;\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\n\nexport const FormAnswer = styled.li`\n  display: inline-block;\n  box-sizing: border-box;\n  vertical-align: top;\n  text-align: center;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  height: 100%;\n  width: 100%;\n  padding-right: 6px;\n  cursor: pointer;\n  opacity: 0.5;\n  transition: all 0.5s ease-in-out;\n`;\n\nexport const Input = styled.input`\n  &[type='radio'] {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n  &[type='radio']:active ~ label {\n    opacity: 1;\n  }\n  &[type='radio']:checked ~ label {\n    opacity: 1;\n  }\n`;\n\nexport const Svg = styled.svg`\n  width: 18px;\n  height: 18px;\n  --color1: var(--first-text-color);\n  :hover {\n    --color1: var(--button-bg-color);\n  }\n`;\n","import {\n  Form,\n  FormOptions,\n  FormAnswer,\n  Label,\n  Input,\n  Svg,\n  FormQuestion,\n} from './IconRadioButtons.styled';\nimport sprite from '../../images/symbol-defs.svg';\n\nexport const IconRadioButtons = ({ getIcon }) => {\n  const icons = [\n    { name: 'icon-Project', id: 'match_1' },\n    { name: 'icon-star-04', id: 'match_2' },\n    { name: 'icon-loading-03', id: 'match_3' },\n    { name: 'icon-puzzle-piece-02', id: 'match_4' },\n    { name: 'icon-container', id: 'match_5' },\n    { name: 'icon-lightning-02', id: 'match_6' },\n    { name: 'icon-colors', id: 'match_7' },\n    { name: 'icon-hexagon-01', id: 'match_8' },\n  ];\n\n  const onClickIcon = e => {\n    getIcon(e.target.value);\n  };\n  // console.log(item);\n  return (\n    <>\n      <Form>\n        <FormQuestion>Icons</FormQuestion>\n        <FormOptions>\n          {icons.map(({ name, id }) => (\n            <FormAnswer key={id}>\n              <Input\n                onClick={onClickIcon}\n                type=\"radio\"\n                name=\"match\"\n                id={id}\n                value={name}\n              />\n              <Label htmlFor={id}>\n                <Svg aria-label=\"question with round\">\n                  <use href={sprite + `#${name}`}></use>\n                </Svg>\n              </Label>\n            </FormAnswer>\n          ))}\n        </FormOptions>\n      </Form>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { Forma, Label, Input, FormTitle } from './ModalBoard.styled';\nimport SubmitButton from '../../submitButton/submitButton';\nimport { IconRadioButtons } from '../../iconRadioButtons/IconRadioButtons';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { ButtonClose } from '../../modalBtnClose/ButtonClose';\nimport { Background } from '../../background/Background';\nimport { useDispatch } from 'react-redux';\nimport { addBoard } from '../../../redux/dashboards/operations';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n});\n\nexport const ModalBoard = ({ onClose }) => {\n  const [icon, setIcon] = useState('');\n  const [currentBg, setCurrentBg] = useState('');\n  \n\n  const dispatch = useDispatch();\n\n  const getIcon = icon => {\n    setIcon({ icon });\n  };\n  const getBg = currentBg => {\n    setCurrentBg({ currentBg });\n  };\n\n  const handleSubmit = (query, { resetForm }) => {\n    if (!query) {\n      console.log('error');\n    } else {\n      dispatch(\n        addBoard({\n          title: query.name,\n          ...currentBg,\n          ...icon,\n        })\n      );\n      console.log({\n        title: query.name,\n        ...currentBg,\n        ...icon,\n      });\n      resetForm();\n    }\n    onClose();\n  };\n\n  const initialValues = {\n    name: '',\n  };\n\n  return (\n    <>\n      <ButtonClose onClose={onClose} />\n      <FormTitle>New board</FormTitle>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <Forma>\n          <Label htmlFor=\"name\">\n            <Input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Title\"\n              required\n              minLength=\"4\"\n              maxLength=\"12\"\n            />\n            <ErrorMessage name=\"name\" component=\"div\" />\n          </Label>\n\n          <IconRadioButtons getIcon={getIcon} />\n          <Background getBg={getBg} />\n          <SubmitButton\n            type=\"submit\"\n            title=\"Create\"\n            width=\"302\"\n            height=\"49\"\n            icon={true}\n            addColumn={false}\n          />\n        </Forma>\n      </Formik>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport {\n  WrapperBoards,\n  Boards,\n  WrapperCreate,\n  CreateTitle,\n  CreateButton,\n  IconPlus,\n} from './CreateBoard.styled';\nimport sprite from '../../../images/symbol-defs.svg';\nimport { Modal } from 'components/modal/modal';\nimport { ModalBoard } from '../modalBoard/ModalBoard';\n\nexport const CreateBoard = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleModal = () => {\n    setIsOpen(isOpen => !isOpen);\n  };\n  return (\n    <>\n      <WrapperBoards>\n        <Boards>My boards</Boards>\n      </WrapperBoards>\n      <WrapperCreate>\n        <CreateTitle>Create a new board</CreateTitle>\n        <CreateButton type=\"button\" onClick={toggleModal}>\n          <IconPlus aria-label=\"question with round\" width=\"40px\" height=\"36px\">\n            <use href={sprite + '#icon-plus-add'}></use>\n          </IconPlus>\n        </CreateButton>\n        {isOpen && (\n          <Modal\n            onClose={toggleModal}\n            children={<ModalBoard onClose={toggleModal} />}\n          />\n        )}\n      </WrapperCreate>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding-left: 0;\n  margin: 0;\n  &:last-child {\n    margin-bottom: 40px;\n  }\n`;\n\nexport const Item = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 61px;\n  width: 100%;\n\n  &:not(:last-child) {\n    margin-bottom: 4px;\n  }\n`;\n\nexport const NavItem = styled(NavLink)`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  min-width: 260px;\n  height: 100%;\n  text-decoration: none;\n  transition: border 550ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:not(.active):hover {\n    border-bottom: 1px solid var(--sidebar-bg-icon-logout-color);\n    margin-bottom: -1px;\n  }\n\n  &.active {\n    background-color: var(--sidebar-active-bg-color);\n    outline: none;\n    width: calc(100% + 24px);\n    padding-left: 24px;\n    margin-left: -24px;\n\n    @media (max-width: 768px) {\n      width: calc(100% + 14px);\n      padding-left: 14px;\n      margin-left: -14px;\n    }\n    &:after {\n      content: '';\n      display: flex;\n      position: absolute;\n      right: 0;\n      border-radius: 4px 0px 0px 4px;\n      background: var(--sidebar-bg-icon-logout-color);\n      width: 4px;\n      height: 61px;\n    }\n  }\n`;\n\nexport const WrapperProjectOffice = styled.button`\n  display: flex;\n  align-items: center;\n  color: var(--bord-list-color);\n  border: none;\n  background: none;\n  cursor: pointer;\n  width: 100%;\n`;\n\nexport const Project = styled.p`\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  margin-left: 8px;\n`;\n\nexport const WrapperProjectIcons = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n\n  &:not(:last-child) {\n    margin-right: 8px;\n  }\n`;\n\nexport const BtnContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 24px;\n`;\n\nexport const IconEdit = styled.svg`\n  width: 16px;\n  height: 16px;\n  color: rgba(255, 255, 255, 0.5);\n  transition: color 350ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: blue;\n  }\n`;\n\nexport const IconDelete = styled.svg`\n  width: 16px;\n  height: 16px;\n  color: rgba(255, 255, 255, 0.5);\n  transition: color 350ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: tomato;\n  }\n`;\n","import { useState } from 'react';\nimport { Forma, Label, Input, FormTitle } from './ModalBoard.styled';\nimport SubmitButton from '../../submitButton/submitButton';\nimport { IconRadioButtons } from '../../iconRadioButtons/IconRadioButtons';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { ButtonClose } from '../../modalBtnClose/ButtonClose';\nimport { Background } from '../../background/Background';\nimport { useDispatch } from 'react-redux';\nimport { editBoard } from '../../../redux/dashboards/operations';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n});\n\nexport const EditBoard = ({ desk, onClose }) => {\n  const [icon, setIcon] = useState('');\n  const [currentBg, setCurrentBg] = useState('');\n\n  const dispatch = useDispatch();\n\n  const getIcon = icon => {\n    setIcon({ icon });\n  };\n  const getBg = currentBg => {\n    setCurrentBg({ currentBg });\n  };\n\n  const handleSubmit = (query, { resetForm }) => {\n    if (!query) {\n      console.log('error');\n    } else {\n      dispatch(\n        editBoard({\n          title: query.name,\n          ...currentBg,\n          ...icon,\n          id: desk.desk._id,\n        })\n      );\n      console.log({\n        title: query.name,\n        ...currentBg,\n        ...icon,\n        id: desk.desk._id,\n      });\n      resetForm();\n    }\n    onClose();\n  };\n\n  return (\n    <>\n      <ButtonClose onClose={onClose} />\n      <FormTitle>Edit board</FormTitle>\n      <Formik\n        initialValues={{ id: desk.desk._id, name: desk ? desk.desk.title : '' }}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <Forma>\n          <Label htmlFor=\"name\">\n            <Input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Title\"\n              required\n              minLength=\"4\"\n              maxLength=\"12\"\n            />\n            <ErrorMessage name=\"name\" component=\"div\" />\n          </Label>\n\n          <IconRadioButtons getIcon={getIcon} />\n          <Background getBg={getBg} />\n          <SubmitButton\n            type=\"submit\"\n            title=\"Create\"\n            width=\"302\"\n            height=\"49\"\n            theme=\"Dark\"\n            icon={true}\n            addColumn={false}\n          />\n        </Forma>\n      </Formik>\n    </>\n  );\n};\n","import { DeleteTitle, Btn, WrapperDelete } from './ModalBoard.styled';\n\nimport { ButtonClose } from '../../modalBtnClose/ButtonClose';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteBoard, fetchBoards } from '../../../redux/dashboards/operations';\nimport { selectBoard } from 'redux/dashboards/selectors';\n\nexport const DeleteBoard = ({ desk, onClose }) => {\n  const dispatch = useDispatch();\n  const Boards = useSelector(selectBoard)\n  console.log(desk.id);\n\n  const handleSubmit = () => {\n    dispatch(deleteBoard(desk.id));\n    dispatch(fetchBoards(Boards));\n    onClose();\n  };\n\n  return (\n    <>\n      <ButtonClose onClose={onClose} />\n      <DeleteTitle>Delete Board?</DeleteTitle>\n      <WrapperDelete>\n        <Btn onClick={handleSubmit}>yes</Btn>\n        <Btn onClick={() => onClose()}>no</Btn>\n      </WrapperDelete>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport {\n  List,\n  Item,\n  WrapperProjectOffice,\n  Project,\n  WrapperProjectIcons,\n  NavItem,\n  IconEdit,\n  IconDelete,\n  BtnContainer,\n} from './MyBoards.styled';\nimport sprite from '../../../images/symbol-defs.svg';\nimport { fetchColumns } from 'redux/dashboards/operations';\nimport { changeBg, changeCurrentBoard } from 'redux/dashboards/slice';\nimport { useDispatch } from 'react-redux';\nimport { Modal } from 'components/modal/modal';\nimport { EditBoard } from '../modalBoard/EditBoard';\nimport { DeleteBoard } from '../modalBoard/DeleteBoard';\n\nexport const MyBoards = (desk, id) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [typeModal, setTypeModal] = useState('');\n  const dispatch = useDispatch();\n\n  if (desk.desk === undefined) {\n    return;\n  }\n\n  \n  const getColumns = id => {\n    dispatch(fetchColumns(id));\n    dispatch(changeBg(desk.desk.currentBg));\n    dispatch(changeCurrentBoard(id));\n  };\n\n  const deskRoute = desk.desk.title.split(' ').join('-');\n\n  const pjIcon = `#${desk.desk.icon}`;\n\n  const toggleModal = typeToggle => {\n    setIsOpen(isOpen => !isOpen);\n    setTypeModal(typeToggle);\n  };\n  return (\n    <List>\n      <Item>\n        <NavItem to={deskRoute}>\n          <WrapperProjectOffice onClick={() => getColumns(desk.id)}>\n            <svg aria-label=\"question with round\" width=\"18px\" height=\"16px\">\n              <use href={sprite + pjIcon}></use>\n            </svg>\n            <Project>{desk.desk.title}</Project>\n          </WrapperProjectOffice>\n          <BtnContainer>\n            <WrapperProjectIcons>\n              <IconEdit onClick={() => toggleModal('edit')}>\n                <svg\n                  aria-label=\"question with round\"\n                  width=\"16px\"\n                  height=\"16px\"\n                >\n                  <use href={sprite + `#icon-pencil-01`}></use>\n                </svg>\n              </IconEdit>\n            </WrapperProjectIcons>\n            <WrapperProjectIcons>\n              <IconDelete onClick={() => toggleModal('delete')}>\n                <svg\n                  aria-label=\"question with round\"\n                  width=\"16px\"\n                  height=\"16px\"\n                >\n                  <use href={sprite + '#icon-trash-04'}></use>\n                </svg>\n              </IconDelete>\n            </WrapperProjectIcons>\n          </BtnContainer>\n        </NavItem>\n      </Item>\n      {isOpen &&\n        (typeModal === 'edit' ? (\n          <Modal\n            onClose={toggleModal}\n            children={<EditBoard desk={desk} onClose={toggleModal} />}\n          />\n        ) : (\n          <Modal\n            onClose={toggleModal}\n            children={<DeleteBoard desk={desk} onClose={toggleModal} />}\n          />\n        ))}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const LogOutButton = styled.button`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  background: none;\n  border: none;\n  padding: 0;\n  transform: scale(1);\n  transition: transform 550ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.1);\n  }\n  &:focus {\n    transform: scale(1.1);\n  }\n\n  svg {\n    --color2: var(--sidebar-bg-icon-logout-color);\n  }\n`;\n\nexport const LogOutText = styled.span`\n  font-size: 16px;\n  font-family: Poppins;\n  font-weight: 500;\n  margin-left: 14px;\n  color: var(--bord-list-color);\n`;\n","import { useDispatch } from 'react-redux';\nimport { logOut } from 'redux/auth/operations';\nimport { LogOutButton, LogOutText } from './LogOut.styled';\nimport sprite from '../../../images/symbol-defs.svg';\n\nexport const LogOut = () => {\n  const dispatch = useDispatch();\n  return (\n    <LogOutButton type=\"button\" onClick={() => dispatch(logOut())}>\n      <svg\n        aria-label=\"question with round\"\n        width=\"24px\"\n        height=\"24px\"\n        fill=\"inherit\"\n      >\n        <use href={sprite + '#icon-login'}></use>\n      </svg>\n      <LogOutText>Log out</LogOutText>\n    </LogOutButton>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 212px;\n  padding: 20px;\n  margin-bottom: 20px;\n  margin-right: 24px;\n  border-radius: 8px;\n  background: var(--sidebar-second-bg-color);\n    \n    @media (min-width: 768px) {\n      max-width: 212px;\n    }\n`;\n\nexport const Text = styled.p`\n  color: var(--bord-list-color);\n  font-size: 12px;\n  font-family: 'Poppins';\n  line-height: 20px;\n  margin-bottom: 15px;\n    \n    @media (min-width: 768px) {\n      font-size: 14px;\n    }\n`;\n\nexport const Span = styled.span`\n  color: var(--button-bg-color);\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  font-size: 12px;\n  font-weight: 500;\n  padding: 0;\n  border: none;\n  color: currentColor;\n  background: var(--sidebar-second-bg-color);\n  cursor: pointer;\n\n      :hover {\n        color: var(--button-bg-color);\n        svg {\n          --color1: var(--button-bg-color);\n        }\n        \n      }\n    \n  @media (min-width: 768px) {\n      font-size: 14px;\n    }\n\n    \n`;\nexport const Image = styled.img`\n  width: 54px;\n  height: 78px;\n  margin-bottom: 14px;\n`;\nexport const TextButton = styled.span`\n  margin-left: 8px;\n  \n`;\n\nexport const Svg = styled.svg`\n  --color1: var(--bord-list-color);\n`;\n","import styled from '@emotion/styled';\nimport { Field as FormicField, Form as FormicForm } from 'formik';\n\nexport const Title = styled.h2`\n    margin: 0 0 24px 0;\n    font-size: 18px;\n    font-weight: 500;\n`;\n\nexport const Form = styled(FormicForm)`\n    display: flex;\n    flex-direction: column;\n    gap: 14px;\n`\n\nexport const Field = styled(FormicField)`\n    max-width: 100%;\n    padding-top: 14px;\n    padding-bottom: 14px;\n    padding-left: 18px;\n    border-radius: 8px;\n    border: 1px solid var(--button-bg-color);\n    opacity: 0.4000000059604645;\n    color: var(--first-text-color);\n    background-color: transparent; \n    outline: none;\n    &:focus {\n      opacity: 1;\n    }\n \n`;\n\nexport const Textarea = styled(FormicField)`\n    max-width: 100%;\n    height: 120px;\n    margin-bottom: 40px;\n    padding-top: 14px;\n    padding-bottom: 14px;\n    padding-left: 18px;\n    border-radius: 8px;\n    border: 1px solid var(--button-bg-color);\n    opacity: 0.4000000059604645;\n    color: var(--first-text-color);\n    background-color: transparent;\n    outline: none;\n    &:focus {\n      opacity: 1;\n    }\n\n`;","import { useDispatch } from \"react-redux\";\nimport { needHelp } from \"redux/dashboards/operations\";\nimport SubmitButton from \"../../submitButton/submitButton\";\nimport { Formik, ErrorMessage } from 'formik';\nimport { Title, Field, Form, Textarea } from './needHelpForm.styled';\nimport { ButtonClose } from 'components/modalBtnClose/ButtonClose';\nimport * as Yup from 'yup';\n\nconst helpSchema = Yup.object().shape({\n  email: Yup.string()\n    .matches(\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n      {\n        message: 'Invalid Email',\n        excludeEmptyString: true,\n      }\n    )\n    .required('Please, enter your email'),\n  text: Yup.string()\n    .required('Please, enter your comment'),\n});\n\nexport const NeedHelpForm = ({onClose}) => {\n    const dispatch = useDispatch();\n\n    function handleSubmit(value) {\n        console.log(value);\n        const { email, text } = value;\n        dispatch(needHelp({email, text}))\n        onClose()\n      }\n    return (\n        <>\n        <ButtonClose onClose={onClose} />\n        <Title>Need Help</Title>\n        <Formik\n        initialValues={{ email: '', text: '' }}\n          validationSchema={helpSchema}\n          onSubmit={(value, { resetForm }) => {\n            handleSubmit(value);\n            resetForm();\n          }}>\n            <Form>\n            <Field type=\"email\" name=\"email\" placeholder=\"Enter your email\" />\n            <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                style={{\n                  color: 'red',\n                  fontSize: 14,\n                }}\n              />\n              <Textarea type=\"text\" name=\"text\" placeholder=\"Enter your comment\" component=\"textarea\" />\n              <ErrorMessage\n                name=\"text\"\n                component=\"div\"\n                style={{\n                  color: 'red',\n                  fontSize: 14,\n                }}\n              />\n              <SubmitButton title=\"Send\" width=\"352\" height=\"49\" theme=\"Dark\"/>\n            </Form>\n        </Formik>\n        </>\n    )\n\n}","import { useState } from 'react';\nimport {\n  Container,\n  Text,\n  Span,\n  Button,\n  Image,\n  TextButton,\n  Svg\n} from './needHelp.styled';\nimport background from '../../../images/help.png';\nimport sprite from '../../../images/symbol-defs.svg';\nimport { Modal } from 'components/modal/modal';\nimport { NeedHelpForm } from './needHelpForm';\n\nexport const NeedHelp = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleModal = () => {\n    setIsOpen(isOpen => !isOpen)\n  }\n  return (\n    <Container>\n      <Image src={background} alt=\"Logo\" />\n      <Text>\n        If you need help with <Span>TaskPro</Span>, check out our support\n        resources or reach out to our customer support team.\n      </Text>\n      <Button onClick={toggleModal}>\n        <Svg aria-label=\"question with round\" width=\"20px\" height=\"20px\">\n          <use href={sprite + '#icon-help-circle'}></use>\n        </Svg>\n        <TextButton>Need help?</TextButton>\n      </Button>\n      {isOpen && <Modal onClose={toggleModal} children={<NeedHelpForm onClose={toggleModal}/>} />}\n    </Container>\n  );\n};\n\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  position: relative;\n  margin: 0;\n  padding: 24px 0 0 24px;\n  color: var(--bord-list-color);\n  background: var(--sidebar-first-bg-color);\n  left: 0;\n  z-index: 100;\n\n  // mobile\n\n  @media (max-width: 768px) {\n    position: absolute;\n    top: 0;\n    left: ${({ isOpen }) => (isOpen ? '0' : '-100%')};\n    bottom: 0;\n    transition: all 1s;\n  }\n`;\n\nexport const WrapperTitle = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 64px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 16px;\n  font-family: Poppins;\n  font-weight: 600;\n  letter-spacing: -0.64px;\n`;\n\nexport const NaviUser = styled.div`\n  /* display: flex;\n  flex-direction: column;\n  justify-content: space-between; */\n  /* height: 100%; */\n  width: 100%;\n  /* gap:28px; */\n`;\n\nexport const NavDashboards = styled.nav`\n  /* margin-bottom: auto; */\n`;\n\nexport const NeedHelpLogOutContainer = styled.div`\n  margin-top: auto;\n  margin-bottom: 28px;\n`;\n\nexport const WrapperLogo = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 8px;\n  border-radius: 5px;\n`;\n\nexport const Logo = styled.svg`\n  width: 32px;\n  height: 32px;\n  flex-shrink: 0;\n  --color5: var(--sidebar-bg-icon-logo);\n  --color1: var(--sidebar-color-icon-logo);\n`;\nexport const IconMenu = styled.svg`\n  position: absolute;\n  top: 18px;\n  left: 32px;\n  width: 32px;\n  height: 32px;\n  display: none;\n  cursor: pointer;\n  transition: all 1s;\n  --color1: var(--first-text-color);\n\n  &:active {\n    opacity: 0;\n  }\n\n  @media (max-width: 375px) {\n    left: 20px;\n  }\n\n  @media (max-width: 768px) {\n    display: block;\n  }\n`;\n","import { CreateBoard } from './CreateBoard/CreateBoard';\nimport { MyBoards } from './MyBoards/MyBoards';\nimport { LogOut } from './LogOut/LogOut';\nimport { NeedHelp } from './needHelp/needHelp';\nimport {\n  Container,\n  WrapperTitle,\n  Title,\n  WrapperLogo,\n  NavDashboards,\n  NaviUser,\n  NeedHelpLogOutContainer,\n  Logo,\n  IconMenu,\n} from './Sidebar.styled';\nimport sprite from '../../../src/images/symbol-defs.svg';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectBoard } from 'redux/dashboards/selectors';\nimport { fetchBoards } from 'redux/dashboards/operations';\nimport { useState, useEffect } from 'react';\nimport { useMediaQuery } from 'react-responsive';\n\nexport const Sidebar = () => {\n  const dispatch = useDispatch();\n  const selectBoards = useSelector(selectBoard);\n  const [isOpen, setIsOpen] = useState(false);\n  const isMobile = useMediaQuery({ maxWidth: 768 });\n\n  useEffect(\n    () => {\n      dispatch(fetchBoards());\n    },\n    [dispatch],\n    selectBoards\n  );\n\n  const handleToggleSidebar = () => {\n    setIsOpen(prevState => !prevState);\n  };\n\n  const handleOutsideClick = event => {\n    if (!event.target.closest('.sidebar')) {\n      setIsOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    let timeoutId;\n\n    if (isOpen && isMobile) {\n      timeoutId = setTimeout(() => {\n        document.addEventListener('click', handleOutsideClick);\n      }, 100);\n    } else {\n      document.removeEventListener('click', handleOutsideClick);\n    }\n\n    return () => {\n      clearTimeout(timeoutId);\n      document.removeEventListener('click', handleOutsideClick);\n    };\n  }, [isOpen, isMobile]);\n\n  return (\n    <>\n      <IconMenu onClick={handleToggleSidebar}>\n        <use href={sprite + '#icon-menu-01'}></use>\n      </IconMenu>\n\n      <Container className=\"sidebar\" isOpen={isOpen}>\n        <NaviUser>\n          <WrapperTitle>\n            <WrapperLogo>\n              <Logo aria-label=\"question with round\" >\n                <use href={sprite + '#icon-icon'}></use>\n              </Logo>\n            </WrapperLogo>\n\n            <Title>Task Pro</Title>\n          </WrapperTitle>\n          <CreateBoard />\n        </NaviUser>\n        <NavDashboards>\n          <MyBoards />\n          {selectBoards.map(board => (\n            <MyBoards key={board._id} id={board._id} desk={board} />\n          ))}\n        </NavDashboards>\n        <NeedHelpLogOutContainer>\n          <NeedHelp />\n          <LogOut />\n        </NeedHelpLogOutContainer>\n      </Container>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const HeaderStyled = styled.header`\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    width: 100%; \n    background: var(--heder-bg-color);\n    padding: 18px 24px;\n    color: var(--first-text-color);\n\n      @media (max-width: 1180px) {\n        padding: 18px 32px;\n      }\n      @media (max-width: 768px) {\n        padding: 14px 20px;\n      }\n\n      \n\n`\n\nexport const ThemeContainer = styled.div`\n    position: relative;\n    display: inline-block;\n    width: 70px;\n    height: auto;\n    margin-right: 14px;\n}     \n`\n\nexport const ThemeList = styled.ul`\n    position: absolute;\n    top: 26px;\n    left: -12px;\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: repeat(3, 1fr);\n    grid-column-gap: 0px;\n    grid-row-gap: 4px;\n    margin: 0px;\n    max-height: 0px;\n    padding: 0 44px 0 18px;\n    \n    overflow: hidden;\n    list-style: none;\n    cursor: pointer;\n    background: var(--heder-bg-color);\n    border-radius: 8px;\n    transition: all 0.3s ease-out;\n    transition: transform 550ms cubic-bezier(0.4, 0, 0.2, 1);\n    z-index: 1000;\n\n      &.active  {\n        max-height: 107px;\n        padding: 18px 44px 18px 18px;\n      }\n  `\nexport const ThemeSelect = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.3s ease-out;\n  transition: transform 550ms cubic-bezier(0.4, 0, 0.2, 1);\n  padding: 10px 1px;\n  opacity: 0.8;\n\n  --color1: currentColor;\n\n  &:hover{\n    text-shadow: 0 1px 4px var(--button-bg-color);\n    transform: scale(1.1);\n  }\n`\n\nexport const P = styled.p`\n    padding: 0;\n    margin: 0;\n    font-size: 14px;\n    font-weight: 500;\n    letter-spacing: -0.28px;\n    margin-right: 4px;\n`\n\nexport const Item = styled.li`\n    \n`;\n\nexport const ItemBtn = styled.button`\n  height: 21px;\n  margin: 0;\n  padding: 0;\n  text-align: left;\n  text-transform: capitalize;\n  font-size: 14px;\n  letter-spacing: -0.28px;\n  border: none;\n  background: transparent;\n  cursor: ${({ disabled }) => (disabled ? '' : 'pointer')};\n  color: ${({ selected }) => (selected ? 'var(--button-bg-color)' : 'var(--text-theme-color)')};\n  transition: all 0.3s ease-out;\n   \n    &:hover{\n      text-shadow:${({ disabled }) => (!disabled ? '0 1px 4px var(--button-bg-color)' : '')};\n      transform: ${({ disabled }) => (!disabled ? 'scale(1.1)' : 'scale(1)')};\n      \n    }\n`;\n\n\n","import styled from '@emotion/styled';\n\nexport const UserContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\nexport const UserEmail = styled.p`\n    font-size: 14px;\n    font-weight: 500;\n    letter-spacing: -0.28px;\n    margin-right: 8px;\n`;\n\nexport const ImgWrapper = styled.div`\n    width: 32px;\n    height: 32px;\n    border-radius: 8px;\n    overflow: hidden;\n    cursor: pointer;\n    transition: all 0.3s ease-out;\n    transition: transform 550ms cubic-bezier(0.4, 0, 0.2, 1);\n\n        svg {\n            --color1 : var(--main-bg-color);\n            --color2 : var(--heder-bg-color);\n        }\n        &:hover{\n            box-shadow: 0px 0px 11px 0px rgba(190, 219, 176, 1);\n            transform: scale(1.1);\n        }\n`\nexport const Img = styled.img`\n        width: 100%;\n\t\theight: 100%;\n\t\tobject-fit: cover;\n`","import styled from '@emotion/styled';\nimport { Field as FormicField, Form as FormicForm, ErrorMessage as FormicErrorMessage } from 'formik';\n\nexport const Container = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 352px;\n\n    \n    @media (max-width: 768px) {\n      width: 287px;\n    }\n    @media (max-width: 375px) {\n      width: 100%;\n    }\n`;\n\nexport const UserForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  border-radius: 8px;\n  }\n`;\nexport const ErrorMessage = styled(FormicErrorMessage)`\n\n`\n\nexport const Title = styled.h3`\n  font-size: 18px;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin: 0;\n`;\n\nexport const Form = styled(FormicForm)`\n  display: flex;\n  gap: 24px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const FormFields = styled.div`\n  display: flex;\n  gap: 14px;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport const Field = styled(FormicField)`\n  font-size: 14px;\n  font-family: 'Poppins';\n  letter-spacing: -0.28px;\n  width: 100%;\n  height: 49px;\n  padding-left: 18px;\n  color: currentColor;\n  background-color: transparent;\n  border-radius: 8px;\n  border: 1px solid var(--button-bg-color);\n  outline: none;\n  opacity: 0.4000000059604645;\n\n    &:focus {\n      opacity: 1;\n    }\n`;\n\nexport const Button = styled.button`\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  letter-spacing: -0.28px;\n\n  padding: 14px;\n  width: 100%;\n  height: 49px;\n\n  background-color: var(--button-bg-color);\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  color: var(--color-icon-plus);\n   \n    &:active:not(:disabled) {\n      position:relative;\n      top:1px;\n      box-shadow: -4px -4px 43px 2px rgba(34, 60, 80, 0.2) inset;\n    }\n  }\n`;\n\nexport const FormIcon = styled.span`\n  position: relative;\n  display: block;\n`;\n\nexport const Eye = styled.button`\n  position: absolute;\n  top: 50%;\n  right: 12px;\n  transform: translateY(-50%);\n\n  background-color: transparent;\n  border: none;\n  opacity: 0.4000000059604645;\n`;\n\nexport const Icon = styled.svg`\n  width: 18px;\n  height: 18px;\n  --color1: var(--first-text-color);\n`;\n\nexport const Label = styled.label`\n    width: 68px;\n    height: 79px;\n    margin: 25px auto 0 auto;\n    cursor: pointer;\n`\nexport const FieldAvatar = styled.input`\n    display: none;\n`\nexport const ImgWrapper = styled.div`\n    position: relative;\n    width: 68px;\n    height: 68px;\n    border-radius: 8px;\n    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    transition: transform 550ms cubic-bezier(0.4, 0, 0.2, 1);\n      \n      svg {\n        --color1 : var(--main-bg-color);\n        --color2 : var(--heder-bg-color);\n      }\n      \n      &:hover{\n        box-shadow: 0px 0px 11px 0px var(--button-bg-color);\n        transform: scale(1.1);\n      }\n\n      &:hover svg{\n        top: 50%;\n        box-shadow: 0px 0px 11px 0px var(--button-bg-color);\n      }\n\n\n`\nexport const Img = styled.img`\n    width: 100%;\n\t\theight: 100%;\n\t\tobject-fit: cover;\n    border-radius: 8px;\n`\nexport const IconPlus = styled.svg`\n  position: absolute;\n  top: 98%;\n  left: 50%;\n  transform:translate(-50%, -50%);\n  transition: transform 550ms cubic-bezier(0.4, 0, 0.2, 1);\n  width: 24px;\n  height: 24px;\n  fill: var(--fill-icon-plus);\n  color: rgba(22, 22, 22, 1);\n`;","import { Formik, ErrorMessage } from 'formik';\nimport {\n  Container,\n  Title,\n  UserForm,\n  Form,\n  Field,\n  FormFields,\n  FormIcon,\n  Icon,\n  Eye,\n  ImgWrapper,\n  Img,\n  FieldAvatar,\n  IconPlus,\n  Label,\n  Button,\n} from './EditUserForm.styled';\nimport { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { update } from 'redux/auth/operations';\nimport Sprite from '../../../../images/symbol-defs.svg'\nimport * as Yup from 'yup';\n\n\nconst NewUserSchema = Yup.object().shape({\n  avatar: Yup.mixed()\n    .test('fileType', 'Invalid file format', (value) => {\n      if (!value) return true; \n      const supportedFormats = ['image/png', 'image/jpeg', 'image/jpg'];\n      return supportedFormats.includes(value.type);\n    }),\n  name: Yup.string()\n    .matches(/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/, {\n      message:\n        \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n      excludeEmptyString: true,\n    })\n    .required('Required'),\n  email: Yup.string()\n    .matches(\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n      {\n        message: 'Email error',\n        excludeEmptyString: true,\n      }\n    )\n    .required('Required'),\n  password: Yup.string()\n    .matches(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{5,}$/, {\n      message: 'Password error',\n      excludeEmptyString: true,\n    })\n    .required('Required'),\n});\n\n\nexport const  EdidUserForm = ({avatarURL, onClose, isLoading}) => {\n  const dispatch = useDispatch();\n  const [type, setType] = useState('password');\n  const [currentImage, setCurrentImage] = useState(avatarURL);\n  const [isSubmit, setIsSubmit] = useState(false);\n\n  useEffect(() => {\n    if(isSubmit && !isLoading ) {\n      onClose();\n    }\n    \n  }, [onClose, isLoading , isSubmit]);\n\n  function handleSubmit(value) {\n    const { avatar, name, email, password  } = value;\n    \n    const formData = new FormData();\n    if (avatar){\n      formData.append('avatar', avatar);\n    }\n    formData.append('name', name);\n    formData.append('email', email);\n    formData.append('password', password);\n    \n    dispatch(update(formData));\n    setIsSubmit(true)\n  }\n\n  function handleClick() {\n    switch (type) {\n      case 'text':\n        return setType('password');\n      case 'password':\n        return setType('text');\n\n      default:\n        break;\n    }\n  };\n\n  function handleFileChange(event) {\n    const file = event; \n    if (!file) {\n      return;\n    }\n    const reader = new FileReader(); \n    \n    reader.onload = function (e) {\n      setCurrentImage(e.target.result); \n    };\n  \n    reader.readAsDataURL(file);\n  }\n\n  return (\n    <Container>\n      <UserForm>\n        <Title>Edit profile</Title>\n          \n        <Formik\n          initialValues={{name: '', email: '', password: ''  }}\n          validationSchema={NewUserSchema}\n          onSubmit={(values, { resetForm }) => {\n            handleSubmit(values);\n            resetForm();\n          }}\n        >\n           {({ setFieldValue, isValid }) => (\n          <Form>\n            <FormFields >\n              <Label htmlFor=\"avatar\">\n              <ImgWrapper >\n              {currentImage ? (\n                <Img src={currentImage} alt=\"User picture\" />\n                ) : (\n                <svg aria-label=\"User picture\" width=\"68px\" height=\"68px\">\n                  <use href={Sprite + '#icon-user'}></use>\n                </svg>\n                )}\n                <IconPlus aria-label=\"add\" >\n                  <use href={Sprite + '#icon-plus-add'}></use>\n                </IconPlus>\n              </ImgWrapper>\n              </Label>\n              <FieldAvatar \n                    id=\"avatar\" \n                    type=\"file\" \n                    name=\"avatar\" \n                    onChange={(event) => {\n                      setFieldValue('avatar', event.currentTarget.files[0]);\n                      handleFileChange(event.currentTarget.files[0])\n                    }}\n              />               \n              <ErrorMessage\n                name=\"avatar\"\n                component=\"div\"\n              />\n\n              <Field type=\"text\" name=\"name\" placeholder=\"Ivetta\" />\n              <ErrorMessage\n                name=\"name\"\n                component=\"div\"\n              />\n              <Field type=\"email\" name=\"email\" placeholder=\"ivetta34@gmail.com\" />\n              <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n              />\n              <FormIcon>\n                <Field\n                  type={type}\n                  name=\"password\"\n                  placeholder=\"ivetta1999.23\"\n                />\n                <Eye type=\"button\" onClick={handleClick}>\n                  <Icon aria-label=\"Logo\">\n                    <use href={Sprite + '#icon-eye'}></use>\n                  </Icon>\n                </Eye>\n              </FormIcon>\n              <ErrorMessage\n                  name=\"password\"\n                  component=\"div\"\n                />\n            </FormFields>\n            <Button type=\"submit\" disabled={!isValid} > Send</Button>\n          </Form>\n         )}\n        </Formik>\n      </UserForm>\n    </Container>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n    position: absolute;\n    display: inline-block;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform:translate(-50%, -50%);\n    width: 80px;\n    height: 80px;\n  \n        & div {\n            position: absolute;\n            border: 4px solid #fff;\n            opacity: 1;\n            border-radius: 50%;\n            animation: lds-ripple 1s cubic-bezier(0, 0.2, 0.8, 1) infinite;\n        }\n        & div:nth-of-type(2) {\n            animation-delay: -0.5s;\n        }\n  @keyframes lds-ripple {\n    0% {\n      top: 36px;\n      left: 36px;\n      width: 0;\n      height: 0;\n      opacity: 0;\n    }\n    4.9% {\n      top: 36px;\n      left: 36px;\n      width: 0;\n      height: 0;\n      opacity: 0;\n    }\n    5% {\n      top: 36px;\n      left: 36px;\n      width: 0;\n      height: 0;\n      opacity: 1;\n    }\n    100% {\n      top: 0px;\n      left: 0px;\n      width: 72px;\n      height: 72px;\n      opacity: 0;\n    }\n  }\n`\n  ","import {Wrapper} from './Loading.styled'\nexport const Loading = () => {\n    return (\n        <Wrapper>\n            <div></div>\n            <div></div>\n        </Wrapper>\n    )\n}\n","import { useState } from 'react';\nimport { UserContainer, UserEmail, ImgWrapper, Img } from \"./UserInfo.styled\";\nimport { Modal } from '../../modal/modal';\nimport { ButtonClose } from 'components/modalBtnClose/ButtonClose';\nimport { EdidUserForm }  from './EditUserForm/EditUserForm'\nimport sprite from '../../../images/symbol-defs.svg';\nimport { Loading } from '../Loading/Loading';\nimport { useSelector } from \"react-redux\";\nimport { selectIsLoading } from 'redux/auth/selectores';\n\nexport const UserInfo = ({name=\"user\", avatarURL}) => {\n  const [modal, setModal] = useState(false);\n  const isLoading = useSelector(selectIsLoading);\n\n  const handleModalOpen = () => setModal(true);\n  const handleClose = () => setModal(false);\n\n  return (\n      <UserContainer>\n        <UserEmail>{name}</UserEmail>\n        <ImgWrapper onClick={handleModalOpen}>\n          {avatarURL ? (\n            <Img src={avatarURL} alt=\"User picture\" />\n          ) : (\n            <svg aria-label=\"User picture\" width=\"32px\" height=\"32px\">\n                <use href={sprite + '#icon-user'}></use>\n            </svg>\n          )}\n        </ImgWrapper>\n        {modal && \n          <Modal onClose={handleClose}>\n            <ButtonClose onClose={handleClose}/>\n            <EdidUserForm avatarURL={avatarURL} onClose={handleClose} isLoading={isLoading}/>\n           {isLoading && <Loading /> }\n          </Modal>}\n        \n      </UserContainer>\n  );\n};\n\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeTheme } from 'redux/auth/operations';\nimport { selectUser } from 'redux/auth/selectores';\nimport {\n  HeaderStyled,\n  ThemeContainer,\n  ThemeList,\n  P,\n  ThemeSelect,\n  Item,\n  ItemBtn,\n} from './Header.styled';\nimport { UserInfo } from './UserInfo/UserInfo';\nimport sprite from '../../images/symbol-defs.svg';\n\nexport const Header = () => {\n  const dispatch = useDispatch();\n  const {avatarURL, name, theme} = useSelector(selectUser)\n  const [currentTheme, setCurrentTheme] = useState(theme);\n  const [isDropdownActive, setIsDropdownActive] = useState(false);\n\n  useEffect(() => {\n    document.body.classList.add(currentTheme);\n    return () => {\n      document.body.classList.remove(currentTheme);\n    };\n  }, [currentTheme]);\n\n  const themeOptions = ['light', 'dark', 'violet'];\n\n  const handleDropdownClick = () => {\n    setIsDropdownActive(!isDropdownActive);\n  };\n  const handleThemeChange = e => {\n    setCurrentTheme(e.target.value);\n    dispatch(changeTheme({theme: e.target.value}));\n  };\n\n  return (\n    \n    <HeaderStyled>\n      <ThemeContainer>\n        <ThemeSelect onClick={handleDropdownClick}>\n          <P> Theme </P>\n          <svg aria-label=\"question with round\" width=\"16px\" height=\"16px\">\n            <use href={sprite + '#icon-chevron-down'}></use>\n          </svg>\n        </ThemeSelect>\n        <ThemeList className={isDropdownActive ? 'active' : ''}>\n          {themeOptions.map(theme => (\n            <Item key={theme}>\n              <ItemBtn\n                selected={currentTheme === theme}\n                disabled={currentTheme === theme}\n                value={theme}\n                onClick={handleThemeChange}\n              >\n                {theme}\n              </ItemBtn>\n            </Item>\n          ))}\n        </ThemeList>\n      </ThemeContainer>\n\n      <UserInfo  name={name} avatarURL={avatarURL}/>\n    </HeaderStyled>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  width: 100%;\n  height: 100%;\n  background-color: var(--main-bg-color);\n`;\n\nexport const InfoText = styled.p`\n  width: 486px;\n  height: 72px;\n  color: var(--last-text-color);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 18px;\n  letter-spacing: -0.28px;\n\n  @media (max-width: 768px) {\n    font-size: 12px;\n    line-height: 16px;\n    width: 100%;\n    max-height: 80px;\n  }\n`;\n\nexport const AccentText = styled.span`\n  color: var(--button-bg-color);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 18px;\n  letter-spacing: -0.28px;\n`;\n","import { Container, InfoText, AccentText } from \"./HomeEmptyPage.styled\";\n\nexport const EmptyPage = () => {\n    return (\n        <Container>\n            <InfoText>\n                Before starting your project, it is essential\n                <AccentText>to create a board</AccentText> to visualize and track all the necessary tasks and milestones.\n                This board serves as a powerful tool to organize the workflow and ensure effective collaboration among team members.\n            </InfoText>\n        </Container>\n    );\n};","import { Sidebar } from 'components/sidebar/Sidebar';\nimport { Header } from 'components/Header/Header';\nimport { EmptyPage } from 'components/HomeEmptyPage/HomeEmptyPage';\nimport { Outlet, useLocation } from 'react-router-dom';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    backgroundColor: '#1F1F1F',\n  },\n  deskMenu: {\n    margin: 0,\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n  },\n};\n\nexport default function Home() {\n  const location = useLocation();\n  const hasAdditionalPath = location.pathname.length > '/home/'.length;\n\n  return (\n    <div style={styles.container}>\n      <Sidebar />\n      {!hasAdditionalPath ? (\n        <div style={styles.deskMenu}>\n          <Header />\n          <EmptyPage />\n        </div>\n      ) : (\n        <div style={styles.deskMenu}>\n          <Header />\n          <Outlet />\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":["WrapperBoards","styled","Boards","WrapperCreate","CreateTitle","CreateButton","IconPlus","Forma","Form","Input","Field","Label","FormTitle","DeleteTitle","WrapperDelete","Btn","FormOptions","FormQuestion","FormAnswer","Svg","IconRadioButtons","getIcon","onClickIcon","e","target","value","name","id","map","onClick","type","htmlFor","href","sprite","schema","yup","shape","required","ModalBoard","onClose","useState","icon","setIcon","currentBg","setCurrentBg","dispatch","useDispatch","ButtonClose","initialValues","onSubmit","query","resetForm","addBoard","title","console","log","validationSchema","placeholder","minLength","maxLength","component","Background","getBg","width","height","addColumn","CreateBoard","isOpen","setIsOpen","toggleModal","children","List","Item","NavItem","NavLink","WrapperProjectOffice","Project","WrapperProjectIcons","BtnContainer","IconEdit","IconDelete","EditBoard","desk","_id","editBoard","theme","DeleteBoard","useSelector","selectBoard","deleteBoard","fetchBoards","MyBoards","typeModal","setTypeModal","undefined","deskRoute","split","join","pjIcon","typeToggle","to","fetchColumns","changeBg","changeCurrentBoard","getColumns","LogOutButton","LogOutText","LogOut","logOut","fill","Container","Text","Span","Button","Image","TextButton","Title","FormicForm","FormicField","Textarea","helpSchema","Yup","email","matches","message","excludeEmptyString","text","NeedHelpForm","needHelp","handleSubmit","style","color","fontSize","NeedHelp","src","alt","WrapperTitle","NaviUser","NavDashboards","NeedHelpLogOutContainer","WrapperLogo","Logo","IconMenu","Sidebar","selectBoards","isMobile","useMediaQuery","maxWidth","useEffect","handleOutsideClick","event","closest","timeoutId","setTimeout","document","addEventListener","removeEventListener","clearTimeout","prevState","className","board","HeaderStyled","ThemeContainer","ThemeList","ThemeSelect","P","ItemBtn","disabled","selected","UserContainer","UserEmail","ImgWrapper","Img","UserForm","FormicErrorMessage","FormFields","FormIcon","Eye","Icon","FieldAvatar","NewUserSchema","avatar","test","includes","password","EdidUserForm","avatarURL","isLoading","setType","currentImage","setCurrentImage","isSubmit","setIsSubmit","handleClick","values","formData","FormData","append","update","setFieldValue","isValid","Sprite","onChange","currentTarget","files","file","reader","FileReader","onload","result","readAsDataURL","handleFileChange","Wrapper","Loading","UserInfo","modal","setModal","selectIsLoading","handleClose","Header","selectUser","currentTheme","setCurrentTheme","isDropdownActive","setIsDropdownActive","body","classList","add","remove","handleThemeChange","changeTheme","InfoText","AccentText","EmptyPage","styles","container","display","flexDirection","backgroundColor","deskMenu","margin","Home","hasAdditionalPath","useLocation","pathname","length"],"sourceRoot":""}