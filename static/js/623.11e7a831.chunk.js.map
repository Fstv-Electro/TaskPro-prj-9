{"version":3,"file":"static/js/623.11e7a831.chunk.js","mappings":"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","sources":["components/sidebar/CreateBoard/CreateBoard.styled.jsx","components/modal/modal.styled.js","components/modal/modal.jsx","components/sidebar/modalBoard/ModalBoard.styled.jsx","components/submitButton/submitButton.styled.js","components/submitButton/submitButton.jsx","components/iconRadioButtons/IconRadioButtons.styled.jsx","components/iconRadioButtons/IconRadioButtons.jsx","components/modalBtnClose/ButtonClose.styled.js","components/modalBtnClose/ButtonClose.jsx","components/background/Background.styled.jsx","redux/dashboards/selectors.js","components/background/Background.jsx","components/sidebar/modalBoard/ModalBoard.jsx","components/sidebar/CreateBoard/CreateBoard.jsx","components/sidebar/MyBoards/MyBoards.styled.jsx","components/sidebar/MyBoards/MyBoards.jsx","components/sidebar/LogOut/LogOut.styled.jsx","components/sidebar/LogOut/LogOut.jsx","components/sidebar/needHelp/needHelp.styled.js","components/sidebar/needHelp/needHelpForm.styled.js","components/sidebar/needHelp/needHelpForm.jsx","components/sidebar/needHelp/needHelp.jsx","components/sidebar/Sidebar.styled.jsx","components/sidebar/Sidebar.jsx","components/Header/Header.styled.js","components/Header/UserInfo/UserInfo.styled.js","components/Header/UserInfo/EditUserForm/EditUserForm.styled.js","components/Header/UserInfo/EditUserForm/EditUserForm.js","components/Header/Loading/Loading.styled.js","components/Header/Loading/Loading.js","components/Header/UserInfo/UserInfo.js","components/Header/Header.js","components/HeaderDashboard/HeaderDashboard.styled.jsx","components/HeaderDashboard/FilterForm.jsx","components/HeaderDashboard/HeaderDashboard.jsx","components/addColumn/addColumnForm/addColumnForm.styled.js","components/addColumn/addColumnForm/addColumnForm.jsx","components/addColumn/addColumn.jsx","components/addColumn/addColumnForm/editColumnForm.jsx","components/columnItem/columnItem.styled.js","components/columnItem/columnItem.jsx","components/MainDashboard/MainDashboard.styled.jsx","pages/homePage.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const WrapperBoards = styled.div`\n  border-bottom: 1px solid #ffffff1a;\n  margin-bottom: 9px;\n  margin-right: 24px;\n`;\n\nexport const Boards = styled.p`\n  font-size: 16px;\n  font-family: Poppins;\n  font-weight: 600;\n  color: rgba(255, 255, 255, 0.5);\n  font-size: 12px;\n  letter-spacing: -0.24px;\n`;\n\nexport const WrapperCreate = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid #ffffff1a;\n  margin-bottom: 40px;\n    margin-right: 24px;\n`;\n\nexport const CreateTitle = styled.p`\n  width: 76px;\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\n\nexport const CreateButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  width: 40px;\n  height: 36px;\n  border-radius: 8px;\n  background: #bedbb0;\n  outline: none;\n  cursor: pointer;\n  transform: scale(1);\n  transition: transform 550ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.1);\n  }\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const IconPlus = styled.svg`\n  \n  flex-shrink: 0;\n  fill: #bedbb0;\n  color: #121212;\n`;\n","import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\nexport const ModalWindow = styled.div`\n    /* min-width: 335px; */ //модалка має огортати контент \n    /* padding: 24px 24px 0 24px; */ //пропущен відступ знизу\n    position: relative;\n    padding: 24px 24px 24px 24px;\n    border-radius: 8px;\n    border: 1px solid rgba(190, 219, 176, 0.50);\n    background: #151515;\n    color: #fff;\n    box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.05);\n    @media (min-width: 768px) {\n        max-width: 400px;\n      }\n`;","import { createPortal } from \"react-dom\";\nimport { useEffect } from \"react\";\nimport { Backdrop, ModalWindow } from \"./modal.styled\";\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({onClose, children}) => {\n\n    useEffect(() => {\n        const keyDownEvent = e => {\n            if(e.code === 'Escape') {\n                onClose()\n            }\n        }\n        window.addEventListener('keydown', keyDownEvent);\n\n        return () => {\n            window.removeEventListener('keydown', keyDownEvent)\n        }\n    }, [onClose])\n \n   const onCloseBackdrop = e => {\n        if(e.currentTarget === e.target) {\n            onClose()\n        }\n    }\n    return (\n            createPortal(<Backdrop onClick={onCloseBackdrop}>\n            <ModalWindow>   \n                {children}\n            </ModalWindow>\n            </Backdrop>, modalRoot)\n    )\n         \n}","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const Forma = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Input = styled(Field)`\n  display: flex;\n  width: 280px;\n  padding: 14px 1px 14px 18px;\n  /* margin: 0 24px 0 24px; */\n  align-items: center;\n  border-radius: 8px;\n  border: 1px solid #bedbb0;\n  opacity: 0.4000000059604645;\n  background: #1f1f1f;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  color: #fff;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  /* width: 250px; */\n`;\n\nexport const Text = styled.p`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 12px;\n  letter-spacing: 0.03em;\n  margin-bottom: 10px;\n`;\n\nexport const FormTitle = styled.h2`\n  color: #fff;\n  font-size: 18px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n`;\n","import styled from '@emotion/styled';\n\nexport const SubmitBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: ${props => (props.width ? `${props.width}px` : '100%')};\n  height: ${props => `${props.height}px`};\n  border: 0;\n  border-radius: 8px;\n  background: ${props => props.bg};\n  color: ${props => props.color};\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  cursor: pointer;\n`;\n\nexport const IconPlus = styled.svg`\n  width: 28px;\n  height: 28px;\n  flex-shrink: 0;\n  margin-right: 8px;\n  fill: ${props => props.fill};\n  color: ${props => props.color};\n`;\n","import sprite from '../../images/symbol-defs.svg';\nimport { SubmitBtn, IconPlus } from './submitButton.styled';\n\n// How to use\n// import SubmitButton from './submitButton/submitButton';\n// add element <SubmitButton />\n// props:\n// width : default 100%\n// height:  default 49px\n// title:  default 49px\n// theme:  default Dark\n// icon: default false\n// addColumn: default false\n// handleClick: without Default value\n// example: <SubmitButton title=\"Send\" width=\"352\" height=\"49\" theme=\"Dark\" handleClick={YOUR METHOD NAME}/>\n// example <SubmitButton title=\"Edit\" width=\"302\" height=\"49\" theme=\"Dark\" icon={true} handleClick={YOUR METHOD NAME}/>\n// example <SubmitButton title=\"Edit\" width=\"302\" height=\"49\" theme=\"Dark\" icon={true} handleClick={YOUR METHOD NAME}/>\n// example <SubmitButton title=\"Add another column\" width=\"334\" height=\"56\" theme=\"Dark\" icon={true} addColumn={true} handleClick={YOUR METHOD NAME}/>\n\nexport default function SubmitButton({\n  title = 'Add',\n  type,\n  width,\n  height = 49,\n  theme = 'Dark',\n  icon = false,\n  addColumn = false,\n  handleClick,\n}) {\n  const bgColor = () => {\n    if (theme === 'Dark' && !addColumn) return '#BEDBB0';\n    if (theme === 'Light' && !addColumn) return '#BEDBB0';\n    if (theme === 'Violet' && !addColumn) return '#5255BC';\n    if (theme === 'Dark' && addColumn) return '#121212';\n    if (theme === 'Light' && addColumn) return '#FFFFFF';\n    if (theme === 'Violet' && addColumn) return '#FFFFFF';\n  };\n  const color = () => {\n    if (theme === 'Dark' && !addColumn) return '#161616';\n    if (theme === 'Light' && !addColumn) return '#161616';\n    if (theme === 'Violet' && !addColumn) return '#FFFFFF';\n    if (theme === 'Dark' && addColumn) return '#FFFFFF';\n    if (theme === 'Light' && addColumn) return '#161616';\n    if (theme === 'Violet' && addColumn) return '#161616';\n  };\n\n  const fill = () => {\n    if (theme === 'Dark' && !addColumn) return '#121212';\n    if (theme === 'Light' && !addColumn) return '#121212';\n    if (theme === 'Violet' && !addColumn) return '#FFFFFF';\n    if (theme === 'Dark' && addColumn) return '#FFFFFF';\n    if (theme === 'Light' && addColumn) return '#161616';\n    if (theme === 'Violet' && addColumn) return '#5255BC';\n  };\n\n  const svgColor = () => {\n    if (theme === 'Dark' && !addColumn) return '#FFFFFF';\n    if (theme === 'Light' && !addColumn) return '#FFFFFF';\n    if (theme === 'Violet' && !addColumn) return '#161616';\n    if (theme === 'Dark' && addColumn) return '#121212';\n    if (theme === 'Light' && addColumn) return '#FFFFFF';\n    if (theme === 'Violet' && addColumn) return '#FFFFFF';\n  };\n\n  return (\n    <>\n      <SubmitBtn\n        width={width}\n        height={height}\n        bg={bgColor()}\n        color={color()}\n        onClick={handleClick}\n        type=\"submit\"\n      >\n        {icon && (\n          <IconPlus aria-label=\"add\" fill={fill()} color={svgColor()}>\n            <use href={sprite + '#icon-plus-add'}></use>\n          </IconPlus>\n        )}\n        {title}\n      </SubmitBtn>\n    </>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Form = styled.div`\n  max-width: 300px;\n  margin: 10px auto;\n`;\n\nexport const FormOptions = styled.ul`\n  border: none;\n  padding: 0;\n`;\n\nexport const FormQuestion = styled.legend`\n  color: #fff;\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\n\nexport const FormAnswer = styled.li`\n  display: inline-block;\n  box-sizing: border-box;\n  vertical-align: top;\n  text-align: center;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  height: 100%;\n  width: 100%;\n  padding-right: 6px;\n  cursor: pointer;\n  opacity: 0.5;\n  transition: all 0.5s ease-in-out;\n`;\n\nexport const Input = styled.input`\n  &[type='radio'] {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n  &[type='radio']:active ~ label {\n    opacity: 1;\n  }\n  &[type='radio']:checked ~ label {\n    opacity: 1;\n  }\n`;\n\nexport const Svg = styled.svg`\n  width: 18px;\n  height: 18px;\n  stroke: #fff;\n  :hover {\n    stroke: #bedbb0;\n  }\n`;\n","import { useState } from 'react';\nimport {\n  Form,\n  FormOptions,\n  FormAnswer,\n  Label,\n  Input,\n  Svg,\n  FormQuestion,\n} from './IconRadioButtons.styled';\nimport sprite from '../../images/symbol-defs.svg';\n\nexport const IconRadioButtons = () => {\n  const [item, setItem] = useState('');\n  const icons = [\n    { name: 'Project', id: 'match_1' },\n    { name: 'star-04', id: 'match_2' },\n    { name: 'loading-03', id: 'match_3' },\n    { name: 'puzzle-piece-02', id: 'match_4' },\n    { name: 'container', id: 'match_5' },\n    { name: 'lightning-02', id: 'match_6' },\n    { name: 'colors', id: 'match_7' },\n    { name: 'hexagon-01', id: 'match_8' },\n  ];\n\n  const onClickIcon = e => {\n    setItem(e.target.value);\n  };\n  console.log(item);\n  return (\n    <>\n      <Form>\n        <FormOptions>\n          <FormQuestion>Icons</FormQuestion>\n          {icons.map(({ name, id }) => (\n            <FormAnswer key={id}>\n              <Input\n                onClick={onClickIcon}\n                type=\"radio\"\n                name=\"match\"\n                id={id}\n                value={name}\n              />\n              <Label htmlFor={id}>\n                <Svg aria-label=\"question with round\">\n                  <use href={sprite + `#icon-${name}`}></use>\n                </Svg>\n              </Label>\n            </FormAnswer>\n          ))}\n        </FormOptions>\n      </Form>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Btn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  width: 24px;\n  height: 24px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n  background-color: transparent;\n  border: transparent;\n  border-radius: 50%;\n  color: #ffffff;\n  cursor: pointer;\n  transition: all 350ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    /* border: 1px solid #bedbb0; */\n    background-color: #1f1f1f;\n    color: #bedbb0;\n  }\n`;\n\nexport const IconClose = styled.svg`\n  width: 18px;\n  height: 18px;\n  stroke: currentColor;\n  flex-shrink: 0;\n`;\n","import sprite from '../../images/symbol-defs.svg';\nimport { Btn, IconClose } from './ButtonClose.styled';\n\nexport const ButtonClose = ({ onClose }) => {\n  return (\n    <Btn onClick={onClose}>\n      <IconClose aria-label=\"exit\">\n        <use href={sprite + '#icon-x-close'}></use>\n      </IconClose>\n    </Btn>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  max-width: 300px;\n  margin: 10px auto;\n`;\n\nexport const List = styled.ul`\n  border: none;\n  padding: 0;\n`;\n\nexport const FormQuestion = styled.legend`\n  color: #fff;\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\n\nexport const Item = styled.li`\n  display: inline-block;\n  box-sizing: border-box;\n  vertical-align: top;\n  text-align: center;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  height: 100%;\n  width: 100%;\n  padding-right: 4px;\n  cursor: pointer;\n  opacity: 0.5;\n  transition: all 0.5s ease-in-out;\n`;\n\nexport const Input = styled.input`\n  &[type='radio'] {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n  &[type='radio']:active ~ label {\n    opacity: 1;\n    border: 1px solid #fff;\n  }\n  &[type='radio']:checked ~ label {\n    opacity: 1;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 28px;\n  height: 28px;\n\n  :hover,\n  :active {\n    border: 1px solid #fff;\n  }\n`;\n","// task\nexport const selectBoard = state => state.task.boards;\n\nexport const selectList = state => state.task.lists;\n\nexport const selectCard = state => state.task.cards;\n\nexport const selectBackground = state => state.task.currentBcg;\n\nexport const selectIsLoading = state => state.task.isLoading;\n\nexport const selectError = state => state.task.error;\n\nexport const selectBackgroundUrl = state => state.task.bgUrl;\n\n// task\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Wrapper,\n  List,\n  Item,\n  Label,\n  Input,\n  Img,\n  FormQuestion,\n} from './Background.styled';\nimport { backgroundUrl } from '../../redux/dashboards/operations';\nimport { selectBackgroundUrl } from '../../redux/dashboards/selectors';\n\nexport const Background = icons => {\n  const [item, setItem] = useState('');\n  const dispatch = useDispatch();\n  const selectBgIcons = useSelector(selectBackgroundUrl);\n\n  useEffect(() => {\n    dispatch(backgroundUrl());\n  }, [dispatch]);\n\n  const onClickIcon = e => {\n    setItem(e.target.value);\n  };\n  console.log(item);\n\n  return (\n    <Wrapper>\n      <List>\n        <FormQuestion>Background</FormQuestion>\n        {selectBgIcons.map(({ id, previewURL }) => (\n          <Item key={id}>\n            <Input\n              onClick={onClickIcon}\n              type=\"radio\"\n              name=\"id\"\n              id={id}\n              value={id}\n            />\n            <Label htmlFor={id}>\n              <Img src={previewURL} alt={'bg'} />\n            </Label>\n          </Item>\n        ))}\n      </List>\n    </Wrapper>\n  );\n};\n","import { useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\nimport { Forma, Label, Input, FormTitle } from './ModalBoard.styled';\nimport SubmitButton from '../../submitButton/submitButton';\nimport { IconRadioButtons } from '../../iconRadioButtons/IconRadioButtons';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { ButtonClose } from '../../modalBtnClose/ButtonClose';\n// import { bgCreateBoard } from '../../../redux/dashboards/operations';\n// import { selectBgIcon } from '../../../redux/dashboards/selectors';\nimport { Background } from '../../background/Background';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n});\n\nexport const ModalBoard = ({ onClose }) => {\n  const [name, setName] = useState('');\n  // const dispatch = useDispatch();\n  // const selectBgIcons = useSelector(selectBgIcon);\n\n  // useEffect(() => {\n  //   dispatch(bgCreateBoard());\n  // }, [dispatch]);\n\n  // console.log(selectBgIcons);\n  const handleSubmit = (query, { resetForm }) => {\n    if (!query) {\n      console.log('error');\n    } else {\n      setName(query.name);\n      console.log(name);\n      resetForm();\n    }\n    onClose();\n  };\n\n  const initialValues = {\n    name: '',\n  };\n\n  return (\n    <>\n      <ButtonClose onClose={onClose} />\n      <FormTitle>New board</FormTitle>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <Forma>\n          <Label htmlFor=\"name\">\n            <Input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Title\"\n              required\n              minLength=\"4\"\n              maxLength=\"12\"\n            />\n            <ErrorMessage name=\"name\" component=\"div\" />\n          </Label>\n\n          <SubmitButton\n            title=\"Create\"\n            width=\"302\"\n            height=\"49\"\n            theme=\"Dark\"\n            icon={true}\n            addColumn={false}\n          />\n        </Forma>\n      </Formik>\n      <IconRadioButtons />\n      <Background />\n    </>\n  );\n};\n","import { useState } from 'react';\nimport {\n  WrapperBoards,\n  Boards,\n  WrapperCreate,\n  CreateTitle,\n  CreateButton,\n  IconPlus,\n} from './CreateBoard.styled';\nimport sprite from '../../../images/symbol-defs.svg';\nimport { Modal } from 'components/modal/modal';\nimport { ModalBoard } from '../modalBoard/ModalBoard';\n\nexport const CreateBoard = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleModal = () => {\n    setIsOpen(isOpen => !isOpen);\n  };\n  return (\n    <>\n      <WrapperBoards>\n        <Boards>My boards</Boards>\n      </WrapperBoards>\n      <WrapperCreate>\n        <CreateTitle>Create a new board</CreateTitle>\n        <CreateButton type=\"button\" onClick={toggleModal}>\n          <IconPlus aria-label=\"question with round\" width=\"20px\" height=\"20px\">\n            <use href={sprite + '#icon-plus-add'}></use>\n          </IconPlus>\n        </CreateButton>\n        {isOpen && (\n          <Modal\n            onClose={toggleModal}\n            children={<ModalBoard onClose={toggleModal} />}\n          />\n        )}\n      </WrapperCreate>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding-left: 0;\n  margin: 0;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 61px;\n  width: 100%;\n  /* border-right: 4px solid #bedbb0; */\n  background-color: #1f1f1f;\n  margin-bottom: 4px;\n  color: #fff;\n  &:after {\n    content: '';\n    display: flex;\n    position: absolute;\n    right: 0;\n    border-radius: 4px 0px 0px 4px;\n    background: #bedbb0;\n    width: 4px;\n    height: 61px;\n  }\n`;\n\nexport const WrapperProjectOffice = styled.button`\n  display: flex;\n  align-items: center;\n  color: #fff;\n  border: none;\n  background: none;\n  cursor: pointer;\n`;\n\nexport const Project = styled.p`\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  margin-left: 8px;\n`;\n\nexport const WrapperProjectIcons = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: 20px;\n`;\n\nexport const IconButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: #fff;\n`;\n","import {\n  List,\n  Item,\n  WrapperProjectOffice,\n  Project,\n  WrapperProjectIcons,\n  IconButton,\n} from './MyBoards.styled';\nimport sprite from '../../../images/symbol-defs.svg';\n\nexport const MyBoards = (desk) => {\n  if (desk.desk === undefined) {\n    return;\n  }\n\n  const pjIcon = `#${desk.desk.icon}`;\n  return (\n    <List>\n      <Item>\n        <WrapperProjectOffice onClick={() => {}}>\n          <svg aria-label=\"question with round\" width=\"18px\" height=\"16px\">\n            <use href={sprite + pjIcon}></use>\n          </svg>\n          <Project>{desk.desk.title}</Project>\n        </WrapperProjectOffice>\n        <WrapperProjectIcons>\n          <IconButton onClick={() => {}}>\n            <svg aria-label=\"question with round\" width=\"16px\" height=\"16px\">\n              <use href={sprite + `#icon-pencil-01`}></use>\n            </svg>\n          </IconButton>\n          <IconButton onClick={() => {}}>\n            <svg aria-label=\"question with round\" width=\"16px\" height=\"16px\">\n              <use href={sprite + '#icon-trash-04'}></use>\n            </svg>\n          </IconButton>\n        </WrapperProjectIcons>\n      </Item>\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const LogOutButton = styled.button`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  background: none;\n  border: none;\n  padding: 0;\n`;\n\nexport const LogOutText = styled.span`\n  font-size: 16px;\n  font-family: Poppins;\n  font-weight: 500;\n  color: #fff;\n  margin-left: 14px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { logOut } from 'redux/auth/operations';\nimport { LogOutButton, LogOutText } from './LogOut.styled';\nimport sprite from '../../../images/symbol-defs.svg';\n\nexport const LogOut = () => {\n  const dispatch = useDispatch();\n  return (\n    <LogOutButton type=\"button\" onClick={() => dispatch(logOut())}>\n      <svg\n        aria-label=\"question with round\"\n        width=\"24px\"\n        height=\"24px\"\n        fill=\"inherit\"\n      >\n        <use href={sprite + '#icon-login'}></use>\n      </svg>\n      <LogOutText>Log out</LogOutText>\n    </LogOutButton>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 212px;\n  padding: 20px;\n  margin-bottom: 20px;\n  margin-right: 24px;\n  border-radius: 8px;\n  background: #1f1f1f;\n  @media (min-width: 768px) {\n    max-width: 212px;\n  }\n`;\n\nexport const Text = styled.p`\n  color: #fff;\n  font-size: 12px;\n  font-family: 'Poppins';\n  line-height: 20px;\n  @media (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const Span = styled.span`\n  color: #bedbb0;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  font-size: 12px;\n  font-weight: 500;\n  padding: 0;\n  border: none;\n  color: #fff;\n  background: #1f1f1f;\n  @media (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\nexport const Image = styled.img`\n  width: 54px;\n  height: 78px;\n  margin-bottom: 14px;\n`;\nexport const TextButton = styled.span`\n  margin-left: 8px;\n  :hover {\n    color: #bedbb0;\n  }\n`;\n\nexport const Svg = styled.svg`\n  stroke: #fff;\n  :hover {\n    stroke: #bedbb0;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { Field as FormicField, Form as FormicForm } from 'formik';\n\nexport const Title = styled.h2`\n    margin: 0 0 24px 0;\n    font-size: 18px;\n    font-weight: 500;\n`;\n\nexport const Form = styled(FormicForm)`\n    display: flex;\n    flex-direction: column;\n    gap: 14px;\n`\n\nexport const Field = styled(FormicField)`\n    max-width: 100%;\n    padding-top: 14px;\n    padding-bottom: 14px;\n    padding-left: 18px;\n    border-radius: 8px;\n    border: 1px solid #BEDBB0;\n    opacity: 0.4000000059604645;\n    color: #FFF;\n    background-color: transparent; \n`;\n\nexport const Textarea = styled(FormicField)`\n    max-width: 100%;\n    height: 120px;\n    margin-bottom: 40px;\n    padding-top: 14px;\n    padding-bottom: 14px;\n    padding-left: 18px;\n    border-radius: 8px;\n    border: 1px solid #BEDBB0;\n    opacity: 0.4000000059604645;\n    color: #FFF;\n    background-color: transparent;\n     \n`;","import { useDispatch } from \"react-redux\";\nimport { needHelp } from \"redux/dashboards/operations\";\nimport SubmitButton from \"../../submitButton/submitButton\";\nimport { Formik, ErrorMessage } from 'formik';\nimport { Title, Field, Form, Textarea } from './needHelpForm.styled';\nimport { ButtonClose } from 'components/modalBtnClose/ButtonClose';\nimport * as Yup from 'yup';\n\nconst helpSchema = Yup.object().shape({\n  email: Yup.string()\n    .matches(\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n      {\n        message: 'Invalid Email',\n        excludeEmptyString: true,\n      }\n    )\n    .required('Please, enter your email'),\n  text: Yup.string()\n    .required('Please, enter your comment'),\n});\n\nexport const NeedHelpForm = ({onClose}) => {\n    const dispatch = useDispatch();\n\n    function handleSubmit(value) {\n        console.log(value);\n        const { email, text } = value;\n        dispatch(needHelp({email, text}))\n        onClose()\n      }\n    return (\n        <>\n        <ButtonClose onClose={onClose} />\n        <Title>Need Help</Title>\n        <Formik\n        initialValues={{ email: '', text: '' }}\n          validationSchema={helpSchema}\n          onSubmit={(value, { resetForm }) => {\n            handleSubmit(value);\n            resetForm();\n          }}>\n            <Form>\n            <Field type=\"email\" name=\"email\" placeholder=\"Enter your email\" />\n            <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                style={{\n                  color: 'red',\n                  fontSize: 14,\n                }}\n              />\n              <Textarea type=\"text\" name=\"text\" placeholder=\"Enter your comment\" component=\"textarea\" />\n              <ErrorMessage\n                name=\"text\"\n                component=\"div\"\n                style={{\n                  color: 'red',\n                  fontSize: 14,\n                }}\n              />\n              <SubmitButton title=\"Send\" width=\"352\" height=\"49\" theme=\"Dark\"/>\n            </Form>\n        </Formik>\n        </>\n    )\n\n}","import { useState } from 'react';\nimport {\n  Container,\n  Text,\n  Span,\n  Button,\n  Image,\n  TextButton,\n  Svg\n} from './needHelp.styled';\nimport background from '../../../images/help.png';\nimport sprite from '../../../images/symbol-defs.svg';\nimport { Modal } from 'components/modal/modal';\nimport { NeedHelpForm } from './needHelpForm';\n\nexport const NeedHelp = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleModal = () => {\n    setIsOpen(isOpen => !isOpen)\n  }\n  return (\n    <Container>\n      <Image src={background} alt=\"Logo\" />\n      <Text>\n        If you need help with <Span>TaskPro</Span>, check out our support\n        resources or reach out to our customer support team.\n      </Text>\n      <Button onClick={toggleModal}>\n        <Svg aria-label=\"question with round\" width=\"20px\" height=\"20px\">\n          <use href={sprite + '#icon-help-circle'}></use>\n        </Svg>\n        <TextButton>Need help?</TextButton>\n      </Button>\n      {isOpen && <Modal onClose={toggleModal} children={<NeedHelpForm onClose={toggleModal}/>} />}\n    </Container>\n  );\n};\n\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 260px;\n  height: calc(100vh - 24px);\n  align-items: center;\n  position: relative;\n  margin: 0;\n  padding: 24px 0 0 24px;\n  color: #fff;\n  background: #121212;\n`;\n\nexport const WrapperTitle = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 64px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 16px;\n  font-family: Poppins;\n  font-weight: 600;\n  letter-spacing: -0.64px;\n`;\n\nexport const NaviUser = styled.div`\n  /* display: flex;\n  flex-direction: column;\n  justify-content: space-between; */\n  /* height: 100%; */\n  width: 100%;\n  /* gap:28px; */\n`;\n\nexport const NavDashboards = styled.nav`\n  /* margin-bottom: auto; */\n`;\n\nexport const NeedHelpLogOutContainer = styled.div`\n  margin-top: auto;\n  margin-bottom: 28px;\n`;\n\nexport const WrapperLogo = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 8px;\n  background-color: #1f1f1f;\n  border-radius: 5px;\n`;\n\nexport const Logo = styled.svg`\n  width: 32px;\n  height: 32px;\n  flex-shrink: 0;\n  fill: #1f1f1f;\n  color: #121212;\n`;\n","import { CreateBoard } from './CreateBoard/CreateBoard';\nimport { MyBoards } from './MyBoards/MyBoards';\nimport { LogOut } from './LogOut/LogOut';\nimport { NeedHelp } from './needHelp/needHelp';\nimport {\n  Container,\n  WrapperTitle,\n  Title,\n  WrapperLogo,\n  NavDashboards,\n  NaviUser,\n  NeedHelpLogOutContainer,\n  Logo,\n} from './Sidebar.styled';\nimport sprite from '../../../src/images/symbol-defs.svg';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectBoard } from 'redux/dashboards/selectors';\nimport { fetchBoards } from 'redux/dashboards/operations';\nimport { useEffect } from 'react';\n\nexport const Sidebar = () => {\n  const dispatch = useDispatch();\n  const selectBoards = useSelector(selectBoard);\n  // const isLoading = useSelector(selectIsLoading);\n  // const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchBoards());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <NaviUser>\n        <WrapperTitle>\n          <WrapperLogo>\n            <Logo aria-label=\"question with round\" width=\"32px\" height=\"32px\">\n              <use href={sprite + '#icon-icon'}></use>\n            </Logo>\n          </WrapperLogo>\n\n          <Title>Task Pro</Title>\n        </WrapperTitle>\n        <CreateBoard />\n      </NaviUser>\n      <NavDashboards>\n        <MyBoards />\n        {selectBoards.map(board => (\n          <MyBoards key={board._id} id={board._id} desk={board} />\n        ))}\n      </NavDashboards>\n      <NeedHelpLogOutContainer>\n        <NeedHelp />\n        <LogOut />\n      </NeedHelpLogOutContainer>\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const HeaderStyled = styled.header`\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    width: 100%; \n    height: 68px;\n    background: #161616;\n\n`\n\nexport const ThemeContainer = styled.div`\n    position: relative;\n    display: inline-block;\n    width: 70px;\n    height: auto;\n    margin-right: 14px;\n    color: rgba(255, 255, 255, 0.80);\n\n}     \n`\n\nexport const ThemeList = styled.ul`\n    position: absolute;\n    top: 26px;\n    left: -12px;\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: repeat(3, 1fr);\n    grid-column-gap: 0px;\n    grid-row-gap: 4px;\n    margin: 0px;\n    max-height: 0px;\n    padding: 0 44px 0 18px;\n    \n    overflow: hidden;\n    list-style: none;\n    cursor: pointer;\n    background: #161616;\n    border-radius: 8px;\n    transition: all 0.3s ease-out;\n    transition: transform 550ms cubic-bezier(0.4, 0, 0.2, 1);\n    z-index: 1000;\n\n      &.active  {\n        max-height: 107px;\n        padding: 18px 44px 18px 18px;\n      }\n  `\nexport const ThemeSelect = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.3s ease-out;\n  transition: transform 550ms cubic-bezier(0.4, 0, 0.2, 1);\n  padding: 10px 1px;\n\n  &:hover{\n    text-shadow: 0 1px 4px rgba(190, 219, 176, 1);\n    transform: scale(1.1);\n  }\n`\n\nexport const P = styled.p`\n    padding: 0;\n    margin: 0;\n    font-size: 14px;\n    font-weight: 500;\n    letter-spacing: -0.28px;\n    margin-right: 4px;\n`\n\nexport const Item = styled.li`\n    \n`;\n\nexport const ItemBtn = styled.button`\n  height: 21px;\n  margin: 0;\n  padding: 0;\n  text-align: left;\n  text-transform: capitalize;\n  font-size: 14px;\n  letter-spacing: -0.28px;\n  border: none;\n  background: transparent;\n  cursor: ${({ disabled }) => (disabled ? '' : 'pointer')};\n  color: ${({ selected }) => (selected ? '#BEDBB0' : 'rgba(255, 255, 255, 0.50);')};\n  transition: all 0.3s ease-out;\n   \n    &:hover{\n      text-shadow:${({ disabled }) => (!disabled ? '0 1px 4px rgba(190, 219, 176, 1)' : '')};\n      transform: ${({ disabled }) => (!disabled ? 'scale(1.1)' : 'scale(1)')};\n      \n    }\n`;\n\n\n","import styled from '@emotion/styled';\n\nexport const UserContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: auto;\n    color: rgba(255, 255, 255, 1);\n    margin-right: 24px;\n`;\nexport const UserEmail = styled.p`\n    font-size: 14px;\n    font-weight: 500;\n    letter-spacing: -0.28px;\n    margin-right: 8px;\n`;\n\nexport const ImgWrapper = styled.div`\n    width: 32px;\n    height: 32px;\n    border-radius: 8px;\n    overflow: hidden;\n    cursor: pointer;\n    transition: all 0.3s ease-out;\n    transition: transform 550ms cubic-bezier(0.4, 0, 0.2, 1);\n        &:hover{\n            box-shadow: 0px 0px 11px 0px rgba(190, 219, 176, 1);\n            transform: scale(1.1);\n        }\n`\nexport const Img = styled.img`\n        width: 100%;\n\t\theight: 100%;\n\t\tobject-fit: cover;\n`","import styled from '@emotion/styled';\nimport { Field as FormicField, Form as FormicForm } from 'formik';\n\nexport const Container = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n`;\n\nexport const UserForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  border-radius: 8px;\n  }\n`;\n\n\nexport const Title = styled.h3`\n  color: #fff;\n  font-size: 18px;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin: 0;\n`;\n\nexport const Form = styled(FormicForm)`\n  display: flex;\n  gap: 24px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const FormFields = styled.div`\n  display: flex;\n  gap: 14px;\n  flex-direction: column;\n`;\n\nexport const Field = styled(FormicField)`\n  font-size: 14px;\n  font-family: 'Poppins';\n  letter-spacing: -0.28px;\n\n  width: 269px;\n  height: 49px;\n  padding-left: 18px;\n  background-color: transparent;\n  color: white;\n  border-radius: 8px;\n  border: 1px solid #bedbb0;\n  opacity: 0.4000000059604645;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n\n\n  @media screen and (min-width: 768px) {\n    width: 326px;\n    height: 49px;\n  }\n`;\n\nexport const Button = styled.button`\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  letter-spacing: -0.28px;\n\n  padding: 14px;\n  width: 100%;\n\n  background-color: #bedbb0;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n   \n    &:active:not(:disabled) {\n      position:relative;\n      top:1px;\n      box-shadow: -4px -4px 43px 2px rgba(34, 60, 80, 0.2) inset;\n    }\n  }\n`;\n\nexport const FormIcon = styled.span`\n  position: relative;\n  display: block;\n`;\n\nexport const Eye = styled.button`\n  position: absolute;\n  top: 50%;\n  right: 12px;\n  transform: translateY(-50%);\n\n  background-color: transparent;\n  border: none;\n  opacity: 0.4000000059604645;\n`;\n\nexport const Icon = styled.svg`\n  width: 18px;\n  height: 18px;\n`;\n\nexport const Label = styled.label`\n    width: 68px;\n    height: 79px;\n    margin: 25px auto 0 auto;\n    cursor: pointer;\n`\nexport const FieldAvatar = styled.input`\n    display: none;\n`\nexport const ImgWrapper = styled.div`\n    position: relative;\n    width: 68px;\n    height: 68px;\n    border-radius: 8px;\n    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    transition: transform 550ms cubic-bezier(0.4, 0, 0.2, 1);\n      \n      &:hover{\n        box-shadow: 0px 0px 11px 0px rgba(190, 219, 176, 1);\n        transform: scale(1.1);\n      }\n\n      &:hover svg{\n        top: 50%;\n        box-shadow: 0px 0px 11px 0px rgba(190, 219, 176, 1);\n      }\n\n\n`\nexport const Img = styled.img`\n    width: 100%;\n\t\theight: 100%;\n\t\tobject-fit: cover;\n    border-radius: 8px;\n`\nexport const IconPlus = styled.svg`\n  position: absolute;\n  top: 98%;\n  left: 50%;\n  transform:translate(-50%, -50%);\n  transition: transform 550ms cubic-bezier(0.4, 0, 0.2, 1);\n  width: 24px;\n  height: 24px;\n  fill: ${props => props.fill};\n  color: ${props => props.color};\n`;","import { Formik, ErrorMessage } from 'formik';\nimport {\n  Container,\n  Title,\n  UserForm,\n  Form,\n  Field,\n  FormFields,\n  FormIcon,\n  Icon,\n  Eye,\n  ImgWrapper,\n  Img,\n  FieldAvatar,\n  IconPlus,\n  Label,\n  Button,\n} from './EditUserForm.styled';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsError } from 'redux/auth/selectores';\nimport { update } from 'redux/auth/operations';\nimport Sprite from '../../../../images/symbol-defs.svg'\nimport * as Yup from 'yup';\nimport Notiflix from 'notiflix';\n\n\nconst NewUserSchema = Yup.object().shape({\n  avatar: Yup.mixed()\n    .test('fileType', 'Invalid file format', (value) => {\n      if (!value) return true; \n      const supportedFormats = ['image/png', 'image/jpeg', 'image/jpg'];\n      return supportedFormats.includes(value.type);\n    }),\n  name: Yup.string()\n    .matches(/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/, {\n      message:\n        \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n      excludeEmptyString: true,\n    })\n    .required('Required'),\n  email: Yup.string()\n    .matches(\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n      {\n        message: 'Email error',\n        excludeEmptyString: true,\n      }\n    )\n    .required('Required'),\n  password: Yup.string()\n    .matches(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{5,}$/, {\n      message: 'Password error',\n      excludeEmptyString: true,\n    })\n    .required('Required'),\n});\n\nNotiflix.Notify.init({\n  position: 'right-bottom',\n});\n\nexport const  EdidUserForm = ({avatarURL, onClose}) => {\n  const dispatch = useDispatch();\n  const [type, setType] = useState('password');\n  const [currentImage, setCurrentImage] = useState(avatarURL);\n  const isError = useSelector(selectIsError);\n\n  function handleSubmit(value) {\n    const { avatar, name, email, password  } = value;\n    \n    const formData = new FormData();\n    if (avatar){\n      formData.append('avatar', avatar);\n    }\n    formData.append('name', name);\n    formData.append('email', email);\n    formData.append('password', password);\n    \n    dispatch(update(formData));\n  }\n\n  function handleClick() {\n    switch (type) {\n      case 'text':\n        return setType('password');\n      case 'password':\n        return setType('text');\n\n      default:\n        break;\n    }\n  };\n\n  function handleFileChange(event) {\n    const file = event; \n    if (!file) {\n      return;\n    }\n    const reader = new FileReader(); \n    \n    reader.onload = function (e) {\n      setCurrentImage(e.target.result); \n    };\n  \n    reader.readAsDataURL(file);\n  }\n  \n  if (isError) {\n    Notiflix.Notify.warning('Error update date');\n  }\n\n  return (\n    <Container>\n      <UserForm>\n        <Title>Edit profile</Title>\n          \n        <Formik\n          initialValues={{name: '', email: '', password: ''  }}\n          validationSchema={NewUserSchema}\n          onSubmit={(values, { resetForm }) => {\n            handleSubmit(values);\n            resetForm();\n          }}\n        >\n           {({ setFieldValue, isValid }) => (\n          <Form>\n            <FormFields >\n              <Label htmlFor=\"avatar\">\n              <ImgWrapper >\n              {currentImage ? (\n                <Img src={currentImage} alt=\"User picture\" />\n                ) : (\n                <svg aria-label=\"User picture\" width=\"68px\" height=\"68px\">\n                  <use href={Sprite + '#icon-user'}></use>\n                </svg>\n                )}\n                <IconPlus aria-label=\"add\" fill=\"rgba(190, 219, 176, 1)\" color=\"rgba(22, 22, 22, 1)\">\n                  <use href={Sprite + '#icon-plus-add'}></use>\n                </IconPlus>\n              </ImgWrapper>\n              </Label>\n              <FieldAvatar \n                    id=\"avatar\" \n                    type=\"file\" \n                    name=\"avatar\" \n                    onChange={(event) => {\n                      setFieldValue('avatar', event.currentTarget.files[0]);\n                      handleFileChange(event.currentTarget.files[0])\n                    }}\n              />               \n              <ErrorMessage\n                name=\"avatar\"\n                component=\"div\"\n                style={{\n                  color: 'white',\n                }}\n              />\n\n              <Field type=\"text\" name=\"name\" placeholder=\"Ivetta\" />\n              <ErrorMessage\n                name=\"name\"\n                component=\"div\"\n                style={{\n                  color: 'white',\n                }}\n              />\n              <Field type=\"email\" name=\"email\" placeholder=\"ivetta34@gmail.com\" />\n              <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                style={{\n                  color: 'white',\n                }}\n              />\n              <FormIcon>\n                <Field\n                  type={type}\n                  name=\"password\"\n                  placeholder=\"ivetta1999.23\"\n                />\n                <ErrorMessage\n                  name=\"password\"\n                  component=\"div\"\n                  style={{\n                    color: 'white',\n                  }}\n                />\n                <Eye type=\"button\" onClick={handleClick}>\n                  <Icon aria-label=\"Logo\">\n                    <use href={Sprite + '#icon-eye'}></use>\n                  </Icon>\n                </Eye>\n              </FormIcon>\n            </FormFields>\n            <Button type=\"submit\" disabled={!isValid} > Send</Button>\n          </Form>\n         )}\n        </Formik>\n      </UserForm>\n    </Container>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n    position: absolute;\n    display: inline-block;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform:translate(-50%, -50%);\n    width: 80px;\n    height: 80px;\n  \n        & div {\n            position: absolute;\n            border: 4px solid #fff;\n            opacity: 1;\n            border-radius: 50%;\n            animation: lds-ripple 1s cubic-bezier(0, 0.2, 0.8, 1) infinite;\n        }\n        & div:nth-of-type(2) {\n            animation-delay: -0.5s;\n        }\n  @keyframes lds-ripple {\n    0% {\n      top: 36px;\n      left: 36px;\n      width: 0;\n      height: 0;\n      opacity: 0;\n    }\n    4.9% {\n      top: 36px;\n      left: 36px;\n      width: 0;\n      height: 0;\n      opacity: 0;\n    }\n    5% {\n      top: 36px;\n      left: 36px;\n      width: 0;\n      height: 0;\n      opacity: 1;\n    }\n    100% {\n      top: 0px;\n      left: 0px;\n      width: 72px;\n      height: 72px;\n      opacity: 0;\n    }\n  }\n`\n  ","import {Wrapper} from './Loading.styled'\nexport const Loading = () => {\n    return (\n        <Wrapper>\n            <div></div>\n            <div></div>\n        </Wrapper>\n    )\n}\n","import { useState } from 'react';\nimport { UserContainer, UserEmail, ImgWrapper, Img } from \"./UserInfo.styled\";\nimport { Modal } from '../../modal/modal';\nimport { ButtonClose } from 'components/modalBtnClose/ButtonClose';\nimport { EdidUserForm }  from './EditUserForm/EditUserForm'\nimport sprite from '../../../images/symbol-defs.svg';\nimport { Loading } from '../Loading/Loading';\nimport { useSelector } from \"react-redux\";\nimport { selectIsLoading } from 'redux/auth/selectores';\n\nexport const UserInfo = ({name=\"user\", avatarURL}) => {\n  const [modal, setModal] = useState(false);\n  const isLoading = useSelector(selectIsLoading);\n\n  const handleModalOpen = () => setModal(true);\n  const handleClose = () => setModal(false);\n\n  return (\n      <UserContainer>\n        <UserEmail>{name}</UserEmail>\n        <ImgWrapper onClick={handleModalOpen}>\n          {avatarURL ? (\n            <Img src={avatarURL} alt=\"User picture\" />\n          ) : (\n            <svg aria-label=\"User picture\" width=\"32px\" height=\"32px\">\n                <use href={sprite + '#icon-user'}></use>\n            </svg>\n          )}\n        </ImgWrapper>\n        {modal && \n          <Modal onClose={handleClose}>\n            <ButtonClose onClose={handleClose}/>\n            <EdidUserForm avatarURL={avatarURL} />\n           {isLoading && <Loading /> }\n          </Modal>}\n        \n      </UserContainer>\n  );\n};\n\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeTheme } from 'redux/auth/operations';\nimport { selectUser } from 'redux/auth/selectores';\nimport {\n  HeaderStyled,\n  ThemeContainer,\n  ThemeList,\n  P,\n  ThemeSelect,\n  Item,\n  ItemBtn,\n} from './Header.styled';\nimport { UserInfo } from './UserInfo/UserInfo';\nimport sprite from '../../images/symbol-defs.svg';\n\nexport const Header = () => {\n  const dispatch = useDispatch();\n  const {avatarURL, name, theme} = useSelector(selectUser)\n  const [currentTheme, setCurrentTheme] = useState(theme);\n  const [isDropdownActive, setIsDropdownActive] = useState(false);\n\n  useEffect(() => {\n    document.body.classList.add(currentTheme);\n    return () => {\n      document.body.classList.remove(currentTheme);\n    };\n  }, [currentTheme]);\n\n  const themeOptions = ['light', 'dark', 'violet'];\n\n  const handleDropdownClick = () => {\n    setIsDropdownActive(!isDropdownActive);\n  };\n  const handleThemeChange = e => {\n    setCurrentTheme(e.target.value);\n    dispatch(changeTheme({theme: e.target.value}));\n  };\n\n  return (\n    \n    <HeaderStyled>\n      <ThemeContainer>\n        <ThemeSelect onClick={handleDropdownClick}>\n          <P> Theme </P>\n          <svg aria-label=\"question with round\" width=\"16px\" height=\"16px\">\n            <use href={sprite + '#icon-chevron-down'}></use>\n          </svg>\n        </ThemeSelect>\n        <ThemeList className={isDropdownActive ? 'active' : ''}>\n          {themeOptions.map(theme => (\n            <Item key={theme}>\n              <ItemBtn\n                selected={currentTheme === theme}\n                disabled={currentTheme === theme}\n                value={theme}\n                onClick={handleThemeChange}\n              >\n                {theme}\n              </ItemBtn>\n            </Item>\n          ))}\n        </ThemeList>\n      </ThemeContainer>\n\n      <UserInfo  name={name} avatarURL={avatarURL}/>\n    </HeaderStyled>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  width: calc(100% - 20px);\n  padding: 24px 10px;\n  \n    @media (min-width: 1280px) {\n        height: 48px;\n    };\n    @media (min-width: 768px) {\n        height: 80px;\n    };\n    @media (min-width: 375px) {\n        height: 134px;\n    };\n    @media (max-width: 374px) {\n        max-height: 134px;\n    };\n`;\n\nexport const TitleDashBoard = styled.p`    \n    font-size: 18px;\n    font-weight: 500;\n    letter-spacing: -0.36px;\n    color: #FFF;\n    margin: 0;\n`;\n\nexport const TitleFilter = styled.p`\n    font-size: 14px;\n    font-weight: 500;\n    letter-spacing: -0.28px;\n    color: rgba(255, 255, 255, 0.80);\n`;\n\nexport const FilterButton = styled.button`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 2px;\n    background-color: transparent;\n    border: none;\n    outline: none;\n`;","import { Modal } from \"components/modal/modal\";\nimport { Field, Formik, Form } from 'formik';\n// import { useDispatch } from 'react-redux';\nimport { ButtonClose } from 'components/modalBtnClose/ButtonClose';\n\n// import { setFilter } from 'redux/dashboards/operations';\n\nexport const Filter = ({onClose}) => {\n    // const dispatch = useDispatch();\n\n    const initialValues = {\n        currentBg: 0,\n        currentPrority: 'without priority',\n    };\n\n    return (\n        <Modal onClose={onClose}>\n            <ButtonClose onClose={onClose} />\n            <h2>Filters</h2>\n            <Formik\n                initialValues={initialValues}\n            >\n                <Form autocomplete='off'>\n                    {/* тут маж бути компонент backgroundAvatars */}\n                    <div role=\"group\" aria-labelledby=\"my-radio-group\">\n                        <label>\n                            <Field type='radio' name='currentPrority' value='Without priority'/>\n                        </label>\n                        <label>\n                            <Field type='radio' name='currentPrority' value='Low'/>\n                        </label>\n                        <label>\n                            <Field type='radio' name='currentPrority' value='Medium'/>\n                        </label>\n                        <label>\n                            <Field type='radio' name='currentPrority' value='High'/>\n                        </label>\n                    </div>\n                </Form>\n            </Formik>\n        </Modal>\n    )\n}","// import { useDispatch } from \"react-redux\";\nimport { Container, TitleDashBoard, TitleFilter, FilterButton } from \"./HeaderDashboard.styled\";\nimport sprite from '../../images/symbol-defs.svg';\nimport { useState } from \"react\";\nimport { Filter } from \"./FilterForm\";\n\n\nexport const DashboardHeader = () => {\n    // const dispath = useDispatch();\n    // const crntBoard = useSelector(currentBoard);\n    const [isOpen, setIsOpen] = useState();\n    \n    const toggleModal = () => {\n        setIsOpen(isOpen => !isOpen)\n    };\n\n    return (\n        <Container>\n            <TitleDashBoard>current dashboard title</TitleDashBoard>\n            <FilterButton type=\"button\" onClick={toggleModal}>\n                <svg aria-label=\"filter icon\" width='16' height='16'>\n                <use href={sprite + '#icon-filter'}></use>\n                </svg>\n            <TitleFilter>Filters</TitleFilter>\n            </FilterButton>\n            {isOpen && <Filter onClose={ toggleModal } />}\n        </Container>\n    );\n};","import styled from '@emotion/styled';\n\nimport {\n  Form as FormicForm,\n  Field as FormicField,\n  ErrorMessage as FormicError,\n} from 'formik';\n\nexport const FormField = styled.label`\n  display: flex;\n  flex-direction: column;\n  text-align: start;\n  font-size: 20px;\n`;\n\nexport const Field = styled(FormicField)`\n  height: 47px;\n  padding-left: 18px;\n  padding-right: 18px;\n  background-color: #1f1f1f;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n\n  border: 1px solid rgba(190, 219, 176, 0.5);\n  border-color: rgba(190, 219, 176, 0.5);\n  border-radius: 8px;\n\n  color: #fff;\n  font-size: 14px;\n  font-family: Poppins;\n  letter-spacing: -0.28px;\n  &:focus {\n    outline-color: #bedbb0;\n    box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  }\n`;\n\nexport const Form = styled(FormicForm)`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  width: 100%; /* Задаємо початкову ширину 287px */\n\n  @media (min-width: 320px) and (max-width: 767px) {\n    width: 287px; /* Ширина залишається 287px для екранів шириною від 320px до 767px */\n  }\n\n  @media (min-width: 768px) {\n    width: 302px; /* Задаємо ширину 302px для екранів шириною від 768px */\n  }\n`;\n\nexport const Title = styled.label`\n  margin-bottom: 24px;\n\n  color: #fff;\n  font-size: 18px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n`;\n\n// export const SubmitBtn = styled.button`\n//   display: flex;\n//   width: 302px;\n//   padding: 10px 0px 11px 0px;\n//   justify-content: center;\n//   align-items: center;\n//   border-radius: 8px;\n//   background: #bedbb0;\n//   color: #161616;\n//   font-size: 14px;\n//   font-family: Poppins;\n//   font-weight: 500;\n//   letter-spacing: -0.28px;\n//   cursor: pointer;\n//   transform: scale(1);\n//   transition: transform 550ms cubic-bezier(0.4, 0, 0.2, 1);\n\n//   &:hover {\n//     transform: scale(0.97);\n//   }\n\n//   &:focus {\n//     transform: scale(1.03);\n//   }\n// `;\n\n// export const IconPlus = styled.svg`\n//   width: 28px;\n//   height: 28px;\n//   flex-shrink: 0;\n//   margin-right: 8px;\n//   fill: #121212;\n//   color: #ffffff;\n// `;\n\nexport const ErrorMessage = styled(FormicError)`\n  color: tomato;\n  font-size: 12px;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport { Modal } from '../../modal/modal';\nimport { ButtonClose } from 'components/modalBtnClose/ButtonClose';\nimport {\n  Form,\n  FormField,\n  Field,\n  ErrorMessage,\n  Title,\n} from './addColumnForm.styled';\nimport SubmitButton from '../../submitButton/submitButton';\nimport { useDispatch } from 'react-redux';\nimport { addColumn } from 'redux/dashboards/operations';\n\nconst initialValues = {\n  title: '',\n};\n\nexport const AddColumnForm = ({ id, onClose }) => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  const widthButton = () => {\n    let a;\n    console.log('Ширина вікна:', windowWidth);\n\n    if (windowWidth > 767) {\n      a = '302';\n      console.log(a);\n    } else {\n      a = '287';\n      console.log(a);\n    }\n\n    return a;\n  };\n\n  const handleSubmit = (values, actions) => {\n    // const formData = new FormData();\n    // formData.append('parentBoard', id);\n    // formData.append('title', values.title);\n\n    // for (let [key, value] of formData.entries()) {\n    //   console.log(key, value);\n    // }\n    // dispatch(addColumn(formData));\n    actions.resetForm();\n    dispatch(\n      addColumn({\n        parentBoard: id,\n        ...values,\n      })\n    );\n    console.log({\n      parentBoard: id,\n      ...values,\n    });\n\n    onClose();\n  };\n\n  const validateForm = values => {\n    const errors = {};\n\n    if (!values.title) {\n      errors.title = 'Field must not be empty';\n    }\n\n    return errors;\n  };\n\n  return (\n    <Modal onClose={onClose}>\n      <ButtonClose onClose={onClose} />\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validate={validateForm}\n      >\n        <Form autoComplete=\"off\">\n          <FormField htmlFor=\"title\">\n            <Title htmlFor=\"title\">Add column</Title>\n            <Field type=\"text\" name=\"title\" placeholder=\"Title\" />\n            <ErrorMessage name=\"title\" component=\"span\" />\n          </FormField>\n          <SubmitButton\n            title=\"Add\"\n            type=\"submit\"\n            width={widthButton()}\n            height=\"49\"\n            theme=\"Dark\"\n            icon={true}\n          />\n        </Form>\n      </Formik>\n    </Modal>\n  );\n};\n","import { useState } from 'react';\nimport { AddColumnForm } from './addColumnForm/addColumnForm';\n// import sprite from '../../images/symbol-defs.svg';\n// import { Button, IconPlus } from './addColumn.styled';\nimport SubmitButton from '../submitButton/submitButton';\n\nexport const AddColumn = ({ _id = '649d310119f7c8d34db12c34' }) => {\n  const [modal, setModal] = useState(false);\n\n  const handleOpen = () => setModal(true);\n  const handleClose = () => setModal(false);\n\n  const columns = [1]; // для тесту\n  const buttonText = columns.length > 0 ? 'Add another column' : 'Add column';\n\n  return (\n    <>\n      <SubmitButton\n        title={buttonText}\n        type=\"button\"\n        width=\"334\"\n        height=\"56\"\n        theme=\"Dark\"\n        icon={true}\n        addColumn={true}\n        handleClick={handleOpen}\n      />\n\n      {modal && <AddColumnForm id={_id} onClose={handleClose} />}\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport { Modal } from '../../modal/modal';\nimport { ButtonClose } from 'components/modalBtnClose/ButtonClose';\nimport {\n  Form,\n  FormField,\n  Field,\n  ErrorMessage,\n  Title,\n} from './addColumnForm.styled';\nimport SubmitButton from '../../submitButton/submitButton';\nimport { useDispatch } from 'react-redux';\nimport { editColumn } from 'redux/dashboards/operations';\n\nexport const EditColumnForm = ({ item, onClose }) => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  const widthButton = () => {\n    let a;\n    console.log('Ширина вікна:', windowWidth);\n\n    if (windowWidth > 767) {\n      a = '302';\n      console.log(a);\n    } else {\n      a = '287';\n      console.log(a);\n    }\n\n    return a;\n  };\n\n  const handleSubmit = (values, actions) => {\n    // const formData = new FormData();\n    // formData.append('title', values.title);\n\n    // for (let [key, value] of formData.entries()) {\n    //   console.log(key, value);\n    // }\n    // // dispatch(addColumn(formData));\n    console.log(values);\n    actions.resetForm();\n    dispatch(editColumn(values));\n\n    onClose();\n  };\n\n  const validateForm = values => {\n    const errors = {};\n\n    if (!values.title) {\n      errors.title = 'Field must not be empty';\n    }\n\n    return errors;\n  };\n\n  return (\n    <Modal onClose={onClose}>\n      <ButtonClose onClose={onClose} />\n      <Formik\n        initialValues={{ id: item._id, title: item ? item.title : '' }}\n        onSubmit={handleSubmit}\n        validate={validateForm}\n      >\n        <Form autoComplete=\"off\">\n          <FormField htmlFor=\"title\">\n            <Title htmlFor=\"title\">Edit column</Title>\n            <Field type=\"text\" name=\"title\" placeholder=\"Title\" />\n            <ErrorMessage name=\"title\" component=\"span\" />\n          </FormField>\n          <SubmitButton\n            title=\"Add\"\n            type=\"submit\"\n            width={widthButton()}\n            height=\"49\"\n            theme=\"Dark\"\n            icon={true}\n          />\n        </Form>\n      </Formik>\n    </Modal>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 294px;\n  height: 56px;\n  padding: 0 20px;\n  border: 0;\n  border-radius: 8px;\n  background: #121212;\n\n  @media (max-width: 320px) {\n    width: 100%;\n  }\n`;\n\nexport const Title = styled.p`\n  color: #ffffff;\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n\n  &:not(:last-child) {\n    margin-right: 8px;\n  }\n`;\n\nexport const BtnContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const IconEdit = styled.svg`\n  width: 16px;\n  height: 16px;\n  color: rgba(255, 255, 255, 0.5);\n  transition: color 350ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: blue;\n  }\n`;\n\nexport const IconDelete = styled.svg`\n  width: 16px;\n  height: 16px;\n  color: rgba(255, 255, 255, 0.5);\n  transition: color 350ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: tomato;\n  }\n`;\n","import { useState } from 'react';\nimport sprite from '../../images/symbol-defs.svg';\nimport { EditColumnForm } from 'components/addColumn/addColumnForm/editColumnForm';\nimport {\n  Container,\n  Title,\n  Button,\n  IconEdit,\n  IconDelete,\n  BtnContainer,\n} from './columnItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteColumn } from 'redux/dashboards/operations';\n// import { selectList } from 'redux/dashboards/selectors';\n\nexport const ColumnItem = ({\n  item = {\n    title: 'TO DO',\n    _id: '649d5407f4c9cb1654f8e61f',\n  },\n}) => {\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n\n  // const handleOpen = columns => {\n  //   selectList(lists);\n  //   setModal(true);\n  // };\n\n  const handleOpen = () => setModal(true);\n  const handleClose = () => setModal(false);\n  return (\n    <>\n      <Container>\n        <Title>{item.title}</Title>\n        <BtnContainer>\n          <Button type=\"button\" onClick={handleOpen}>\n            <IconEdit aria-label=\"edit\">\n              <use href={sprite + '#icon-pencil-01'}></use>\n            </IconEdit>\n          </Button>\n          <Button\n            type=\"button\"\n            onClick={() => dispatch(deleteColumn(item._id))}\n          >\n            <IconDelete aria-label=\"delete\">\n              <use href={sprite + '#icon-trash-04'}></use>\n            </IconDelete>\n          </Button>\n        </BtnContainer>\n      </Container>\n      {modal && <EditColumnForm item={item} onClose={handleClose} />}\n    </>\n  );\n};\n","import { AddColumn } from \"components/addColumn/addColumn\";\nimport { ColumnItem } from \"components/columnItem/columnItem\";\n\nexport const DashboardMain = () => {\n    return (\n        <>\n            <AddColumn />\n            <ColumnItem />\n        </>\n    )\n};","import { Sidebar } from 'components/sidebar/Sidebar';\nimport { Header } from 'components/Header/Header';\n// import { AddColumn } from 'components/addColumn/addColumn';\n// import { ColumnItem } from 'components/columnItem/columnItem';\nimport { DashboardHeader } from 'components/HeaderDashboard/HeaderDashboard';\nimport { DashboardMain } from 'components/MainDashboard/MainDashboard.styled';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    backgroundColor: '#1F1F1F',\n  },\n  deskMenu: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n  },\n};\n\nexport default function Home() {\n  return (\n    <div style={styles.container}>\n      <Sidebar />\n      <div style={styles.deskMenu}>\n        <Header />\n        <DashboardHeader />\n        <DashboardMain />\n      </div>\n    </div>\n  );\n}\n"],"names":["WrapperBoards","styled","Boards","WrapperCreate","CreateTitle","CreateButton","IconPlus","Backdrop","ModalWindow","modalRoot","document","querySelector","Modal","onClose","children","useEffect","keyDownEvent","e","code","window","addEventListener","removeEventListener","createPortal","onClick","currentTarget","target","Forma","Form","Input","Field","Label","FormTitle","SubmitBtn","props","width","height","bg","color","fill","SubmitButton","title","type","theme","icon","addColumn","handleClick","href","sprite","FormOptions","FormQuestion","FormAnswer","Svg","IconRadioButtons","useState","item","setItem","onClickIcon","value","console","log","name","id","map","htmlFor","Btn","IconClose","ButtonClose","Wrapper","List","Item","Img","selectBoard","state","task","boards","selectBackgroundUrl","bgUrl","Background","icons","dispatch","useDispatch","selectBgIcons","useSelector","backgroundUrl","previewURL","src","alt","schema","yup","shape","required","ModalBoard","setName","initialValues","onSubmit","query","resetForm","validationSchema","placeholder","minLength","maxLength","component","CreateBoard","isOpen","setIsOpen","toggleModal","WrapperProjectOffice","Project","WrapperProjectIcons","IconButton","MyBoards","desk","undefined","pjIcon","LogOutButton","LogOutText","LogOut","logOut","Container","Text","Span","Button","Image","TextButton","Title","FormicForm","FormicField","Textarea","helpSchema","Yup","email","matches","message","excludeEmptyString","text","NeedHelpForm","needHelp","handleSubmit","style","fontSize","NeedHelp","WrapperTitle","NaviUser","NavDashboards","NeedHelpLogOutContainer","WrapperLogo","Logo","Sidebar","selectBoards","fetchBoards","board","_id","HeaderStyled","ThemeContainer","ThemeList","ThemeSelect","P","ItemBtn","disabled","selected","UserContainer","UserEmail","ImgWrapper","UserForm","FormFields","FormIcon","Eye","Icon","FieldAvatar","NewUserSchema","avatar","test","includes","password","Notiflix","position","EdidUserForm","avatarURL","setType","currentImage","setCurrentImage","selectIsError","values","formData","FormData","append","update","setFieldValue","isValid","Sprite","onChange","event","files","file","reader","FileReader","onload","result","readAsDataURL","handleFileChange","Loading","UserInfo","modal","setModal","isLoading","selectIsLoading","handleClose","Header","selectUser","currentTheme","setCurrentTheme","isDropdownActive","setIsDropdownActive","body","classList","add","remove","handleThemeChange","changeTheme","className","TitleDashBoard","TitleFilter","FilterButton","Filter","currentBg","currentPrority","autocomplete","role","DashboardHeader","FormField","ErrorMessage","FormicError","AddColumnForm","innerWidth","windowWidth","setWindowWidth","handleResize","actions","parentBoard","validate","errors","autoComplete","a","widthButton","AddColumn","buttonText","length","EditColumnForm","editColumn","BtnContainer","IconEdit","IconDelete","ColumnItem","deleteColumn","DashboardMain","styles","container","display","flexDirection","backgroundColor","deskMenu","Home"],"sourceRoot":""}