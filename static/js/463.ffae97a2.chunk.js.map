{"version":3,"file":"static/js/463.ffae97a2.chunk.js","mappings":"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","sources":["components/sidebar/CreateBoard/CreateBoard.styled.jsx","components/sidebar/CreateBoard/CreateBoard.jsx","components/sidebar/LogOut/LogOut.styled.jsx","components/sidebar/LogOut/LogOut.jsx","components/sidebar/needHelp/needHelp.styled.js","components/modal/modal.styled.js","components/modal/modal.jsx","components/submitButton/submitButton.styled.js","components/submitButton/submitButton.jsx","components/sidebar/needHelp/needHelpForm.styled.js","components/modalBtnClose/ButtonClose.styled.js","components/modalBtnClose/ButtonClose.jsx","components/sidebar/needHelp/needHelpForm.jsx","components/sidebar/needHelp/needHelp.jsx","components/sidebar/Sidebar.styled.jsx","components/sidebar/Sidebar.jsx","components/Header/Header.styled.js","components/Header/UserInfo/UserInfo.stayled.js","components/Header/UserInfo/EditUserForm/EditUserForm.styled.js","components/Header/UserInfo/EditUserForm/EditUserForm.js","components/Header/UserInfo/UserInfo.js","components/Header/Header.js","pages/homePage.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const WrapperBoards = styled.div`\n  border-bottom: 1px solid #ffffff1a;\n  margin-bottom: 9px;\n`;\n\nexport const Boards = styled.p`\n  font-size: 16px;\n  font-family: Poppins;\n  font-weight: 600;\n  color: rgba(255, 255, 255, 0.5);\n  font-size: 12px;\n  letter-spacing: -0.24px;\n`;\n\nexport const WrapperCreate = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid #ffffff1a;\n  margin-bottom: 40px;\n`;\n\nexport const CreateTitle = styled.p`\n  width: 76px;\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\n\nexport const CreateButton = styled.button`\n  border-radius: 8px;\n  background: #bedbb0;\n  cursor: pointer;\n  transform: scale(1);\n  transition: transform 550ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.1);\n  }\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const IconPlus = styled.svg`\n  width: 25px;\n  height: 27px;\n  flex-shrink: 0;\n  fill: #bedbb0;\n  color: #121212;\n`;\n","import {\n  WrapperBoards,\n  Boards,\n  WrapperCreate,\n  CreateTitle,\n  CreateButton,\n  IconPlus,\n} from './CreateBoard.styled';\nimport sprite from '../../../images/symbol-defs.svg';\n\nexport const CreateBoard = () => {\n  return (\n    <>\n      <WrapperBoards>\n        <Boards>My boards</Boards>\n      </WrapperBoards>\n      <WrapperCreate>\n        <CreateTitle>Create a new board</CreateTitle>\n        <CreateButton type=\"button\" onClick={() => {}}>\n          <IconPlus aria-label=\"question with round\" width=\"20px\" height=\"20px\">\n            <use href={sprite + '#icon-plus-add'}></use>\n          </IconPlus>\n        </CreateButton>\n      </WrapperCreate>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const LogOutButton = styled.button`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  background: none;\n  border: none;\n  padding: 0;\n`;\n\nexport const LogOutText = styled.span`\n  font-size: 16px;\n  font-family: Poppins;\n  font-weight: 500;\n  color: #fff;\n  margin-left: 14px;\n`;\n","import { LogOutButton, LogOutText } from './LogOut.styled';\nimport sprite from '../../../images/symbol-defs.svg';\n\nexport const LogOut = () => {\n  return (\n    <LogOutButton onClick={() => {}}>\n      <svg\n        aria-label=\"question with round\"\n        width=\"20px\"\n        height=\"20px\"\n        fill=\"inherit\"\n      >\n        <use href={sprite + '#icon-login'}></use>\n      </svg>\n      <LogOutText>Log out </LogOutText>\n    </LogOutButton>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n    max-width: 197px;\n    padding: 20px;\n    margin-bottom: 20px;\n    border-radius: 8px;\n    background: #1F1F1F;\n    @media (min-width: 768px) {\n        max-width: 212px;\n      }\n`;\n\nexport const Text = styled.p`\n    color: #FFF;\n    font-size: 12px;\n    font-family: \"Poppins\";\n    line-height: 20px;\n    @media (min-width: 768px) {\n        font-size: 14px;\n      }\n`;\n\nexport const Span = styled.span`\n  color: #bedbb0;\n`;\n\nexport const Button = styled.button`\n    display: flex;\n    align-items: center;\n    font-size: 12px;\n    font-weight: 500;\n    padding: 0;\n    border: none;\n    color: #FFF;\n    background: #1F1F1F;\n    @media (min-width: 768px) {\n        font-size: 14px;\n      }\n`;\nexport const Image = styled.img`\n    width: 54px;\n    height: 78px;\n    margin-bottom: 14px;\n`;\nexport const TextButton = styled.span`\n  margin-left: 8px;\n  :hover{\n    color: #bedbb0\n  }\n`;\n\nexport const Svg = styled.svg`\n  stroke: #FFF;\n  :hover {\n    stroke: #bedbb0;\n  }\n`","import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\nexport const ModalWindow = styled.div`\n    /* min-width: 335px; */ //модалка має огортати контент \n    /* padding: 24px 24px 0 24px; */ //пропущен відступ знизу\n    position: relative;\n    padding: 24px 24px 24px 24px;\n    border-radius: 8px;\n    border: 1px solid rgba(190, 219, 176, 0.50);\n    background: #151515;\n    color: #fff;\n    box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.05);\n    @media (min-width: 768px) {\n        max-width: 400px;\n      }\n`;","import { createPortal } from \"react-dom\";\nimport { useEffect } from \"react\";\nimport { Backdrop, ModalWindow } from \"./modal.styled\";\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({onClose, children}) => {\n\n    useEffect(() => {\n        const keyDownEvent = e => {\n            if(e.code === 'Escape') {\n                onClose()\n            }\n        }\n        window.addEventListener('keydown', keyDownEvent);\n\n        return () => {\n            window.removeEventListener('keydown', keyDownEvent)\n        }\n    }, [onClose])\n \n   const onCloseBackdrop = e => {\n        if(e.currentTarget === e.target) {\n            onClose()\n        }\n    }\n    return (\n            createPortal(<Backdrop onClick={onCloseBackdrop}>\n            <ModalWindow>   \n                {children}\n            </ModalWindow>\n            </Backdrop>, modalRoot)\n    )\n         \n}","import styled from '@emotion/styled';\n\nexport const SubmitBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: ${props => (props.width ? `${props.width}px` : '100%')};\n  height: ${props => `${props.height}px`};\n  border: 0;\n  border-radius: 8px;\n  background: ${props => props.bg};\n  color: ${props => props.color};\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  cursor: pointer;\n`;\n\nexport const IconPlus = styled.svg`\n  width: 28px;\n  height: 28px;\n  flex-shrink: 0;\n  margin-right: 8px;\n  fill: ${props => props.fill};\n  color: ${props => props.color};\n`;\n","import sprite from '../../images/symbol-defs.svg';\nimport { SubmitBtn, IconPlus } from './submitButton.styled';\n\n// How to use\n// import SubmitButton from './submitButton/submitButton';\n// add element <SubmitButton />\n// props:\n// width : default 100%\n// height:  default 49px\n// title:  default 49px\n// theme:  default Dark\n// icon: default false\n// addColumn: default false\n// handleClick: without Default value\n// example: <SubmitButton title=\"Send\" width=\"352\" height=\"49\" theme=\"Dark\" handleClick={YOUR METHOD NAME}/>\n// example <SubmitButton title=\"Edit\" width=\"302\" height=\"49\" theme=\"Dark\" icon={true} handleClick={YOUR METHOD NAME}/>\n// example <SubmitButton title=\"Edit\" width=\"302\" height=\"49\" theme=\"Dark\" icon={true} handleClick={YOUR METHOD NAME}/>\n// example <SubmitButton title=\"Add another column\" width=\"334\" height=\"56\" theme=\"Dark\" icon={true} addColumn={true} handleClick={YOUR METHOD NAME}/>\n\nexport default function SubmitButton({\n  title = 'Add',\n  width,\n  height = 49,\n  theme = 'Dark',\n  icon = false,\n  addColumn = false,\n  handleClick,\n}) {\n  const bgColor = () => {\n    if (theme === 'Dark' && !addColumn) return '#BEDBB0';\n    if (theme === 'Light' && !addColumn) return '#BEDBB0';\n    if (theme === 'Violet' && !addColumn) return '#5255BC';\n    if (theme === 'Dark' && addColumn) return '#121212';\n    if (theme === 'Light' && addColumn) return '#FFFFFF';\n    if (theme === 'Violet' && addColumn) return '#FFFFFF';\n  };\n  const color = () => {\n    if (theme === 'Dark' && !addColumn) return '#161616';\n    if (theme === 'Light' && !addColumn) return '#161616';\n    if (theme === 'Violet' && !addColumn) return '#FFFFFF';\n    if (theme === 'Dark' && addColumn) return '#FFFFFF';\n    if (theme === 'Light' && addColumn) return '#161616';\n    if (theme === 'Violet' && addColumn) return '#161616';\n  };\n\n  const fill = () => {\n    if (theme === 'Dark' && !addColumn) return '#121212';\n    if (theme === 'Light' && !addColumn) return '#121212';\n    if (theme === 'Violet' && !addColumn) return '#FFFFFF';\n    if (theme === 'Dark' && addColumn) return '#FFFFFF';\n    if (theme === 'Light' && addColumn) return '#161616';\n    if (theme === 'Violet' && addColumn) return '#5255BC';\n  };\n\n  const svgColor = () => {\n    if (theme === 'Dark' && !addColumn) return '#FFFFFF';\n    if (theme === 'Light' && !addColumn) return '#FFFFFF';\n    if (theme === 'Violet' && !addColumn) return '#161616';\n    if (theme === 'Dark' && addColumn) return '#121212';\n    if (theme === 'Light' && addColumn) return '#FFFFFF';\n    if (theme === 'Violet' && addColumn) return '#FFFFFF';\n  };\n\n  return (\n    <>\n      <SubmitBtn\n        width={width}\n        height={height}\n        bg={bgColor()}\n        color={color()}\n        onClick={handleClick}\n        type=\"submit\"\n      >\n        {icon && (\n          <IconPlus aria-label=\"add\" fill={fill()} color={svgColor()}>\n            <use href={sprite + '#icon-plus-add'}></use>\n          </IconPlus>\n        )}\n        {title}\n      </SubmitBtn>\n    </>\n  );\n}\n","import styled from '@emotion/styled';\nimport { Field as FormicField, Form as FormicForm } from 'formik';\n\nexport const Title = styled.h2`\n    margin: 0 0 24px 0;\n    font-size: 18px;\n    font-weight: 500;\n`;\n\nexport const Form = styled(FormicForm)`\n    display: flex;\n    flex-direction: column;\n    gap: 14px;\n`\n\nexport const Field = styled(FormicField)`\n    max-width: 100%;\n    padding-top: 14px;\n    padding-bottom: 14px;\n    padding-left: 18px;\n    border-radius: 8px;\n    border: 1px solid #BEDBB0;\n    opacity: 0.4000000059604645;\n    color: #FFF;\n    background-color: transparent; \n`;\n\nexport const Textarea = styled(FormicField)`\n    max-width: 100%;\n    height: 120px;\n    margin-bottom: 40px;\n    padding-top: 14px;\n    padding-bottom: 14px;\n    padding-left: 18px;\n    border-radius: 8px;\n    border: 1px solid #BEDBB0;\n    opacity: 0.4000000059604645;\n    color: #FFF;\n    background-color: transparent;\n     \n`;","import styled from '@emotion/styled';\n\nexport const Btn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  width: 24px;\n  height: 24px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n  background-color: transparent;\n  border: transparent;\n  border-radius: 50%;\n  color: #ffffff;\n  cursor: pointer;\n  transition: all 350ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    /* border: 1px solid #bedbb0; */\n    background-color: #1f1f1f;\n    color: #bedbb0;\n  }\n`;\n\nexport const IconClose = styled.svg`\n  width: 18px;\n  height: 18px;\n  stroke: currentColor;\n  flex-shrink: 0;\n`;\n","import sprite from '../../images/symbol-defs.svg';\nimport { Btn, IconClose } from './ButtonClose.styled';\n\nexport const ButtonClose = ({ onClose }) => {\n  return (\n    <Btn onClick={onClose}>\n      <IconClose aria-label=\"exit\">\n        <use href={sprite + '#icon-x-close'}></use>\n      </IconClose>\n    </Btn>\n  );\n};\n","import SubmitButton from \"../../submitButton/submitButton\";\nimport { Formik, ErrorMessage } from 'formik';\nimport { Title, Field, Form, Textarea } from './needHelpForm.styled';\nimport { ButtonClose } from 'components/modalBtnClose/ButtonClose';\nimport * as Yup from 'yup';\n\nconst helpSchema = Yup.object().shape({\n  email: Yup.string()\n    .matches(\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n      {\n        message: 'Email error',\n        excludeEmptyString: true,\n      }\n    )\n    .required('Required'),\n  text: Yup.string()\n    .required('Required'),\n});\n\nexport const NeedHelpForm = ({onClose}) => {\n\n    function handleSubmit(value) {\n        console.log(value);\n        // const { name, email, password } = value;\n        onClose()\n      }\n    return (\n        <>\n        <ButtonClose onClose={onClose} />\n        <Title>Need Help</Title>\n        <Formik\n        initialValues={{ email: '', text: '' }}\n          validationSchema={helpSchema}\n          onSubmit={(value, { resetForm }) => {\n            handleSubmit(value);\n            resetForm();\n          }}>\n            <Form>\n            <Field type=\"email\" name=\"email\" placeholder=\"Enter your email\" />\n            <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                style={{\n                  color: 'white',\n                }}\n              />\n              <Textarea type=\"text\" name=\"text\" placeholder=\"Enter your comment\" component=\"textarea\" />\n              <ErrorMessage\n                name=\"text\"\n                component=\"div\"\n                style={{\n                  color: 'white',\n                }}\n              />\n              <SubmitButton title=\"Send\" width=\"352\" height=\"49\" theme=\"Dark\"/>\n            </Form>\n        </Formik>\n        </>\n    )\n\n}","import { useState } from 'react';\nimport {\n  Container,\n  Text,\n  Span,\n  Button,\n  Image,\n  TextButton,\n  Svg\n} from './needHelp.styled';\nimport background from '../../../images/help.png';\nimport sprite from '../../../images/symbol-defs.svg';\nimport { Modal } from 'components/modal/modal';\nimport { NeedHelpForm } from './needHelpForm';\n\nexport const NeedHelp = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleModal = () => {\n    setIsOpen(isOpen => !isOpen)\n  }\n  return (\n    <Container>\n      <Image src={background} alt=\"Logo\" />\n      <Text>\n        If you need help with <Span>TaskPro</Span>, check out our support\n        resources or reach out to our customer support team.\n      </Text>\n      <Button onClick={toggleModal}>\n        <Svg aria-label=\"question with round\" width=\"20px\" height=\"20px\">\n          <use href={sprite + '#icon-help-circle'}></use>\n        </Svg>\n        <TextButton>Need help?</TextButton>\n      </Button>\n      {isOpen && <Modal onClose={toggleModal} children={<NeedHelpForm onClose={toggleModal}/>} />}\n    </Container>\n  );\n};\n\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  min-width: 225px;\n  align-items: center;\n  position: relative;\n  padding: 24px 24px 24px 24px;\n  color: #fff;\n  background: #121212;\n`;\n\nexport const WrapperTitle = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 64px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 16px;\n  font-family: Poppins;\n  font-weight: 600;\n  letter-spacing: -0.64px;\n`;\n\nexport const WrapperNeonProject = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 60px;\n`;\n\nexport const NeonProject = styled.p`\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  margin-left: 8px;\n`;\n\nexport const WrapperLogo = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 8px;\n  background-color: #1f1f1f;\n  border-radius: 5px;\n`;\n\nexport const Logo = styled.svg`\n  width: 32px;\n  height: 32px;\n  flex-shrink: 0;\n  fill: #1f1f1f;\n  color: #121212;\n`;\n","import { CreateBoard } from './CreateBoard/CreateBoard';\n// import { MyBoard } from './myBoard/MyBoard';\nimport { LogOut } from './LogOut/LogOut';\nimport { NeedHelp } from './needHelp/needHelp';\nimport {\n  Container,\n  WrapperTitle,\n  Title,\n  WrapperNeonProject,\n  NeonProject,\n  WrapperLogo,\n  Logo,\n} from './Sidebar.styled';\nimport sprite from '../../../src/images/symbol-defs.svg';\n\nexport const Sidebar = () => {\n  return (\n    <Container>\n      <WrapperTitle>\n        <WrapperLogo>\n          <Logo aria-label=\"question with round\" width=\"32px\" height=\"32px\">\n            <use href={sprite + '#icon-icon'}></use>\n          </Logo>\n        </WrapperLogo>\n\n        <Title>Task Pro</Title>\n      </WrapperTitle>\n      <CreateBoard />\n      {/* <MyBoard /> */}\n      <WrapperNeonProject>\n        <svg aria-label=\"question with round\" width=\"18px\" height=\"18px\">\n          <use href={sprite + '#icon-puzzle-piece-02'}></use>\n        </svg>\n        <NeonProject>Neon Light Project</NeonProject>\n      </WrapperNeonProject>\n      <NeedHelp />\n      <LogOut />\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const HeaderStyled = styled.header`\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    width: 1180px; \n    height: 68px;\n    background: #161616;\n\n`\n\nexport const ThemeContainer = styled.div`\n    position: relative;\n    display: inline-block;\n    width: 70px;\n    height: auto;\n    margin-right: 14px;\n    color: rgba(255, 255, 255, 0.80);\n\n}     \n`\n\nexport const ThemeList = styled.ul`\n    position: absolute;\n    top: 14px;\n    left: -12px;\n    display: none;\n    grid-template-columns: 1fr;\n    grid-template-rows: repeat(3, 1fr);\n    grid-column-gap: 0px;\n    grid-row-gap: 4px;\n    margin: 0px;\n    padding: 18px 44px 18px 18px;\n    width: 38px;\n    \n    overflow: hidden;\n    list-style: none;\n    cursor: pointer;\n    background: #161616;\n    border-radius: 8px;\n    z-index: 1000;\n    transition: all 0.3s ease-out;\n\n    &.active  {\n      display: grid;\n    }\n`\nexport const ThemeSelect = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.3s ease-out;\n`\n\nexport const P = styled.p`\n    padding: 0;\n    margin: 0;\n    font-size: 14px;\n    font-weight: 500;\n    letter-spacing: -0.28px;\n    margin-right: 4px;\n`\n\nexport const Item = styled.li`\n    \n`;\n\nexport const ItemBtn = styled.button`\n  height: 21px;\n  margin: 0;\n  padding: 0;\n  text-align: left;\n  font-size: 14px;\n  letter-spacing: -0.28px;\n  border: none;\n  background: transparent;\n  cursor: ${({ disabled }) => (disabled ? '' : 'pointer')};\n  color: ${({ selected }) => (selected ? '#BEDBB0' : 'rgba(255, 255, 255, 0.50);')};\n`;\n\n\n","import styled from '@emotion/styled';\n\nexport const UserContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: auto;\n    color: rgba(255, 255, 255, 1);\n    margin-right: 24px;\n`;\nexport const UserEmail = styled.p`\n    font-size: 14px;\n    font-weight: 500;\n    letter-spacing: -0.28px;\n    margin-right: 8px;\n`;\n\nexport const ImgWrapper = styled.div`\n    width: 32px;\n    height: 32px;\n    border-radius: 8px;\n    overflow: hidden;\n    cursor: pointer;\n`\nexport const Img = styled.img`\n        width: 100%;\n\t\theight: 100%;\n\t\tobject-fit: cover;\n`","import styled from '@emotion/styled';\nimport { Field as FormicField, Form as FormicForm } from 'formik';\n\nexport const Container = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n`;\n\nexport const UserForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  border-radius: 8px;\n  }\n`;\n\n\nexport const Title = styled.h3`\n  color: #fff;\n  font-size: 18px;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin: 0;\n`;\n\nexport const Form = styled(FormicForm)`\n  display: flex;\n  gap: 24px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const FormFields = styled.div`\n  display: flex;\n  gap: 14px;\n  flex-direction: column;\n`;\n\nexport const Field = styled(FormicField)`\n  font-size: 14px;\n  font-family: 'Poppins';\n  letter-spacing: -0.28px;\n\n  width: 269px;\n  height: 49px;\n  padding-left: 18px;\n  background-color: transparent;\n  color: white;\n  border-radius: 8px;\n  border: 1px solid #bedbb0;\n  opacity: 0.4000000059604645;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n\n  @media screen and (min-width: 768px) {\n    width: 326px;\n    height: 49px;\n  }\n`;\n\nexport const Button = styled.button`\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  letter-spacing: -0.28px;\n\n  width: 287px;\n  height: 49px;\n  background-color: #bedbb0;\n  border: none;\n  border-radius: 8px;\n\n  @media screen and (min-width: 768px) {\n    width: 344px;\n    height: 49px;\n  }\n`;\n\nexport const FormIcon = styled.span`\n  position: relative;\n  display: block;\n`;\n\nexport const Eye = styled.button`\n  position: absolute;\n  top: 50%;\n  right: 12px;\n  transform: translateY(-50%);\n\n  background-color: transparent;\n  border: none;\n  opacity: 0.4000000059604645;\n`;\n\nexport const Icon = styled.svg`\n  width: 18px;\n  height: 18px;\n`;\n\nexport const Label = styled.label`\n    width: 68px;\n    height: 79px;\n    margin: 25px auto 0 auto;\n    cursor: pointer;\n`\nexport const FieldAvatar = styled.input`\n    display: none;\n`\nexport const ImgWrapper = styled.div`\n    position: relative;\n    width: 68px;\n    height: 68px;\n`\nexport const Img = styled.img`\n    width: 100%;\n\t\theight: 100%;\n\t\tobject-fit: cover;\n    border-radius: 8px;\n`\nexport const IconPlus = styled.svg`\n  position: absolute;\n  top: 98%;\n  left: 50%;\n  transform:translate(-50%, -50%);\n  width: 24px;\n  height: 24px;\n  fill: ${props => props.fill};\n  color: ${props => props.color};\n`;","import { Formik, ErrorMessage } from 'formik';\nimport {\n  Container,\n  Title,\n  UserForm,\n  Form,\n  Field,\n  FormFields,\n  Button,\n  FormIcon,\n  Icon,\n  Eye,\n  ImgWrapper,\n  // Img,\n  FieldAvatar,\n  IconPlus,\n  Label,\n} from './EditUserForm.styled';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updata } from 'redux/auth/operations';\nimport Sprite from '../../../../images/symbol-defs.svg'\nimport * as Yup from 'yup';\n// import SubmitButton from \"../../../submitButton/submitButton\"\n\n\nconst NewUserSchema = Yup.object().shape({\n  avatar: Yup.mixed()\n    .required(\"required\")\n    .test('fileType', 'Invalid file format', (value) => {\n      if (!value) return true; \n      const supportedFormats = ['image/png', 'image/jpeg', 'image/jpg'];\n      return supportedFormats.includes(value.type);\n    }),\n  name: Yup.string()\n    .matches(/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/, {\n      message:\n        \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n      excludeEmptyString: true,\n    })\n    .required('Required'),\n  email: Yup.string()\n    .matches(\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n      {\n        message: 'Email error',\n        excludeEmptyString: true,\n      }\n    )\n    .required('Required'),\n  password: Yup.string()\n    .matches(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{5,}$/, {\n      message: 'Password error',\n      excludeEmptyString: true,\n    })\n    .required('Required'),\n});\n\nexport const  EdidUserForm = () => {\n  const dispatch = useDispatch();\n  const [type, setType] = useState('password');\n\n  function handleSubmit(value) {\n    const { avatar, name, email, password  } = value;\n    \n    const formData = new FormData();\n    formData.append('avatar', avatar);\n    formData.append('name', name);\n    formData.append('email', email);\n    formData.append('password', password);\n\n    dispatch(updata({ formData }));\n  }\n\n  function handleClick() {\n    switch (type) {\n      case 'text':\n        return setType('password');\n      case 'password':\n        return setType('text');\n\n      default:\n        break;\n    }\n  }\n\n  return (\n    <Container>\n      <UserForm>\n        <Title>Edit profile</Title>\n          \n        <Formik\n          initialValues={{name: '', email: '', password: ''  }}\n          validationSchema={NewUserSchema}\n          onSubmit={(values, { resetForm }) => {\n            handleSubmit(values);\n            resetForm();\n          }}\n        >\n           {({ setFieldValue }) => (\n          <Form>\n            <FormFields >\n              <Label htmlFor=\"avatar\">\n              <ImgWrapper >\n                {/* <Img src=\"#\" alt=\"User picture\" /> */}\n                <svg aria-label=\"User picture\" width=\"68px\" height=\"68px\">\n                  <use href={Sprite + '#icon-user'}></use>\n                </svg>\n                <IconPlus aria-label=\"add\" fill=\"rgba(190, 219, 176, 1)\" color=\"rgba(22, 22, 22, 1)\">\n                  <use href={Sprite + '#icon-plus-add'}></use>\n                </IconPlus>\n              </ImgWrapper>\n              </Label>\n              <FieldAvatar \n                    id=\"avatar\" \n                    type=\"file\" \n                    name=\"avatar\" \n                    onChange={(event) => {\n                      setFieldValue('avatar', event.currentTarget.files[0]);\n                    }}\n              />               \n              <ErrorMessage\n                name=\"avatar\"\n                component=\"div\"\n                style={{\n                  color: 'white',\n                }}\n              />\n\n              <Field type=\"text\" name=\"name\" placeholder=\"Ivetta\" />\n              <ErrorMessage\n                name=\"name\"\n                component=\"div\"\n                style={{\n                  color: 'white',\n                }}\n              />\n              <Field type=\"email\" name=\"email\" placeholder=\"ivetta34@gmail.com\" />\n              <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                style={{\n                  color: 'white',\n                }}\n              />\n              <FormIcon>\n                <Field\n                  type={type}\n                  name=\"password\"\n                  placeholder=\"ivetta1999.23\"\n                />\n                <ErrorMessage\n                  name=\"password\"\n                  component=\"div\"\n                  style={{\n                    color: 'white',\n                  }}\n                />\n                <Eye type=\"button\" onClick={handleClick}>\n                  <Icon aria-label=\"Logo\">\n                    <use href={Sprite + '#icon-eye'}></use>\n                  </Icon>\n                </Eye>\n              </FormIcon>\n            </FormFields>\n            <Button type=\"submit\">Send</Button>\n          </Form>\n         )}\n        </Formik>\n      </UserForm>\n    </Container>\n  );\n}\n","import { useState } from 'react';\nimport { UserContainer, UserEmail, ImgWrapper, Img } from \"./UserInfo.stayled\";\nimport { Modal } from '../../modal/modal';\nimport { ButtonClose } from 'components/modalBtnClose/ButtonClose';\nimport { EdidUserForm }  from './EditUserForm/EditUserForm'\nimport sprite from '../../../images/symbol-defs.svg';\n\nexport const UserInfo = ({email, imageUrl}) => {\n  const [modal, setModal] = useState(false);\n\n  const handleModalOpen = () => setModal(true);\n  const handleClose = () => setModal(false);\n\n  return (\n      <UserContainer>\n        <UserEmail>Ivetta</UserEmail>\n        <ImgWrapper onClick={handleModalOpen}>\n          {imageUrl ? (\n            <Img src={imageUrl} alt=\"User picture\" />\n          ) : (\n            <svg aria-label=\"User picture\" width=\"32px\" height=\"32px\">\n                <use href={sprite + '#icon-user'}></use>\n            </svg>\n          )}\n        </ImgWrapper>\n        {modal && \n          <Modal onClose={handleClose}>\n            <ButtonClose onClose={handleClose}/>\n            <EdidUserForm />\n          </Modal>}\n        \n      </UserContainer>\n  );\n};\n\n","import { useState } from 'react';\nimport {\n  HeaderStyled,\n  ThemeContainer,\n  ThemeList,\n  P,\n  ThemeSelect,\n  Item,\n  ItemBtn,\n} from './Header.styled';\nimport { UserInfo } from './UserInfo/UserInfo';\nimport sprite from '../../images/symbol-defs.svg';\n\nexport const Header = () => {\n  const [currentTheme, setCurrentTheme] = useState('Dark');\n  const [isDropdownActive, setIsDropdownActive] = useState(false);\n\n  const themeOptions = ['Light', 'Dark', 'Violet'];\n\n  const handleDropdownClick = () => {\n    setIsDropdownActive(!isDropdownActive);\n  };\n  const handleThemeChange = e => {\n    setCurrentTheme(e.target.value);\n  };\n\n  return (\n    <HeaderStyled>\n      <ThemeContainer>\n        <ThemeSelect onClick={handleDropdownClick}>\n          <P> Theme </P>\n          <svg aria-label=\"question with round\" width=\"16px\" height=\"16px\">\n            <use href={sprite + '#icon-chevron-down'}></use>\n          </svg>\n        </ThemeSelect>\n        <ThemeList className={isDropdownActive ? 'active' : ''}>\n          {themeOptions.map(theme => (\n            <Item key={theme}>\n              <ItemBtn\n                selected={currentTheme === theme}\n                disabled={currentTheme === theme}\n                value={theme}\n                onClick={handleThemeChange}\n              >\n                {theme}\n              </ItemBtn>\n            </Item>\n          ))}\n        </ThemeList>\n      </ThemeContainer>\n\n      <UserInfo />\n    </HeaderStyled>\n  );\n};\n","import { Sidebar } from 'components/sidebar/Sidebar';\nimport { Header } from 'components/Header/Header';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  deskMenu: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n};\n\nexport default function Home() {\n  return (\n    <div style={styles.container}>\n      <Sidebar />\n      <div style={styles.deskMenu}>\n        <Header />\n      </div>\n    </div>\n  );\n}\n"],"names":["WrapperBoards","styled","Boards","WrapperCreate","CreateTitle","CreateButton","IconPlus","CreateBoard","type","onClick","width","height","href","sprite","LogOutButton","LogOutText","LogOut","fill","Container","Text","Span","Button","Image","TextButton","Svg","Backdrop","ModalWindow","modalRoot","document","querySelector","Modal","onClose","children","useEffect","keyDownEvent","e","code","window","addEventListener","removeEventListener","createPortal","currentTarget","target","SubmitBtn","props","bg","color","SubmitButton","title","theme","icon","addColumn","handleClick","Title","Form","FormicForm","Field","FormicField","Textarea","Btn","IconClose","ButtonClose","helpSchema","Yup","shape","email","matches","message","excludeEmptyString","required","text","NeedHelpForm","initialValues","validationSchema","onSubmit","value","resetForm","console","log","handleSubmit","name","placeholder","component","style","NeedHelp","useState","isOpen","setIsOpen","toggleModal","src","alt","WrapperTitle","WrapperNeonProject","NeonProject","WrapperLogo","Logo","Sidebar","HeaderStyled","ThemeContainer","ThemeList","ThemeSelect","P","Item","ItemBtn","disabled","selected","UserContainer","UserEmail","ImgWrapper","Img","UserForm","FormFields","FormIcon","Eye","Icon","Label","FieldAvatar","NewUserSchema","avatar","test","includes","password","EdidUserForm","dispatch","useDispatch","setType","values","formData","FormData","append","updata","setFieldValue","htmlFor","Sprite","id","onChange","event","files","UserInfo","imageUrl","modal","setModal","handleClose","Header","currentTheme","setCurrentTheme","isDropdownActive","setIsDropdownActive","handleThemeChange","className","map","styles","container","display","flexDirection","deskMenu","Home"],"sourceRoot":""}