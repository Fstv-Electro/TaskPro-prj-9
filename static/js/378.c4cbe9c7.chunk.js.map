{"version":3,"file":"static/js/378.c4cbe9c7.chunk.js","mappings":"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","sources":["components/sidebar/CreateBoard/CreateBoard.styled.jsx","components/sidebar/modalBoard/ModalBoard.styled.jsx","components/iconRadioButtons/IconRadioButtons.styled.jsx","components/iconRadioButtons/IconRadioButtons.jsx","components/background/Background.styled.jsx","redux/dashboards/selectors.js","components/background/Background.jsx","components/sidebar/modalBoard/ModalBoard.jsx","components/sidebar/CreateBoard/CreateBoard.jsx","components/sidebar/MyBoards/MyBoards.styled.jsx","components/sidebar/MyBoards/MyBoards.jsx","components/sidebar/LogOut/LogOut.styled.jsx","components/sidebar/LogOut/LogOut.jsx","components/sidebar/needHelp/needHelp.styled.js","components/sidebar/needHelp/needHelpForm.styled.js","components/sidebar/needHelp/needHelpForm.jsx","components/sidebar/needHelp/needHelp.jsx","components/sidebar/Sidebar.styled.jsx","components/sidebar/Sidebar.jsx","components/Header/Header.styled.js","components/Header/UserInfo/UserInfo.styled.js","components/Header/UserInfo/EditUserForm/EditUserForm.styled.js","components/Header/UserInfo/EditUserForm/EditUserForm.js","components/Header/Loading/Loading.styled.js","components/Header/Loading/Loading.js","components/Header/UserInfo/UserInfo.js","components/Header/Header.js","components/HomeEmptyPage/HomeEmptyPage.styled.js","components/HomeEmptyPage/HomeEmptyPage.jsx","pages/homePage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const WrapperBoards = styled.div`\n  border-bottom: 1px solid #ffffff1a;\n  margin-bottom: 9px;\n  margin-right: 24px;\n`;\n\nexport const Boards = styled.p`\n  font-size: 16px;\n  font-family: Poppins;\n  font-weight: 600;\n  color: rgba(255, 255, 255, 0.5);\n  font-size: 12px;\n  letter-spacing: -0.24px;\n`;\n\nexport const WrapperCreate = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid #ffffff1a;\n  margin-bottom: 40px;\n    margin-right: 24px;\n`;\n\nexport const CreateTitle = styled.p`\n  width: 76px;\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\n\nexport const CreateButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  width: 40px;\n  height: 36px;\n  border-radius: 8px;\n  background: #bedbb0;\n  outline: none;\n  cursor: pointer;\n  transform: scale(1);\n  transition: transform 550ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.1);\n  }\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const IconPlus = styled.svg`\n  \n  flex-shrink: 0;\n  fill: #bedbb0;\n  color: #121212;\n`;\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const Forma = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Input = styled(Field)`\n  display: flex;\n  width: 280px;\n  padding: 14px 1px 14px 18px;\n  /* margin: 0 24px 0 24px; */\n  align-items: center;\n  border-radius: 8px;\n  border: 1px solid #bedbb0;\n  opacity: 0.4000000059604645;\n  background: #1f1f1f;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  color: #fff;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  /* width: 250px; */\n`;\n\nexport const Text = styled.p`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 12px;\n  letter-spacing: 0.03em;\n  margin-bottom: 10px;\n`;\n\nexport const FormTitle = styled.h2`\n  color: #fff;\n  font-size: 18px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n`;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.div`\n  max-width: 300px;\n  margin: 10px auto;\n`;\n\nexport const FormOptions = styled.ul`\n  border: none;\n  padding: 0;\n`;\n\nexport const FormQuestion = styled.legend`\n  color: #fff;\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\n\nexport const FormAnswer = styled.li`\n  display: inline-block;\n  box-sizing: border-box;\n  vertical-align: top;\n  text-align: center;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  height: 100%;\n  width: 100%;\n  padding-right: 6px;\n  cursor: pointer;\n  opacity: 0.5;\n  transition: all 0.5s ease-in-out;\n`;\n\nexport const Input = styled.input`\n  &[type='radio'] {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n  &[type='radio']:active ~ label {\n    opacity: 1;\n  }\n  &[type='radio']:checked ~ label {\n    opacity: 1;\n  }\n`;\n\nexport const Svg = styled.svg`\n  width: 18px;\n  height: 18px;\n  stroke: #fff;\n  :hover {\n    stroke: #bedbb0;\n  }\n`;\n","import { useState } from 'react';\nimport {\n  Form,\n  FormOptions,\n  FormAnswer,\n  Label,\n  Input,\n  Svg,\n  FormQuestion,\n} from './IconRadioButtons.styled';\nimport sprite from '../../images/symbol-defs.svg';\n\nexport const IconRadioButtons = () => {\n  const [item, setItem] = useState('');\n  const icons = [\n    { name: 'Project', id: 'match_1' },\n    { name: 'star-04', id: 'match_2' },\n    { name: 'loading-03', id: 'match_3' },\n    { name: 'puzzle-piece-02', id: 'match_4' },\n    { name: 'container', id: 'match_5' },\n    { name: 'lightning-02', id: 'match_6' },\n    { name: 'colors', id: 'match_7' },\n    { name: 'hexagon-01', id: 'match_8' },\n  ];\n\n  const onClickIcon = e => {\n    setItem(e.target.value);\n  };\n  console.log(item);\n  return (\n    <>\n      <Form>\n        <FormOptions>\n          <FormQuestion>Icons</FormQuestion>\n          {icons.map(({ name, id }) => (\n            <FormAnswer key={id}>\n              <Input\n                onClick={onClickIcon}\n                type=\"radio\"\n                name=\"match\"\n                id={id}\n                value={name}\n              />\n              <Label htmlFor={id}>\n                <Svg aria-label=\"question with round\">\n                  <use href={sprite + `#icon-${name}`}></use>\n                </Svg>\n              </Label>\n            </FormAnswer>\n          ))}\n        </FormOptions>\n      </Form>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  max-width: 300px;\n  margin: 10px auto;\n`;\n\nexport const List = styled.ul`\n  border: none;\n  padding: 0;\n`;\n\nexport const FormQuestion = styled.legend`\n  color: #fff;\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\n\nexport const Item = styled.li`\n  display: inline-block;\n  box-sizing: border-box;\n  vertical-align: top;\n  text-align: center;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  height: 100%;\n  width: 100%;\n  padding-right: 4px;\n  cursor: pointer;\n  opacity: 0.5;\n  transition: all 0.5s ease-in-out;\n`;\n\nexport const Input = styled.input`\n  &[type='radio'] {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n  &[type='radio']:active ~ label {\n    opacity: 1;\n    border: 1px solid #fff;\n  }\n  &[type='radio']:checked ~ label {\n    opacity: 1;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 28px;\n  height: 28px;\n\n  :hover,\n  :active {\n    border: 1px solid #fff;\n  }\n`;\n","// task\nexport const selectBoard = state => state.task.boards;\n\nexport const selectList = state => state.task.lists;\n\nexport const selectCard = state => state.task.cards;\n\nexport const selectBackground = state => state.task.currentBcg;\n\nexport const selectIsLoading = state => state.task.isLoading;\n\nexport const selectError = state => state.task.error;\n\nexport const selectBackgroundUrl = state => state.task.bgUrl;\n\n// task\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Wrapper,\n  List,\n  Item,\n  Label,\n  Input,\n  Img,\n  FormQuestion,\n} from './Background.styled';\nimport { backgroundUrl } from '../../redux/dashboards/operations';\nimport { selectBackgroundUrl } from '../../redux/dashboards/selectors';\n\nexport const Background = icons => {\n  const [item, setItem] = useState('');\n  const dispatch = useDispatch();\n  const selectBgIcons = useSelector(selectBackgroundUrl);\n\n  useEffect(() => {\n    dispatch(backgroundUrl());\n  }, [dispatch]);\n\n  const onClickIcon = e => {\n    setItem(e.target.value);\n  };\n  console.log(item);\n\n  return (\n    <Wrapper>\n      <List>\n        <FormQuestion>Background</FormQuestion>\n        {selectBgIcons.map(({ id, previewURL }) => (\n          <Item key={id}>\n            <Input\n              onClick={onClickIcon}\n              type=\"radio\"\n              name=\"id\"\n              id={id}\n              value={id}\n            />\n            <Label htmlFor={id}>\n              <Img src={previewURL} alt={'bg'} />\n            </Label>\n          </Item>\n        ))}\n      </List>\n    </Wrapper>\n  );\n};\n","import { useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\nimport { Forma, Label, Input, FormTitle } from './ModalBoard.styled';\nimport SubmitButton from '../../submitButton/submitButton';\nimport { IconRadioButtons } from '../../iconRadioButtons/IconRadioButtons';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { ButtonClose } from '../../modalBtnClose/ButtonClose';\n// import { bgCreateBoard } from '../../../redux/dashboards/operations';\n// import { selectBgIcon } from '../../../redux/dashboards/selectors';\nimport { Background } from '../../background/Background';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n});\n\nexport const ModalBoard = ({ onClose }) => {\n  const [name, setName] = useState('');\n  // const dispatch = useDispatch();\n  // const selectBgIcons = useSelector(selectBgIcon);\n\n  // useEffect(() => {\n  //   dispatch(bgCreateBoard());\n  // }, [dispatch]);\n\n  // console.log(selectBgIcons);\n  const handleSubmit = (query, { resetForm }) => {\n    if (!query) {\n      console.log('error');\n    } else {\n      setName(query.name);\n      console.log(name);\n      resetForm();\n    }\n    onClose();\n  };\n\n  const initialValues = {\n    name: '',\n  };\n\n  return (\n    <>\n      <ButtonClose onClose={onClose} />\n      <FormTitle>New board</FormTitle>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <Forma>\n          <Label htmlFor=\"name\">\n            <Input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Title\"\n              required\n              minLength=\"4\"\n              maxLength=\"12\"\n            />\n            <ErrorMessage name=\"name\" component=\"div\" />\n          </Label>\n\n          <SubmitButton\n            title=\"Create\"\n            width=\"302\"\n            height=\"49\"\n            theme=\"Dark\"\n            icon={true}\n            addColumn={false}\n          />\n        </Forma>\n      </Formik>\n      <IconRadioButtons />\n      <Background />\n    </>\n  );\n};\n","import { useState } from 'react';\nimport {\n  WrapperBoards,\n  Boards,\n  WrapperCreate,\n  CreateTitle,\n  CreateButton,\n  IconPlus,\n} from './CreateBoard.styled';\nimport sprite from '../../../images/symbol-defs.svg';\nimport { Modal } from 'components/modal/modal';\nimport { ModalBoard } from '../modalBoard/ModalBoard';\n\nexport const CreateBoard = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleModal = () => {\n    setIsOpen(isOpen => !isOpen);\n  };\n  return (\n    <>\n      <WrapperBoards>\n        <Boards>My boards</Boards>\n      </WrapperBoards>\n      <WrapperCreate>\n        <CreateTitle>Create a new board</CreateTitle>\n        <CreateButton type=\"button\" onClick={toggleModal}>\n          <IconPlus aria-label=\"question with round\" width=\"20px\" height=\"20px\">\n            <use href={sprite + '#icon-plus-add'}></use>\n          </IconPlus>\n        </CreateButton>\n        {isOpen && (\n          <Modal\n            onClose={toggleModal}\n            children={<ModalBoard onClose={toggleModal} />}\n          />\n        )}\n      </WrapperCreate>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding-left: 0;\n  margin: 0;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 61px;\n  width: 100%;\n  /* border-right: 4px solid #bedbb0; */\n  background-color: #1f1f1f;\n  margin-bottom: 4px;\n  color: #fff;\n  &:after {\n    content: '';\n    display: flex;\n    position: absolute;\n    right: 0;\n    border-radius: 4px 0px 0px 4px;\n    background: #bedbb0;\n    width: 4px;\n    height: 61px;\n  }\n`;\n\nexport const NavItem = styled(NavLink)`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n  height: 100%;\n  background-color: #121212;\n  &.active {\n    background-color: #1f1f1f;\n    outline: none;\n  }\n`;\n\nexport const WrapperProjectOffice = styled.button`\n  display: flex;\n  align-items: center;\n  color: #fff;\n  border: none;\n  background: none;\n  cursor: pointer;\n`;\n\nexport const Project = styled.p`\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  margin-left: 8px;\n`;\n\nexport const WrapperProjectIcons = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: 20px;\n`;\n\nexport const IconButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: #fff;\n`;\n","import {\n  List,\n  Item,\n  WrapperProjectOffice,\n  Project,\n  WrapperProjectIcons,\n  IconButton,\n  NavItem\n} from './MyBoards.styled';\nimport sprite from '../../../images/symbol-defs.svg';\n\nexport const MyBoards = (desk) => {\n  if (desk.desk === undefined) {\n    return;\n  }\n\n  const pjIcon = `#${desk.desk.icon}`;\n  return (\n    <List>\n      <Item>\n        <NavItem to={desk.desk.title}>\n          <WrapperProjectOffice onClick={() => {}}>\n            <svg aria-label=\"question with round\" width=\"18px\" height=\"16px\">\n              <use href={sprite + pjIcon}></use>\n            </svg>\n            <Project>{desk.desk.title}</Project>\n          </WrapperProjectOffice>\n          <WrapperProjectIcons>\n          <IconButton onClick={() => {}}>\n            <svg aria-label=\"question with round\" width=\"16px\" height=\"16px\">\n              <use href={sprite + `#icon-pencil-01`}></use>\n            </svg>\n          </IconButton>\n          <IconButton onClick={() => {}}>\n            <svg aria-label=\"question with round\" width=\"16px\" height=\"16px\">\n              <use href={sprite + '#icon-trash-04'}></use>\n            </svg>\n          </IconButton>\n          </WrapperProjectIcons>\n        </NavItem>\n      </Item>\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const LogOutButton = styled.button`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  background: none;\n  border: none;\n  padding: 0;\n`;\n\nexport const LogOutText = styled.span`\n  font-size: 16px;\n  font-family: Poppins;\n  font-weight: 500;\n  color: #fff;\n  margin-left: 14px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { logOut } from 'redux/auth/operations';\nimport { LogOutButton, LogOutText } from './LogOut.styled';\nimport sprite from '../../../images/symbol-defs.svg';\n\nexport const LogOut = () => {\n  const dispatch = useDispatch();\n  return (\n    <LogOutButton type=\"button\" onClick={() => dispatch(logOut())}>\n      <svg\n        aria-label=\"question with round\"\n        width=\"24px\"\n        height=\"24px\"\n        fill=\"inherit\"\n      >\n        <use href={sprite + '#icon-login'}></use>\n      </svg>\n      <LogOutText>Log out</LogOutText>\n    </LogOutButton>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 212px;\n  padding: 20px;\n  margin-bottom: 20px;\n  margin-right: 24px;\n  border-radius: 8px;\n  background: #1f1f1f;\n  @media (min-width: 768px) {\n    max-width: 212px;\n  }\n`;\n\nexport const Text = styled.p`\n  color: #fff;\n  font-size: 12px;\n  font-family: 'Poppins';\n  line-height: 20px;\n  @media (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const Span = styled.span`\n  color: #bedbb0;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  font-size: 12px;\n  font-weight: 500;\n  padding: 0;\n  border: none;\n  color: #fff;\n  background: #1f1f1f;\n  @media (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\nexport const Image = styled.img`\n  width: 54px;\n  height: 78px;\n  margin-bottom: 14px;\n`;\nexport const TextButton = styled.span`\n  margin-left: 8px;\n  :hover {\n    color: #bedbb0;\n  }\n`;\n\nexport const Svg = styled.svg`\n  stroke: #fff;\n  :hover {\n    stroke: #bedbb0;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { Field as FormicField, Form as FormicForm } from 'formik';\n\nexport const Title = styled.h2`\n    margin: 0 0 24px 0;\n    font-size: 18px;\n    font-weight: 500;\n`;\n\nexport const Form = styled(FormicForm)`\n    display: flex;\n    flex-direction: column;\n    gap: 14px;\n`\n\nexport const Field = styled(FormicField)`\n    max-width: 100%;\n    padding-top: 14px;\n    padding-bottom: 14px;\n    padding-left: 18px;\n    border-radius: 8px;\n    border: 1px solid #BEDBB0;\n    opacity: 0.4000000059604645;\n    color: #FFF;\n    background-color: transparent; \n`;\n\nexport const Textarea = styled(FormicField)`\n    max-width: 100%;\n    height: 120px;\n    margin-bottom: 40px;\n    padding-top: 14px;\n    padding-bottom: 14px;\n    padding-left: 18px;\n    border-radius: 8px;\n    border: 1px solid #BEDBB0;\n    opacity: 0.4000000059604645;\n    color: #FFF;\n    background-color: transparent;\n     \n`;","import { useDispatch } from \"react-redux\";\nimport { needHelp } from \"redux/dashboards/operations\";\nimport SubmitButton from \"../../submitButton/submitButton\";\nimport { Formik, ErrorMessage } from 'formik';\nimport { Title, Field, Form, Textarea } from './needHelpForm.styled';\nimport { ButtonClose } from 'components/modalBtnClose/ButtonClose';\nimport * as Yup from 'yup';\n\nconst helpSchema = Yup.object().shape({\n  email: Yup.string()\n    .matches(\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n      {\n        message: 'Invalid Email',\n        excludeEmptyString: true,\n      }\n    )\n    .required('Please, enter your email'),\n  text: Yup.string()\n    .required('Please, enter your comment'),\n});\n\nexport const NeedHelpForm = ({onClose}) => {\n    const dispatch = useDispatch();\n\n    function handleSubmit(value) {\n        console.log(value);\n        const { email, text } = value;\n        dispatch(needHelp({email, text}))\n        onClose()\n      }\n    return (\n        <>\n        <ButtonClose onClose={onClose} />\n        <Title>Need Help</Title>\n        <Formik\n        initialValues={{ email: '', text: '' }}\n          validationSchema={helpSchema}\n          onSubmit={(value, { resetForm }) => {\n            handleSubmit(value);\n            resetForm();\n          }}>\n            <Form>\n            <Field type=\"email\" name=\"email\" placeholder=\"Enter your email\" />\n            <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                style={{\n                  color: 'red',\n                  fontSize: 14,\n                }}\n              />\n              <Textarea type=\"text\" name=\"text\" placeholder=\"Enter your comment\" component=\"textarea\" />\n              <ErrorMessage\n                name=\"text\"\n                component=\"div\"\n                style={{\n                  color: 'red',\n                  fontSize: 14,\n                }}\n              />\n              <SubmitButton title=\"Send\" width=\"352\" height=\"49\" theme=\"Dark\"/>\n            </Form>\n        </Formik>\n        </>\n    )\n\n}","import { useState } from 'react';\nimport {\n  Container,\n  Text,\n  Span,\n  Button,\n  Image,\n  TextButton,\n  Svg\n} from './needHelp.styled';\nimport background from '../../../images/help.png';\nimport sprite from '../../../images/symbol-defs.svg';\nimport { Modal } from 'components/modal/modal';\nimport { NeedHelpForm } from './needHelpForm';\n\nexport const NeedHelp = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleModal = () => {\n    setIsOpen(isOpen => !isOpen)\n  }\n  return (\n    <Container>\n      <Image src={background} alt=\"Logo\" />\n      <Text>\n        If you need help with <Span>TaskPro</Span>, check out our support\n        resources or reach out to our customer support team.\n      </Text>\n      <Button onClick={toggleModal}>\n        <Svg aria-label=\"question with round\" width=\"20px\" height=\"20px\">\n          <use href={sprite + '#icon-help-circle'}></use>\n        </Svg>\n        <TextButton>Need help?</TextButton>\n      </Button>\n      {isOpen && <Modal onClose={toggleModal} children={<NeedHelpForm onClose={toggleModal}/>} />}\n    </Container>\n  );\n};\n\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 260px;\n  height: calc(100vh - 24px);\n  align-items: center;\n  position: relative;\n  margin: 0;\n  padding: 24px 0 0 24px;\n  color: #fff;\n  background: #121212;\n`;\n\nexport const WrapperTitle = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 64px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 16px;\n  font-family: Poppins;\n  font-weight: 600;\n  letter-spacing: -0.64px;\n`;\n\nexport const NaviUser = styled.div`\n  /* display: flex;\n  flex-direction: column;\n  justify-content: space-between; */\n  /* height: 100%; */\n  width: 100%;\n  /* gap:28px; */\n`;\n\nexport const NavDashboards = styled.nav`\n  /* margin-bottom: auto; */\n`;\n\nexport const NeedHelpLogOutContainer = styled.div`\n  margin-top: auto;\n  margin-bottom: 28px;\n`;\n\nexport const WrapperLogo = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 8px;\n  background-color: #1f1f1f;\n  border-radius: 5px;\n`;\n\nexport const Logo = styled.svg`\n  width: 32px;\n  height: 32px;\n  flex-shrink: 0;\n  fill: #1f1f1f;\n  color: #121212;\n`;\n","import { CreateBoard } from './CreateBoard/CreateBoard';\nimport { MyBoards } from './MyBoards/MyBoards';\nimport { LogOut } from './LogOut/LogOut';\nimport { NeedHelp } from './needHelp/needHelp';\nimport {\n  Container,\n  WrapperTitle,\n  Title,\n  WrapperLogo,\n  NavDashboards,\n  NaviUser,\n  NeedHelpLogOutContainer,\n  Logo,\n} from './Sidebar.styled';\nimport sprite from '../../../src/images/symbol-defs.svg';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectBoard } from 'redux/dashboards/selectors';\nimport { fetchBoards } from 'redux/dashboards/operations';\nimport { useEffect } from 'react';\n\nexport const Sidebar = () => {\n  const dispatch = useDispatch();\n  const selectBoards = useSelector(selectBoard);\n  // const isLoading = useSelector(selectIsLoading);\n  // const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchBoards());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <NaviUser>\n        <WrapperTitle>\n          <WrapperLogo>\n            <Logo aria-label=\"question with round\" width=\"32px\" height=\"32px\">\n              <use href={sprite + '#icon-icon'}></use>\n            </Logo>\n          </WrapperLogo>\n\n          <Title>Task Pro</Title>\n        </WrapperTitle>\n        <CreateBoard />\n      </NaviUser>\n      <NavDashboards>\n        <MyBoards />\n        {selectBoards.map(board => (\n          <MyBoards key={board._id} id={board._id} desk={board} />\n        ))}\n      </NavDashboards>\n      <NeedHelpLogOutContainer>\n        <NeedHelp />\n        <LogOut />\n      </NeedHelpLogOutContainer>\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const HeaderStyled = styled.header`\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    width: 100%; \n    height: 68px;\n    background: #161616;\n\n`\n\nexport const ThemeContainer = styled.div`\n    position: relative;\n    display: inline-block;\n    width: 70px;\n    height: auto;\n    margin-right: 14px;\n    color: rgba(255, 255, 255, 0.80);\n\n}     \n`\n\nexport const ThemeList = styled.ul`\n    position: absolute;\n    top: 26px;\n    left: -12px;\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: repeat(3, 1fr);\n    grid-column-gap: 0px;\n    grid-row-gap: 4px;\n    margin: 0px;\n    max-height: 0px;\n    padding: 0 44px 0 18px;\n    \n    overflow: hidden;\n    list-style: none;\n    cursor: pointer;\n    background: #161616;\n    border-radius: 8px;\n    transition: all 0.3s ease-out;\n    transition: transform 550ms cubic-bezier(0.4, 0, 0.2, 1);\n    z-index: 1000;\n\n      &.active  {\n        max-height: 107px;\n        padding: 18px 44px 18px 18px;\n      }\n  `\nexport const ThemeSelect = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.3s ease-out;\n  transition: transform 550ms cubic-bezier(0.4, 0, 0.2, 1);\n  padding: 10px 1px;\n\n  &:hover{\n    text-shadow: 0 1px 4px rgba(190, 219, 176, 1);\n    transform: scale(1.1);\n  }\n`\n\nexport const P = styled.p`\n    padding: 0;\n    margin: 0;\n    font-size: 14px;\n    font-weight: 500;\n    letter-spacing: -0.28px;\n    margin-right: 4px;\n`\n\nexport const Item = styled.li`\n    \n`;\n\nexport const ItemBtn = styled.button`\n  height: 21px;\n  margin: 0;\n  padding: 0;\n  text-align: left;\n  text-transform: capitalize;\n  font-size: 14px;\n  letter-spacing: -0.28px;\n  border: none;\n  background: transparent;\n  cursor: ${({ disabled }) => (disabled ? '' : 'pointer')};\n  color: ${({ selected }) => (selected ? '#BEDBB0' : 'rgba(255, 255, 255, 0.50);')};\n  transition: all 0.3s ease-out;\n   \n    &:hover{\n      text-shadow:${({ disabled }) => (!disabled ? '0 1px 4px rgba(190, 219, 176, 1)' : '')};\n      transform: ${({ disabled }) => (!disabled ? 'scale(1.1)' : 'scale(1)')};\n      \n    }\n`;\n\n\n","import styled from '@emotion/styled';\n\nexport const UserContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: auto;\n    color: rgba(255, 255, 255, 1);\n    margin-right: 24px;\n`;\nexport const UserEmail = styled.p`\n    font-size: 14px;\n    font-weight: 500;\n    letter-spacing: -0.28px;\n    margin-right: 8px;\n`;\n\nexport const ImgWrapper = styled.div`\n    width: 32px;\n    height: 32px;\n    border-radius: 8px;\n    overflow: hidden;\n    cursor: pointer;\n    transition: all 0.3s ease-out;\n    transition: transform 550ms cubic-bezier(0.4, 0, 0.2, 1);\n        &:hover{\n            box-shadow: 0px 0px 11px 0px rgba(190, 219, 176, 1);\n            transform: scale(1.1);\n        }\n`\nexport const Img = styled.img`\n        width: 100%;\n\t\theight: 100%;\n\t\tobject-fit: cover;\n`","import styled from '@emotion/styled';\nimport { Field as FormicField, Form as FormicForm, ErrorMessage as FormicErrorMessage } from 'formik';\n\nexport const Container = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n`;\n\nexport const UserForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  border-radius: 8px;\n  }\n`;\nexport const ErrorMessage = styled(FormicErrorMessage)`\n\n`\n\nexport const Title = styled.h3`\n  color: #fff;\n  font-size: 18px;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin: 0;\n`;\n\nexport const Form = styled(FormicForm)`\n  display: flex;\n  gap: 24px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const FormFields = styled.div`\n  display: flex;\n  gap: 14px;\n  flex-direction: column;\n`;\n\nexport const Field = styled(FormicField)`\n  font-size: 14px;\n  font-family: 'Poppins';\n  letter-spacing: -0.28px;\n\n  width: 269px;\n  height: 49px;\n  padding-left: 18px;\n  background-color: transparent;\n  color: white;\n  border-radius: 8px;\n  border: 1px solid #bedbb0;\n  opacity: 0.4000000059604645;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n\n\n  @media screen and (min-width: 768px) {\n    width: 326px;\n    height: 49px;\n  }\n`;\n\nexport const Button = styled.button`\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  letter-spacing: -0.28px;\n\n  padding: 14px;\n  width: 100%;\n\n  background-color: #bedbb0;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n   \n    &:active:not(:disabled) {\n      position:relative;\n      top:1px;\n      box-shadow: -4px -4px 43px 2px rgba(34, 60, 80, 0.2) inset;\n    }\n  }\n`;\n\nexport const FormIcon = styled.span`\n  position: relative;\n  display: block;\n`;\n\nexport const Eye = styled.button`\n  position: absolute;\n  top: 50%;\n  right: 12px;\n  transform: translateY(-50%);\n\n  background-color: transparent;\n  border: none;\n  opacity: 0.4000000059604645;\n`;\n\nexport const Icon = styled.svg`\n  width: 18px;\n  height: 18px;\n`;\n\nexport const Label = styled.label`\n    width: 68px;\n    height: 79px;\n    margin: 25px auto 0 auto;\n    cursor: pointer;\n`\nexport const FieldAvatar = styled.input`\n    display: none;\n`\nexport const ImgWrapper = styled.div`\n    position: relative;\n    width: 68px;\n    height: 68px;\n    border-radius: 8px;\n    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    transition: transform 550ms cubic-bezier(0.4, 0, 0.2, 1);\n      \n      &:hover{\n        box-shadow: 0px 0px 11px 0px rgba(190, 219, 176, 1);\n        transform: scale(1.1);\n      }\n\n      &:hover svg{\n        top: 50%;\n        box-shadow: 0px 0px 11px 0px rgba(190, 219, 176, 1);\n      }\n\n\n`\nexport const Img = styled.img`\n    width: 100%;\n\t\theight: 100%;\n\t\tobject-fit: cover;\n    border-radius: 8px;\n`\nexport const IconPlus = styled.svg`\n  position: absolute;\n  top: 98%;\n  left: 50%;\n  transform:translate(-50%, -50%);\n  transition: transform 550ms cubic-bezier(0.4, 0, 0.2, 1);\n  width: 24px;\n  height: 24px;\n  fill: ${props => props.fill};\n  color: ${props => props.color};\n`;","import { Formik, ErrorMessage } from 'formik';\nimport {\n  Container,\n  Title,\n  UserForm,\n  Form,\n  Field,\n  FormFields,\n  FormIcon,\n  Icon,\n  Eye,\n  ImgWrapper,\n  Img,\n  FieldAvatar,\n  IconPlus,\n  Label,\n  Button,\n} from './EditUserForm.styled';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsError } from 'redux/auth/selectores';\nimport { update } from 'redux/auth/operations';\nimport Sprite from '../../../../images/symbol-defs.svg'\nimport * as Yup from 'yup';\nimport Notiflix from 'notiflix';\n\n\nconst NewUserSchema = Yup.object().shape({\n  avatar: Yup.mixed()\n    .test('fileType', 'Invalid file format', (value) => {\n      if (!value) return true; \n      const supportedFormats = ['image/png', 'image/jpeg', 'image/jpg'];\n      return supportedFormats.includes(value.type);\n    }),\n  name: Yup.string()\n    .matches(/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/, {\n      message:\n        \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n      excludeEmptyString: true,\n    })\n    .required('Required'),\n  email: Yup.string()\n    .matches(\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n      {\n        message: 'Email error',\n        excludeEmptyString: true,\n      }\n    )\n    .required('Required'),\n  password: Yup.string()\n    .matches(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{5,}$/, {\n      message: 'Password error',\n      excludeEmptyString: true,\n    })\n    .required('Required'),\n});\n\nNotiflix.Notify.init({\n  position: 'right-bottom',\n});\n\nexport const  EdidUserForm = ({avatarURL, onClose}) => {\n  const dispatch = useDispatch();\n  const [type, setType] = useState('password');\n  const [currentImage, setCurrentImage] = useState(avatarURL);\n  const isError = useSelector(selectIsError);\n\n  function handleSubmit(value) {\n    const { avatar, name, email, password  } = value;\n    \n    const formData = new FormData();\n    if (avatar){\n      formData.append('avatar', avatar);\n    }\n    formData.append('name', name);\n    formData.append('email', email);\n    formData.append('password', password);\n    \n    dispatch(update(formData));\n  }\n\n  function handleClick() {\n    switch (type) {\n      case 'text':\n        return setType('password');\n      case 'password':\n        return setType('text');\n\n      default:\n        break;\n    }\n  };\n\n  function handleFileChange(event) {\n    const file = event; \n    if (!file) {\n      return;\n    }\n    const reader = new FileReader(); \n    \n    reader.onload = function (e) {\n      setCurrentImage(e.target.result); \n    };\n  \n    reader.readAsDataURL(file);\n  }\n  \n  if (isError) {\n    Notiflix.Notify.warning('Error update date');\n  }\n\n  return (\n    <Container>\n      <UserForm>\n        <Title>Edit profile</Title>\n          \n        <Formik\n          initialValues={{name: '', email: '', password: ''  }}\n          validationSchema={NewUserSchema}\n          onSubmit={(values, { resetForm }) => {\n            handleSubmit(values);\n            resetForm();\n          }}\n        >\n           {({ setFieldValue, isValid }) => (\n          <Form>\n            <FormFields >\n              <Label htmlFor=\"avatar\">\n              <ImgWrapper >\n              {currentImage ? (\n                <Img src={currentImage} alt=\"User picture\" />\n                ) : (\n                <svg aria-label=\"User picture\" width=\"68px\" height=\"68px\">\n                  <use href={Sprite + '#icon-user'}></use>\n                </svg>\n                )}\n                <IconPlus aria-label=\"add\" fill=\"rgba(190, 219, 176, 1)\" color=\"rgba(22, 22, 22, 1)\">\n                  <use href={Sprite + '#icon-plus-add'}></use>\n                </IconPlus>\n              </ImgWrapper>\n              </Label>\n              <FieldAvatar \n                    id=\"avatar\" \n                    type=\"file\" \n                    name=\"avatar\" \n                    onChange={(event) => {\n                      setFieldValue('avatar', event.currentTarget.files[0]);\n                      handleFileChange(event.currentTarget.files[0])\n                    }}\n              />               \n              <ErrorMessage\n                name=\"avatar\"\n                component=\"div\"\n              />\n\n              <Field type=\"text\" name=\"name\" placeholder=\"Ivetta\" />\n              <ErrorMessage\n                name=\"name\"\n                component=\"div\"\n              />\n              <Field type=\"email\" name=\"email\" placeholder=\"ivetta34@gmail.com\" />\n              <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n              />\n              <FormIcon>\n                <Field\n                  type={type}\n                  name=\"password\"\n                  placeholder=\"ivetta1999.23\"\n                />\n                <Eye type=\"button\" onClick={handleClick}>\n                  <Icon aria-label=\"Logo\">\n                    <use href={Sprite + '#icon-eye'}></use>\n                  </Icon>\n                </Eye>\n              </FormIcon>\n              <ErrorMessage\n                  name=\"password\"\n                  component=\"div\"\n                />\n            </FormFields>\n            <Button type=\"submit\" disabled={!isValid} > Send</Button>\n          </Form>\n         )}\n        </Formik>\n      </UserForm>\n    </Container>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n    position: absolute;\n    display: inline-block;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform:translate(-50%, -50%);\n    width: 80px;\n    height: 80px;\n  \n        & div {\n            position: absolute;\n            border: 4px solid #fff;\n            opacity: 1;\n            border-radius: 50%;\n            animation: lds-ripple 1s cubic-bezier(0, 0.2, 0.8, 1) infinite;\n        }\n        & div:nth-of-type(2) {\n            animation-delay: -0.5s;\n        }\n  @keyframes lds-ripple {\n    0% {\n      top: 36px;\n      left: 36px;\n      width: 0;\n      height: 0;\n      opacity: 0;\n    }\n    4.9% {\n      top: 36px;\n      left: 36px;\n      width: 0;\n      height: 0;\n      opacity: 0;\n    }\n    5% {\n      top: 36px;\n      left: 36px;\n      width: 0;\n      height: 0;\n      opacity: 1;\n    }\n    100% {\n      top: 0px;\n      left: 0px;\n      width: 72px;\n      height: 72px;\n      opacity: 0;\n    }\n  }\n`\n  ","import {Wrapper} from './Loading.styled'\nexport const Loading = () => {\n    return (\n        <Wrapper>\n            <div></div>\n            <div></div>\n        </Wrapper>\n    )\n}\n","import { useState } from 'react';\nimport { UserContainer, UserEmail, ImgWrapper, Img } from \"./UserInfo.styled\";\nimport { Modal } from '../../modal/modal';\nimport { ButtonClose } from 'components/modalBtnClose/ButtonClose';\nimport { EdidUserForm }  from './EditUserForm/EditUserForm'\nimport sprite from '../../../images/symbol-defs.svg';\nimport { Loading } from '../Loading/Loading';\nimport { useSelector } from \"react-redux\";\nimport { selectIsLoading } from 'redux/auth/selectores';\n\nexport const UserInfo = ({name=\"user\", avatarURL}) => {\n  const [modal, setModal] = useState(false);\n  const isLoading = useSelector(selectIsLoading);\n\n  const handleModalOpen = () => setModal(true);\n  const handleClose = () => setModal(false);\n\n  return (\n      <UserContainer>\n        <UserEmail>{name}</UserEmail>\n        <ImgWrapper onClick={handleModalOpen}>\n          {avatarURL ? (\n            <Img src={avatarURL} alt=\"User picture\" />\n          ) : (\n            <svg aria-label=\"User picture\" width=\"32px\" height=\"32px\">\n                <use href={sprite + '#icon-user'}></use>\n            </svg>\n          )}\n        </ImgWrapper>\n        {modal && \n          <Modal onClose={handleClose}>\n            <ButtonClose onClose={handleClose}/>\n            <EdidUserForm avatarURL={avatarURL} />\n           {isLoading && <Loading /> }\n          </Modal>}\n        \n      </UserContainer>\n  );\n};\n\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeTheme } from 'redux/auth/operations';\nimport { selectUser } from 'redux/auth/selectores';\nimport {\n  HeaderStyled,\n  ThemeContainer,\n  ThemeList,\n  P,\n  ThemeSelect,\n  Item,\n  ItemBtn,\n} from './Header.styled';\nimport { UserInfo } from './UserInfo/UserInfo';\nimport sprite from '../../images/symbol-defs.svg';\n\nexport const Header = () => {\n  const dispatch = useDispatch();\n  const {avatarURL, name, theme} = useSelector(selectUser)\n  const [currentTheme, setCurrentTheme] = useState(theme);\n  const [isDropdownActive, setIsDropdownActive] = useState(false);\n\n  useEffect(() => {\n    document.body.classList.add(currentTheme);\n    return () => {\n      document.body.classList.remove(currentTheme);\n    };\n  }, [currentTheme]);\n\n  const themeOptions = ['light', 'dark', 'violet'];\n\n  const handleDropdownClick = () => {\n    setIsDropdownActive(!isDropdownActive);\n  };\n  const handleThemeChange = e => {\n    setCurrentTheme(e.target.value);\n    dispatch(changeTheme({theme: e.target.value}));\n  };\n\n  return (\n    \n    <HeaderStyled>\n      <ThemeContainer>\n        <ThemeSelect onClick={handleDropdownClick}>\n          <P> Theme </P>\n          <svg aria-label=\"question with round\" width=\"16px\" height=\"16px\">\n            <use href={sprite + '#icon-chevron-down'}></use>\n          </svg>\n        </ThemeSelect>\n        <ThemeList className={isDropdownActive ? 'active' : ''}>\n          {themeOptions.map(theme => (\n            <Item key={theme}>\n              <ItemBtn\n                selected={currentTheme === theme}\n                disabled={currentTheme === theme}\n                value={theme}\n                onClick={handleThemeChange}\n              >\n                {theme}\n              </ItemBtn>\n            </Item>\n          ))}\n        </ThemeList>\n      </ThemeContainer>\n\n      <UserInfo  name={name} avatarURL={avatarURL}/>\n    </HeaderStyled>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const InfoText = styled.p`\n  width: 486px;\n  height: 72px;\n  color: rgba(255, 255, 255, 0.5);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 18px;\n  letter-spacing: -0.28px;\n\n  @media (max-width: 768px) {\n    font-size: 12px;\n    line-height: 16px;\n    width: 100%;\n    max-height: 80px;\n  }\n`;\n\nexport const AccentText = styled.span`\n  color: #bedbb0;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 18px;\n  letter-spacing: -0.28px;\n`;\n","import { Container, InfoText, AccentText } from \"./HomeEmptyPage.styled\";\n\nexport const EmptyPage = () => {\n    return (\n        <Container>\n            <InfoText>\n                Before starting your project, it is essential\n                <AccentText>to create a board</AccentText> to visualize and track all the necessary tasks and milestones.\n                This board serves as a powerful tool to organize the workflow and ensure effective collaboration among team members.\n            </InfoText>\n        </Container>\n    );\n};","import { Sidebar } from 'components/sidebar/Sidebar';\nimport { Header } from 'components/Header/Header';\nimport { EmptyPage } from 'components/HomeEmptyPage/HomeEmptyPage';\nimport { useSelector } from 'react-redux';\nimport { selectBoard } from 'redux/dashboards/selectors';\nimport { Outlet } from 'react-router-dom';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    backgroundColor: '#1F1F1F',\n  },\n  deskMenu: {\n    margin: 0,\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n  },\n};\n\nexport default function Home() {\n  const boards = useSelector(selectBoard);\n\n  return (\n    <div style={styles.container}>\n      <Sidebar />\n        {boards.length === 0 ? (\n        <div style={styles.deskMenu}>\n          <Header />\n          <EmptyPage />\n        </div>\n        ) : ( \n          <div style={styles.deskMenu}>\n            <Header />\n            <Outlet />\n          </div>\n        )}\n        \n\n    </div>\n  );\n}\n"],"names":["WrapperBoards","styled","Boards","WrapperCreate","CreateTitle","CreateButton","IconPlus","Forma","Form","Input","Field","Label","FormTitle","FormOptions","FormQuestion","FormAnswer","Svg","IconRadioButtons","useState","item","setItem","onClickIcon","e","target","value","console","log","name","id","map","onClick","type","htmlFor","href","sprite","Wrapper","List","Item","Img","selectBoard","state","task","boards","selectBackgroundUrl","bgUrl","Background","icons","dispatch","useDispatch","selectBgIcons","useSelector","useEffect","backgroundUrl","previewURL","src","alt","schema","yup","shape","required","ModalBoard","onClose","setName","ButtonClose","initialValues","onSubmit","query","resetForm","validationSchema","placeholder","minLength","maxLength","component","title","width","height","theme","icon","addColumn","CreateBoard","isOpen","setIsOpen","toggleModal","children","NavItem","NavLink","WrapperProjectOffice","Project","WrapperProjectIcons","IconButton","MyBoards","desk","undefined","pjIcon","to","LogOutButton","LogOutText","LogOut","logOut","fill","Container","Text","Span","Button","Image","TextButton","Title","FormicForm","FormicField","Textarea","helpSchema","Yup","email","matches","message","excludeEmptyString","text","NeedHelpForm","needHelp","handleSubmit","style","color","fontSize","NeedHelp","WrapperTitle","NaviUser","NavDashboards","NeedHelpLogOutContainer","WrapperLogo","Logo","Sidebar","selectBoards","fetchBoards","board","_id","HeaderStyled","ThemeContainer","ThemeList","ThemeSelect","P","ItemBtn","disabled","selected","UserContainer","UserEmail","ImgWrapper","UserForm","FormicErrorMessage","FormFields","FormIcon","Eye","Icon","FieldAvatar","props","NewUserSchema","avatar","test","includes","password","Notiflix","position","EdidUserForm","avatarURL","setType","currentImage","setCurrentImage","handleClick","selectIsError","values","formData","FormData","append","update","setFieldValue","isValid","Sprite","onChange","event","currentTarget","files","file","reader","FileReader","onload","result","readAsDataURL","handleFileChange","Loading","UserInfo","modal","setModal","isLoading","selectIsLoading","handleClose","Header","selectUser","currentTheme","setCurrentTheme","isDropdownActive","setIsDropdownActive","document","body","classList","add","remove","handleThemeChange","changeTheme","className","InfoText","AccentText","EmptyPage","styles","container","display","flexDirection","backgroundColor","deskMenu","margin","Home","length"],"sourceRoot":""}