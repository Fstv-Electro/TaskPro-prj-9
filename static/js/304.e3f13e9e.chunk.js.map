{"version":3,"file":"static/js/304.e3f13e9e.chunk.js","mappings":"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","sources":["components/sidebar/CreateBoard/CreateBoard.styled.jsx","components/sidebar/modalBoard/ModalBoard.styled.jsx","components/iconRadioButtons/IconRadioButtons.styled.jsx","components/iconRadioButtons/IconRadioButtons.jsx","components/sidebar/modalBoard/ModalBoard.jsx","components/sidebar/CreateBoard/CreateBoard.jsx","components/sidebar/MyBoards/MyBoards.styled.jsx","components/sidebar/modalBoard/EditBoard.jsx","components/sidebar/modalBoard/DeleteBoard.jsx","components/sidebar/MyBoards/MyBoards.jsx","components/sidebar/LogOut/LogOut.styled.jsx","components/sidebar/LogOut/LogOut.jsx","components/sidebar/needHelp/needHelp.styled.jsx","components/sidebar/needHelp/needHelpForm.styled.jsx","components/sidebar/needHelp/needHelpForm.jsx","components/sidebar/needHelp/needHelp.jsx","components/sidebar/Sidebar.styled.jsx","components/sidebar/Sidebar.jsx","components/HomeEmptyPage/HomeEmptyPage.styled.jsx","components/HomeEmptyPage/HomeEmptyPage.jsx","pages/homePage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const WrapperBoards = styled.div`\n  border-bottom: 1px solid var(--sidebar-line-color);\n  margin-bottom: 9px;\n  margin-right: 24px;\n  padding-bottom: 8px;\n`;\n\nexport const Boards = styled.p`\n  font-size: 12px;\n  letter-spacing: -0.24px;\n  opacity: 0.5;\n`;\n\nexport const WrapperCreate = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid var(--sidebar-line-color);\n  margin-bottom: 40px;\n  margin-right: 24px;\n  padding-top: 14px;\n  padding-bottom: 14px;\n`;\n\nexport const CreateTitle = styled.p`\n  width: 76px;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\n\nexport const CreateButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  width: 40px;\n  height: 36px;\n  border-radius: 8px;\n  background: var(--sidebar-bg-icon-plus-color);\n  border: none;\n  outline: none;\n  cursor: pointer;\n  transform: scale(1);\n  transition: transform 550ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.1);\n  }\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const IconPlus = styled.svg`\n  flex-shrink: 0;\n  fill: var(--sidebar-bg-icon-plus-color);\n  color: var(--color-icon-plus);\n`;\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const Forma = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n`;\n\nexport const Input = styled(Field)`\n  display: flex;\n  width: 280px;\n  padding: 14px 1px 14px 18px;\n  /* margin: 0 24px 0 24px; */\n  align-items: center;\n  background: transparent;\n  outline: none;\n  border-radius: 8px;\n  border: 1px solid var(--button-bg-color);\n  opacity: 0.4000000059604645;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  color: currentColor;\n\n    &:focus {\n      opacity: 1;\n    }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  /* width: 250px; */\n`;\n\nexport const Text = styled.p`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 12px;\n  letter-spacing: 0.03em;\n  margin-bottom: 10px;\n`;\n\nexport const FormTitle = styled.h2`\n  font-size: 18px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin-top: 14px;\n  margin-bottom: 24px;\n`;\n\nexport const DeleteTitle = styled.h2`\n  text-align: center;\n  font-size: 18px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin-top: 14px;\n  margin-bottom: 24px;\n`;\n\nexport const WrapperDelete = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 25px;\n  width: 250px;\n  transform: scale(1);\n  transition: transform 550ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const Btn = styled.button`\n  font-size: 18px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  padding: 5px;\n  background-color: var(--button-bg-color);\n  border: none;\n  border-radius: 8%;\n  color: #161616;\n  cursor: pointer;\n  width: 100px;\n  &:hover {\n    transform: scale(1.1);\n  }\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.div`\n  margin-bottom: 24px;\n`;\n\nexport const FormOptions = styled.ul`\n  border: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const FormQuestion = styled.legend`\n  color: currentColor;\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\n\nexport const FormAnswer = styled.li`\n  display: inline-block;\n  box-sizing: border-box;\n  vertical-align: top;\n  text-align: center;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  height: 100%;\n  width: 100%;\n  padding-right: 6px;\n  cursor: pointer;\n  opacity: 0.5;\n  transition: all 0.5s ease-in-out;\n`;\n\nexport const Input = styled.input`\n  &[type='radio'] {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n  &[type='radio']:active ~ label {\n    opacity: 1;\n  }\n  &[type='radio']:checked ~ label {\n    opacity: 1;\n  }\n`;\n\nexport const Svg = styled.svg`\n  width: 18px;\n  height: 18px;\n  --color1: var(--first-text-color);\n  :hover {\n    --color1: var(--button-bg-color);\n  }\n`;\n","import {\n  Form,\n  FormOptions,\n  FormAnswer,\n  Label,\n  Input,\n  Svg,\n  FormQuestion,\n} from './IconRadioButtons.styled';\nimport sprite from '../../images/symbol-defs.svg';\n\nexport const IconRadioButtons = ({ getIcon }) => {\n  const icons = [\n    { name: 'icon-Project', id: 'match_1' },\n    { name: 'icon-star-04', id: 'match_2' },\n    { name: 'icon-loading-03', id: 'match_3' },\n    { name: 'icon-puzzle-piece-02', id: 'match_4' },\n    { name: 'icon-container', id: 'match_5' },\n    { name: 'icon-lightning-02', id: 'match_6' },\n    { name: 'icon-colors', id: 'match_7' },\n    { name: 'icon-hexagon-01', id: 'match_8' },\n  ];\n\n  const onClickIcon = e => {\n    getIcon(e.target.value);\n  };\n  // console.log(item);\n  return (\n    <>\n      <Form>\n        <FormQuestion>Icons</FormQuestion>\n        <FormOptions>\n          {icons.map(({ name, id }) => (\n            <FormAnswer key={id}>\n              <Input\n                onClick={onClickIcon}\n                type=\"radio\"\n                name=\"match\"\n                id={id}\n                value={name}\n              />\n              <Label htmlFor={id}>\n                <Svg aria-label=\"question with round\">\n                  <use href={sprite + `#${name}`}></use>\n                </Svg>\n              </Label>\n            </FormAnswer>\n          ))}\n        </FormOptions>\n      </Form>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { Forma, Label, Input, FormTitle } from './ModalBoard.styled';\nimport SubmitButton from '../../submitButton/submitButton';\nimport { IconRadioButtons } from '../../iconRadioButtons/IconRadioButtons';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { ButtonClose } from '../../modalBtnClose/ButtonClose';\nimport { Background } from '../../background/Background';\nimport { useDispatch } from 'react-redux';\nimport { addBoard } from '../../../redux/dashboards/operations';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n});\n\nexport const ModalBoard = ({ onClose }) => {\n  const [icon, setIcon] = useState('');\n  const [currentBg, setCurrentBg] = useState('');\n  \n\n  const dispatch = useDispatch();\n\n  const getIcon = icon => {\n    setIcon({ icon });\n  };\n  const getBg = currentBg => {\n    setCurrentBg({ currentBg });\n  };\n\n  const handleSubmit = (query, { resetForm }) => {\n    if (!query) {\n      console.log('error');\n    } else {\n      dispatch(\n        addBoard({\n          title: query.name,\n          ...currentBg,\n          ...icon,\n        })\n      );\n      console.log({\n        title: query.name,\n        ...currentBg,\n        ...icon,\n      });\n      resetForm();\n    }\n    onClose();\n  };\n\n  const initialValues = {\n    name: '',\n  };\n\n  return (\n    <>\n      <ButtonClose onClose={onClose} />\n      <FormTitle>New board</FormTitle>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <Forma>\n          <Label htmlFor=\"name\">\n            <Input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Title\"\n              required\n              minLength=\"4\"\n              maxLength=\"12\"\n            />\n            <ErrorMessage name=\"name\" component=\"div\" />\n          </Label>\n\n          <IconRadioButtons getIcon={getIcon} />\n          <Background getBg={getBg} />\n          <SubmitButton\n            type=\"submit\"\n            title=\"Create\"\n            width=\"302\"\n            height=\"49\"\n            icon={true}\n            addColumn={false}\n          />\n        </Forma>\n      </Formik>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport {\n  WrapperBoards,\n  Boards,\n  WrapperCreate,\n  CreateTitle,\n  CreateButton,\n  IconPlus,\n} from './CreateBoard.styled';\nimport sprite from '../../../images/symbol-defs.svg';\nimport { Modal } from 'components/modal/modal';\nimport { ModalBoard } from '../modalBoard/ModalBoard';\n\nexport const CreateBoard = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleModal = () => {\n    setIsOpen(isOpen => !isOpen);\n  };\n  return (\n    <>\n      <WrapperBoards>\n        <Boards>My boards</Boards>\n      </WrapperBoards>\n      <WrapperCreate>\n        <CreateTitle>Create a new board</CreateTitle>\n        <CreateButton type=\"button\" onClick={toggleModal}>\n          <IconPlus aria-label=\"question with round\" width=\"40px\" height=\"36px\">\n            <use href={sprite + '#icon-plus-add'}></use>\n          </IconPlus>\n        </CreateButton>\n        {isOpen && (\n          <Modal\n            onClose={toggleModal}\n            children={<ModalBoard onClose={toggleModal} />}\n          />\n        )}\n      </WrapperCreate>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding-left: 0;\n  margin: 0;\n  &:last-child {\n    margin-bottom: 40px;\n  }\n`;\n\nexport const Item = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 61px;\n  width: 100%;\n\n  &:not(:last-child) {\n    margin-bottom: 4px;\n  }\n`;\n\nexport const NavItem = styled(NavLink)`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  min-width: 260px;\n  height: 100%;\n  text-decoration: none;\n  transition: border 550ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:not(.active):hover {\n    border-bottom: 1px solid var(--sidebar-bg-icon-logout-color);\n    margin-bottom: -1px;\n  }\n\n  &.active {\n    background-color: var(--sidebar-active-bg-color);\n    outline: none;\n    width: calc(100% + 24px);\n    padding-left: 24px;\n    margin-left: -24px;\n\n    @media (max-width: 768px) {\n      width: calc(100% + 14px);\n      padding-left: 14px;\n      margin-left: -14px;\n    }\n    &:after {\n      content: '';\n      display: flex;\n      position: absolute;\n      right: 0;\n      border-radius: 4px 0px 0px 4px;\n      background: var(--sidebar-bg-icon-logout-color);\n      width: 4px;\n      height: 61px;\n    }\n  }\n`;\n\nexport const WrapperProjectOffice = styled.button`\n  display: flex;\n  align-items: center;\n  color: var(--bord-list-color);\n  border: none;\n  background: none;\n  cursor: pointer;\n  width: 100%;\n`;\n\nexport const Project = styled.p`\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  margin-left: 8px;\n`;\n\nexport const WrapperProjectIcons = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n\n  &:not(:last-child) {\n    margin-right: 8px;\n  }\n`;\n\nexport const BtnContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 24px;\n`;\n\nexport const IconEdit = styled.svg`\n  width: 16px;\n  height: 16px;\n  color: rgba(255, 255, 255, 0.5);\n  transition: color 350ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: blue;\n  }\n`;\n\nexport const IconDelete = styled.svg`\n  width: 16px;\n  height: 16px;\n  color: rgba(255, 255, 255, 0.5);\n  transition: color 350ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: tomato;\n  }\n`;\n","import { useState } from 'react';\nimport { Forma, Label, Input, FormTitle } from './ModalBoard.styled';\nimport SubmitButton from '../../submitButton/submitButton';\nimport { IconRadioButtons } from '../../iconRadioButtons/IconRadioButtons';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { ButtonClose } from '../../modalBtnClose/ButtonClose';\nimport { Background } from '../../background/Background';\nimport { useDispatch } from 'react-redux';\nimport { editBoard } from '../../../redux/dashboards/operations';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n});\n\nexport const EditBoard = ({ desk, onClose }) => {\n  const [icon, setIcon] = useState('');\n  const [currentBg, setCurrentBg] = useState('');\n\n  const dispatch = useDispatch();\n\n  const getIcon = icon => {\n    setIcon({ icon });\n  };\n  const getBg = currentBg => {\n    setCurrentBg({ currentBg });\n  };\n\n  const handleSubmit = (query, { resetForm }) => {\n    if (!query) {\n      console.log('error');\n    } else {\n      dispatch(\n        editBoard({\n          title: query.name,\n          ...currentBg,\n          ...icon,\n          id: desk.desk._id,\n        })\n      );\n      console.log({\n        title: query.name,\n        ...currentBg,\n        ...icon,\n        id: desk.desk._id,\n      });\n      resetForm();\n    }\n    onClose();\n  };\n\n  return (\n    <>\n      <ButtonClose onClose={onClose} />\n      <FormTitle>Edit board</FormTitle>\n      <Formik\n        initialValues={{ id: desk.desk._id, name: desk ? desk.desk.title : '' }}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <Forma>\n          <Label htmlFor=\"name\">\n            <Input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Title\"\n              required\n              minLength=\"4\"\n              maxLength=\"12\"\n            />\n            <ErrorMessage name=\"name\" component=\"div\" />\n          </Label>\n\n          <IconRadioButtons getIcon={getIcon} />\n          <Background getBg={getBg} />\n          <SubmitButton\n            type=\"submit\"\n            title=\"Create\"\n            width=\"302\"\n            height=\"49\"\n            theme=\"Dark\"\n            icon={true}\n            addColumn={false}\n          />\n        </Forma>\n      </Formik>\n    </>\n  );\n};\n","import { DeleteTitle, Btn, WrapperDelete } from './ModalBoard.styled';\nimport { ButtonClose } from '../../modalBtnClose/ButtonClose';\nimport { useDispatch } from 'react-redux';\nimport { deleteBoard } from '../../../redux/dashboards/operations';\n\nexport const DeleteBoard = ({ desk, onClose }) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = () => {\n    dispatch(deleteBoard(desk.id));\n    onClose();\n  };\n\n  return (\n    <>\n      <ButtonClose onClose={onClose} />\n      <DeleteTitle>Delete Board?</DeleteTitle>\n      <WrapperDelete>\n        <Btn onClick={handleSubmit}>yes</Btn>\n        <Btn onClick={() => onClose()}>no</Btn>\n      </WrapperDelete>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport {\n  List,\n  Item,\n  WrapperProjectOffice,\n  Project,\n  WrapperProjectIcons,\n  NavItem,\n  IconEdit,\n  IconDelete,\n  BtnContainer,\n} from './MyBoards.styled';\nimport sprite from '../../../images/symbol-defs.svg';\nimport { fetchColumns } from 'redux/dashboards/operations';\nimport { changeBg, changeCurrentBoard } from 'redux/dashboards/slice';\nimport { useDispatch } from 'react-redux';\nimport { Modal } from 'components/modal/modal';\nimport { EditBoard } from '../modalBoard/EditBoard';\nimport { DeleteBoard } from '../modalBoard/DeleteBoard';\n\nexport const MyBoards = (desk, id) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [typeModal, setTypeModal] = useState('');\n  const dispatch = useDispatch();\n\n  if (desk.desk === undefined) {\n    return;\n  }\n\n  \n  const getColumns = id => {\n    dispatch(fetchColumns(id));\n    dispatch(changeBg(desk.desk.currentBg));\n    dispatch(changeCurrentBoard(id));\n  };\n\n  const deskRoute = desk.desk.title.split(' ').join('-');\n\n  const pjIcon = `#${desk.desk.icon}`;\n\n  const toggleModal = typeToggle => {\n    setIsOpen(isOpen => !isOpen);\n    setTypeModal(typeToggle);\n  };\n  return (\n    <List>\n      <Item>\n        <NavItem to={deskRoute}>\n          <WrapperProjectOffice onClick={() => getColumns(desk.id)}>\n            <svg aria-label=\"question with round\" width=\"18px\" height=\"16px\">\n              <use href={sprite + pjIcon}></use>\n            </svg>\n            <Project>{desk.desk.title}</Project>\n          </WrapperProjectOffice>\n          <BtnContainer>\n            <WrapperProjectIcons>\n              <IconEdit onClick={() => toggleModal('edit')}>\n                <svg\n                  aria-label=\"question with round\"\n                  width=\"16px\"\n                  height=\"16px\"\n                >\n                  <use href={sprite + `#icon-pencil-01`}></use>\n                </svg>\n              </IconEdit>\n            </WrapperProjectIcons>\n            <WrapperProjectIcons>\n              <IconDelete onClick={() => toggleModal('delete')}>\n                <svg\n                  aria-label=\"question with round\"\n                  width=\"16px\"\n                  height=\"16px\"\n                >\n                  <use href={sprite + '#icon-trash-04'}></use>\n                </svg>\n              </IconDelete>\n            </WrapperProjectIcons>\n          </BtnContainer>\n        </NavItem>\n      </Item>\n      {isOpen &&\n        (typeModal === 'edit' ? (\n          <Modal\n            onClose={toggleModal}\n            children={<EditBoard desk={desk} onClose={toggleModal} />}\n          />\n        ) : (\n          <Modal\n            onClose={toggleModal}\n            children={<DeleteBoard desk={desk} onClose={toggleModal} />}\n          />\n        ))}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const LogOutButton = styled.button`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  background: none;\n  border: none;\n  padding: 0;\n  transform: scale(1);\n  transition: transform 550ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.1);\n  }\n  &:focus {\n    transform: scale(1.1);\n  }\n\n  svg {\n    --color2: var(--sidebar-bg-icon-logout-color);\n  }\n`;\n\nexport const LogOutText = styled.span`\n  font-size: 16px;\n  font-family: Poppins;\n  font-weight: 500;\n  margin-left: 14px;\n  color: var(--bord-list-color);\n`;\n","import { useDispatch } from 'react-redux';\nimport { logOut } from 'redux/auth/operations';\nimport { LogOutButton, LogOutText } from './LogOut.styled';\nimport sprite from '../../../images/symbol-defs.svg';\n\nexport const LogOut = () => {\n  const dispatch = useDispatch();\n  return (\n    <LogOutButton type=\"button\" onClick={() => dispatch(logOut())}>\n      <svg\n        aria-label=\"question with round\"\n        width=\"24px\"\n        height=\"24px\"\n        fill=\"inherit\"\n      >\n        <use href={sprite + '#icon-login'}></use>\n      </svg>\n      <LogOutText>Log out</LogOutText>\n    </LogOutButton>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 212px;\n  padding: 20px;\n  margin-bottom: 20px;\n  margin-right: 24px;\n  border-radius: 8px;\n  background: var(--sidebar-second-bg-color);\n    \n    @media (min-width: 768px) {\n      max-width: 212px;\n    }\n`;\n\nexport const Text = styled.p`\n  color: var(--bord-list-color);\n  font-size: 12px;\n  font-family: 'Poppins';\n  line-height: 20px;\n  margin-bottom: 15px;\n    \n    @media (min-width: 768px) {\n      font-size: 14px;\n    }\n`;\n\nexport const Span = styled.span`\n  color: var(--button-bg-color);\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  font-size: 12px;\n  font-weight: 500;\n  padding: 0;\n  border: none;\n  color: currentColor;\n  background: var(--sidebar-second-bg-color);\n  cursor: pointer;\n\n      :hover {\n        color: var(--button-bg-color);\n        svg {\n          --color1: var(--button-bg-color);\n        }\n        \n      }\n    \n  @media (min-width: 768px) {\n      font-size: 14px;\n    }\n\n    \n`;\nexport const Image = styled.img`\n  width: 54px;\n  height: 78px;\n  margin-bottom: 14px;\n`;\nexport const TextButton = styled.span`\n  margin-left: 8px;\n  \n`;\n\nexport const Svg = styled.svg`\n  --color1: var(--bord-list-color);\n`;\n","import styled from '@emotion/styled';\nimport { Field as FormicField, Form as FormicForm } from 'formik';\n\nexport const Title = styled.h2`\n    margin: 0 0 24px 0;\n    font-size: 18px;\n    font-weight: 500;\n`;\n\nexport const Form = styled(FormicForm)`\n    display: flex;\n    flex-direction: column;\n    gap: 14px;\n`\n\nexport const Field = styled(FormicField)`\n    max-width: 100%;\n    padding-top: 14px;\n    padding-bottom: 14px;\n    padding-left: 18px;\n    border-radius: 8px;\n    border: 1px solid var(--button-bg-color);\n    opacity: 0.4000000059604645;\n    color: var(--first-text-color);\n    background-color: transparent; \n    outline: none;\n    &:focus {\n      opacity: 1;\n    }\n \n`;\n\nexport const Textarea = styled(FormicField)`\n    max-width: 100%;\n    height: 120px;\n    margin-bottom: 40px;\n    padding-top: 14px;\n    padding-bottom: 14px;\n    padding-left: 18px;\n    border-radius: 8px;\n    border: 1px solid var(--button-bg-color);\n    opacity: 0.4000000059604645;\n    color: var(--first-text-color);\n    background-color: transparent;\n    outline: none;\n    &:focus {\n      opacity: 1;\n    }\n\n`;","import { useDispatch } from \"react-redux\";\nimport { needHelp } from \"redux/dashboards/operations\";\nimport SubmitButton from \"../../submitButton/submitButton\";\nimport { Formik, ErrorMessage } from 'formik';\nimport { Title, Field, Form, Textarea } from './needHelpForm.styled';\nimport { ButtonClose } from 'components/modalBtnClose/ButtonClose';\nimport * as Yup from 'yup';\n\nconst helpSchema = Yup.object().shape({\n  email: Yup.string()\n    .matches(\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n      {\n        message: 'Invalid Email',\n        excludeEmptyString: true,\n      }\n    )\n    .required('Please, enter your email'),\n  text: Yup.string()\n    .required('Please, enter your comment'),\n});\n\nexport const NeedHelpForm = ({onClose}) => {\n    const dispatch = useDispatch();\n\n    function handleSubmit(value) {\n        console.log(value);\n        const { email, text } = value;\n        dispatch(needHelp({email, text}))\n        onClose()\n      }\n    return (\n        <>\n        <ButtonClose onClose={onClose} />\n        <Title>Need Help</Title>\n        <Formik\n        initialValues={{ email: '', text: '' }}\n          validationSchema={helpSchema}\n          onSubmit={(value, { resetForm }) => {\n            handleSubmit(value);\n            resetForm();\n          }}>\n            <Form>\n            <Field type=\"email\" name=\"email\" placeholder=\"Enter your email\" />\n            <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                style={{\n                  color: 'red',\n                  fontSize: 14,\n                }}\n              />\n              <Textarea type=\"text\" name=\"text\" placeholder=\"Enter your comment\" component=\"textarea\" />\n              <ErrorMessage\n                name=\"text\"\n                component=\"div\"\n                style={{\n                  color: 'red',\n                  fontSize: 14,\n                }}\n              />\n              <SubmitButton title=\"Send\" width=\"352\" height=\"49\" theme=\"Dark\"/>\n            </Form>\n        </Formik>\n        </>\n    )\n\n}","import { useState } from 'react';\nimport {\n  Container,\n  Text,\n  Span,\n  Button,\n  Image,\n  TextButton,\n  Svg\n} from './needHelp.styled';\nimport background from '../../../images/help.png';\nimport sprite from '../../../images/symbol-defs.svg';\nimport { Modal } from 'components/modal/modal';\nimport { NeedHelpForm } from './needHelpForm';\n\nexport const NeedHelp = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleModal = () => {\n    setIsOpen(isOpen => !isOpen)\n  }\n  return (\n    <Container>\n      <Image src={background} alt=\"Logo\" />\n      <Text>\n        If you need help with <Span>TaskPro</Span>, check out our support\n        resources or reach out to our customer support team.\n      </Text>\n      <Button onClick={toggleModal}>\n        <Svg aria-label=\"question with round\" width=\"20px\" height=\"20px\">\n          <use href={sprite + '#icon-help-circle'}></use>\n        </Svg>\n        <TextButton>Need help?</TextButton>\n      </Button>\n      {isOpen && <Modal onClose={toggleModal} children={<NeedHelpForm onClose={toggleModal}/>} />}\n    </Container>\n  );\n};\n\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  height: 100vh;\n  margin: 0;\n  padding: 24px 0 0 24px;\n  color: var(--bord-list-color);\n  background: var(--sidebar-first-bg-color);\n  left: 0;\n  z-index: 100;\n\n  // mobile\n\n  @media (max-width: 768px) {\n    position: absolute;\n    top: 0;\n    left: ${({ isOpen }) => (isOpen ? '0' : '-100%')};\n    bottom: 0;\n    transition: all 1s;\n  }\n`;\n\nexport const WrapperTitle = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 64px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 16px;\n  font-family: Poppins;\n  font-weight: 600;\n  letter-spacing: -0.64px;\n`;\n\nexport const NaviUser = styled.div`\n  /* display: flex;\n  flex-direction: column;\n  justify-content: space-between; */\n  /* height: 100%; */\n  width: 100%;\n  /* gap:28px; */\n`;\n\nexport const NavDashboards = styled.nav`\n  /* margin-bottom: auto; */\n`;\n\nexport const NeedHelpLogOutContainer = styled.div`\n  margin-top: auto;\n  margin-bottom: 28px;\n`;\n\nexport const WrapperLogo = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 8px;\n  border-radius: 5px;\n`;\n\nexport const Logo = styled.svg`\n  width: 32px;\n  height: 32px;\n  flex-shrink: 0;\n  --color5: var(--sidebar-bg-icon-logo);\n  --color1: var(--sidebar-color-icon-logo);\n`;\nexport const IconMenu = styled.svg`\n  position: absolute;\n  top: 18px;\n  left: 32px;\n  width: 32px;\n  height: 32px;\n  display: none;\n  cursor: pointer;\n  transition: all 1s;\n  --color1: var(--first-text-color);\n\n  &:active {\n    opacity: 0;\n  }\n\n  @media (max-width: 375px) {\n    left: 20px;\n  }\n\n  @media (max-width: 768px) {\n    display: block;\n  }\n`;\n","import { CreateBoard } from './CreateBoard/CreateBoard';\nimport { MyBoards } from './MyBoards/MyBoards';\nimport { LogOut } from './LogOut/LogOut';\nimport { NeedHelp } from './needHelp/needHelp';\nimport {\n  Container,\n  WrapperTitle,\n  Title,\n  WrapperLogo,\n  NavDashboards,\n  NaviUser,\n  NeedHelpLogOutContainer,\n  Logo,\n  IconMenu,\n} from './Sidebar.styled';\nimport sprite from '../../../src/images/symbol-defs.svg';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectBoard } from 'redux/dashboards/selectors';\nimport { fetchBoards } from 'redux/dashboards/operations';\nimport { useState, useEffect } from 'react';\nimport { useMediaQuery } from 'react-responsive';\n\nexport const Sidebar = () => {\n  const dispatch = useDispatch();\n  const selectBoards = useSelector(selectBoard);\n  const [isOpen, setIsOpen] = useState(false);\n  const isMobile = useMediaQuery({ maxWidth: 768 });\n\n  useEffect(\n    () => {\n      dispatch(fetchBoards());\n    },\n    [dispatch],\n    selectBoards\n  );\n\n  const handleToggleSidebar = () => {\n    setIsOpen(prevState => !prevState);\n  };\n\n  const handleOutsideClick = event => {\n    if (!event.target.closest('.sidebar')) {\n      setIsOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    let timeoutId;\n\n    if (isOpen && isMobile) {\n      timeoutId = setTimeout(() => {\n        document.addEventListener('click', handleOutsideClick);\n      }, 100);\n    } else {\n      document.removeEventListener('click', handleOutsideClick);\n    }\n\n    return () => {\n      clearTimeout(timeoutId);\n      document.removeEventListener('click', handleOutsideClick);\n    };\n  }, [isOpen, isMobile]);\n\n  return (\n    <>\n      <IconMenu onClick={handleToggleSidebar}>\n        <use href={sprite + '#icon-menu-01'}></use>\n      </IconMenu>\n\n      <Container className=\"sidebar\" isOpen={isOpen}>\n        <NaviUser>\n          <WrapperTitle>\n            <WrapperLogo>\n              <Logo aria-label=\"question with round\" >\n                <use href={sprite + '#icon-icon'}></use>\n              </Logo>\n            </WrapperLogo>\n\n            <Title>Task Pro</Title>\n          </WrapperTitle>\n          <CreateBoard />\n        </NaviUser>\n        <NavDashboards>\n          <MyBoards />\n          {selectBoards.map(board => (\n            <MyBoards key={board._id} id={board._id} desk={board} />\n          ))}\n        </NavDashboards>\n        <NeedHelpLogOutContainer>\n          <NeedHelp />\n          <LogOut />\n        </NeedHelpLogOutContainer>\n      </Container>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  width: 100%;\n  height: 100%;\n  background-color: var(--main-bg-color);\n`;\n\nexport const InfoText = styled.p`\n  width: 486px;\n  height: 72px;\n  color: var(--last-text-color);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 18px;\n  letter-spacing: -0.28px;\n\n  @media (max-width: 768px) {\n    font-size: 12px;\n    line-height: 16px;\n    width: 100%;\n    max-height: 80px;\n  }\n`;\n\nexport const AccentText = styled.span`\n  color: var(--button-bg-color);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 18px;\n  letter-spacing: -0.28px;\n`;\n","import { Container, InfoText, AccentText } from \"./HomeEmptyPage.styled\";\n\nexport const EmptyPage = () => {\n    return (\n        <Container>\n            <InfoText>\n                Before starting your project, it is essential\n                <AccentText>to create a board</AccentText> to visualize and track all the necessary tasks and milestones.\n                This board serves as a powerful tool to organize the workflow and ensure effective collaboration among team members.\n            </InfoText>\n        </Container>\n    );\n};","import { Sidebar } from 'components/sidebar/Sidebar';\nimport { Header } from 'components/Header/Header';\nimport { EmptyPage } from 'components/HomeEmptyPage/HomeEmptyPage';\nimport { Outlet, useLocation } from 'react-router-dom';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    backgroundColor: '#1F1F1F',\n  },\n  deskMenu: {\n    margin: 0,\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n  },\n};\n\nexport default function Home() {\n  const location = useLocation();\n  const hasAdditionalPath = location.pathname.length > '/home/'.length;\n\n  return (\n    <div style={styles.container}>\n      <Sidebar />\n      {!hasAdditionalPath ? (\n        <div style={styles.deskMenu}>\n          <Header />\n          <EmptyPage />\n        </div>\n      ) : (\n        <div style={styles.deskMenu}>\n          <Outlet />\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":["WrapperBoards","styled","Boards","WrapperCreate","CreateTitle","CreateButton","IconPlus","Forma","Form","Input","Field","Label","FormTitle","DeleteTitle","WrapperDelete","Btn","FormOptions","FormQuestion","FormAnswer","Svg","IconRadioButtons","getIcon","onClickIcon","e","target","value","name","id","map","onClick","type","htmlFor","href","sprite","schema","yup","shape","required","ModalBoard","onClose","useState","icon","setIcon","currentBg","setCurrentBg","dispatch","useDispatch","ButtonClose","initialValues","onSubmit","query","resetForm","addBoard","title","console","log","validationSchema","placeholder","minLength","maxLength","component","Background","getBg","width","height","addColumn","CreateBoard","isOpen","setIsOpen","toggleModal","children","List","Item","NavItem","NavLink","WrapperProjectOffice","Project","WrapperProjectIcons","BtnContainer","IconEdit","IconDelete","EditBoard","desk","_id","editBoard","theme","DeleteBoard","deleteBoard","MyBoards","typeModal","setTypeModal","undefined","deskRoute","split","join","pjIcon","typeToggle","to","fetchColumns","changeBg","changeCurrentBoard","getColumns","LogOutButton","LogOutText","LogOut","logOut","fill","Container","Text","Span","Button","Image","TextButton","Title","FormicForm","FormicField","Textarea","helpSchema","Yup","email","matches","message","excludeEmptyString","text","NeedHelpForm","needHelp","handleSubmit","style","color","fontSize","NeedHelp","src","alt","WrapperTitle","NaviUser","NavDashboards","NeedHelpLogOutContainer","WrapperLogo","Logo","IconMenu","Sidebar","selectBoards","useSelector","selectBoard","isMobile","useMediaQuery","maxWidth","useEffect","fetchBoards","handleOutsideClick","event","closest","timeoutId","setTimeout","document","addEventListener","removeEventListener","clearTimeout","prevState","className","board","InfoText","AccentText","EmptyPage","styles","container","display","flexDirection","backgroundColor","deskMenu","margin","Home","hasAdditionalPath","useLocation","pathname","length","Header"],"sourceRoot":""}