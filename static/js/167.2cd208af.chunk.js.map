{"version":3,"file":"static/js/167.2cd208af.chunk.js","mappings":"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","sources":["components/sidebar/CreateBoard/CreateBoard.styled.jsx","components/modal/modal.styled.js","components/modal/modal.jsx","components/sidebar/modalBoard/ModalBoard.styled.jsx","components/submitButton/submitButton.styled.js","components/submitButton/submitButton.jsx","components/iconRadioButtons/IconRadioButtons.styled.jsx","components/iconRadioButtons/IconRadioButtons.jsx","components/modalBtnClose/ButtonClose.styled.js","components/modalBtnClose/ButtonClose.jsx","components/sidebar/modalBoard/ModalBoard.jsx","components/sidebar/CreateBoard/CreateBoard.jsx","components/sidebar/MyBoard/MyBoard.styled.jsx","components/sidebar/MyBoard/MyBoard.jsx","components/sidebar/LogOut/LogOut.styled.jsx","components/sidebar/LogOut/LogOut.jsx","components/sidebar/needHelp/needHelp.styled.js","components/sidebar/needHelp/needHelpForm.styled.js","components/sidebar/needHelp/needHelpForm.jsx","components/sidebar/needHelp/needHelp.jsx","components/sidebar/Sidebar.styled.jsx","components/sidebar/Sidebar.jsx","components/Header/Header.styled.js","components/Header/UserInfo/UserInfo.stayled.js","components/Header/UserInfo/EditUserForm/EditUserForm.styled.js","components/Header/UserInfo/EditUserForm/EditUserForm.js","components/Header/UserInfo/UserInfo.js","components/Header/Header.js","pages/homePage.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const WrapperBoards = styled.div`\n  border-bottom: 1px solid #ffffff1a;\n  margin-bottom: 9px;\n`;\n\nexport const Boards = styled.p`\n  font-size: 16px;\n  font-family: Poppins;\n  font-weight: 600;\n  color: rgba(255, 255, 255, 0.5);\n  font-size: 12px;\n  letter-spacing: -0.24px;\n`;\n\nexport const WrapperCreate = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid #ffffff1a;\n  margin-bottom: 40px;\n`;\n\nexport const CreateTitle = styled.p`\n  width: 76px;\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\n\nexport const CreateButton = styled.button`\n  border-radius: 8px;\n  background: #bedbb0;\n  cursor: pointer;\n  transform: scale(1);\n  transition: transform 550ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.1);\n  }\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const IconPlus = styled.svg`\n  width: 25px;\n  height: 27px;\n  flex-shrink: 0;\n  fill: #bedbb0;\n  color: #121212;\n`;\n","import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\nexport const ModalWindow = styled.div`\n    /* min-width: 335px; */ //модалка має огортати контент \n    /* padding: 24px 24px 0 24px; */ //пропущен відступ знизу\n    position: relative;\n    padding: 24px 24px 24px 24px;\n    border-radius: 8px;\n    border: 1px solid rgba(190, 219, 176, 0.50);\n    background: #151515;\n    color: #fff;\n    box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.05);\n    @media (min-width: 768px) {\n        max-width: 400px;\n      }\n`;","import { createPortal } from \"react-dom\";\nimport { useEffect } from \"react\";\nimport { Backdrop, ModalWindow } from \"./modal.styled\";\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({onClose, children}) => {\n\n    useEffect(() => {\n        const keyDownEvent = e => {\n            if(e.code === 'Escape') {\n                onClose()\n            }\n        }\n        window.addEventListener('keydown', keyDownEvent);\n\n        return () => {\n            window.removeEventListener('keydown', keyDownEvent)\n        }\n    }, [onClose])\n \n   const onCloseBackdrop = e => {\n        if(e.currentTarget === e.target) {\n            onClose()\n        }\n    }\n    return (\n            createPortal(<Backdrop onClick={onCloseBackdrop}>\n            <ModalWindow>   \n                {children}\n            </ModalWindow>\n            </Backdrop>, modalRoot)\n    )\n         \n}","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const Forma = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Input = styled(Field)`\n  display: flex;\n  width: 280px;\n  padding: 14px 1px 14px 18px;\n  /* margin: 0 24px 0 24px; */\n  align-items: center;\n  border-radius: 8px;\n  border: 1px solid #bedbb0;\n  opacity: 0.4000000059604645;\n  background: #1f1f1f;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  color: #fff;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  /* width: 250px; */\n`;\n\nexport const Text = styled.p`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 12px;\n  letter-spacing: 0.03em;\n  margin-bottom: 10px;\n`;\n\nexport const FormTitle = styled.h2`\n  color: #fff;\n  font-size: 18px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n`;\n","import styled from '@emotion/styled';\n\nexport const SubmitBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: ${props => (props.width ? `${props.width}px` : '100%')};\n  height: ${props => `${props.height}px`};\n  border: 0;\n  border-radius: 8px;\n  background: ${props => props.bg};\n  color: ${props => props.color};\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  cursor: pointer;\n`;\n\nexport const IconPlus = styled.svg`\n  width: 28px;\n  height: 28px;\n  flex-shrink: 0;\n  margin-right: 8px;\n  fill: ${props => props.fill};\n  color: ${props => props.color};\n`;\n","import sprite from '../../images/symbol-defs.svg';\nimport { SubmitBtn, IconPlus } from './submitButton.styled';\n\n// How to use\n// import SubmitButton from './submitButton/submitButton';\n// add element <SubmitButton />\n// props:\n// width : default 100%\n// height:  default 49px\n// title:  default 49px\n// theme:  default Dark\n// icon: default false\n// addColumn: default false\n// handleClick: without Default value\n// example: <SubmitButton title=\"Send\" width=\"352\" height=\"49\" theme=\"Dark\" handleClick={YOUR METHOD NAME}/>\n// example <SubmitButton title=\"Edit\" width=\"302\" height=\"49\" theme=\"Dark\" icon={true} handleClick={YOUR METHOD NAME}/>\n// example <SubmitButton title=\"Edit\" width=\"302\" height=\"49\" theme=\"Dark\" icon={true} handleClick={YOUR METHOD NAME}/>\n// example <SubmitButton title=\"Add another column\" width=\"334\" height=\"56\" theme=\"Dark\" icon={true} addColumn={true} handleClick={YOUR METHOD NAME}/>\n\nexport default function SubmitButton({\n  title = 'Add',\n  width,\n  height = 49,\n  theme = 'Dark',\n  icon = false,\n  addColumn = false,\n  handleClick,\n}) {\n  const bgColor = () => {\n    if (theme === 'Dark' && !addColumn) return '#BEDBB0';\n    if (theme === 'Light' && !addColumn) return '#BEDBB0';\n    if (theme === 'Violet' && !addColumn) return '#5255BC';\n    if (theme === 'Dark' && addColumn) return '#121212';\n    if (theme === 'Light' && addColumn) return '#FFFFFF';\n    if (theme === 'Violet' && addColumn) return '#FFFFFF';\n  };\n  const color = () => {\n    if (theme === 'Dark' && !addColumn) return '#161616';\n    if (theme === 'Light' && !addColumn) return '#161616';\n    if (theme === 'Violet' && !addColumn) return '#FFFFFF';\n    if (theme === 'Dark' && addColumn) return '#FFFFFF';\n    if (theme === 'Light' && addColumn) return '#161616';\n    if (theme === 'Violet' && addColumn) return '#161616';\n  };\n\n  const fill = () => {\n    if (theme === 'Dark' && !addColumn) return '#121212';\n    if (theme === 'Light' && !addColumn) return '#121212';\n    if (theme === 'Violet' && !addColumn) return '#FFFFFF';\n    if (theme === 'Dark' && addColumn) return '#FFFFFF';\n    if (theme === 'Light' && addColumn) return '#161616';\n    if (theme === 'Violet' && addColumn) return '#5255BC';\n  };\n\n  const svgColor = () => {\n    if (theme === 'Dark' && !addColumn) return '#FFFFFF';\n    if (theme === 'Light' && !addColumn) return '#FFFFFF';\n    if (theme === 'Violet' && !addColumn) return '#161616';\n    if (theme === 'Dark' && addColumn) return '#121212';\n    if (theme === 'Light' && addColumn) return '#FFFFFF';\n    if (theme === 'Violet' && addColumn) return '#FFFFFF';\n  };\n\n  return (\n    <>\n      <SubmitBtn\n        width={width}\n        height={height}\n        bg={bgColor()}\n        color={color()}\n        onClick={handleClick}\n        type=\"submit\"\n      >\n        {icon && (\n          <IconPlus aria-label=\"add\" fill={fill()} color={svgColor()}>\n            <use href={sprite + '#icon-plus-add'}></use>\n          </IconPlus>\n        )}\n        {title}\n      </SubmitBtn>\n    </>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Form = styled.div`\n  max-width: 300px;\n  margin: 10px auto;\n`;\n\nexport const FormOptions = styled.ul`\n  border: none;\n  padding: 0;\n`;\n\nexport const FormQuestion = styled.legend`\n  color: #fff;\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\n\nexport const FormAnswer = styled.li`\n  display: inline-block;\n  box-sizing: border-box;\n  vertical-align: top;\n  text-align: center;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  height: 100%;\n  width: 100%;\n  padding-right: 6px;\n  cursor: pointer;\n  opacity: 0.5;\n  transition: all 0.5s ease-in-out;\n`;\n\nexport const Input = styled.input`\n  &[type='radio'] {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n  &[type='radio']:active ~ label {\n    opacity: 1;\n  }\n  &[type='radio']:checked ~ label {\n    opacity: 1;\n  }\n`;\n\nexport const Svg = styled.svg`\n  width: 18px;\n  height: 18px;\n  stroke: #fff;\n  :hover {\n    stroke: #bedbb0;\n  }\n`;\n","// import { useState } from 'react';\nimport {\n  Form,\n  FormOptions,\n  FormAnswer,\n  Label,\n  Input,\n  Svg,\n  FormQuestion,\n} from './IconRadioButtons.styled';\nimport sprite from '../../images/symbol-defs.svg';\n\nexport const IconRadioButtons = () => {\n  // const [item, setItem] = useState('');\n\n  return (\n    <>\n      <Form>\n        <form>\n          <FormOptions>\n            <FormQuestion>Icons</FormQuestion>\n            <FormAnswer>\n              <Input type=\"radio\" name=\"match\" id=\"match_1\" value=\"guy\" />\n              <Label for=\"match_1\">\n                <Svg aria-label=\"question with round\">\n                  <use href={sprite + '#icon-Project'}></use>\n                </Svg>\n              </Label>\n            </FormAnswer>\n\n            <FormAnswer>\n              <Input type=\"radio\" name=\"match\" id=\"match_2\" value=\"girl\" />\n              <Label for=\"match_2\">\n                <Svg aria-label=\"question with round\">\n                  <use href={sprite + '#icon-star-04'}></use>\n                </Svg>\n              </Label>\n            </FormAnswer>\n\n            <FormAnswer>\n              <Input type=\"radio\" name=\"match\" id=\"match_3\" value=\"cat\" />\n              <Label for=\"match_3\">\n                <Svg aria-label=\"question with round\">\n                  <use href={sprite + '#icon-loading-03'}></use>\n                </Svg>\n              </Label>\n            </FormAnswer>\n\n            <FormAnswer>\n              <Input type=\"radio\" name=\"match\" id=\"match_4\" value=\"bacon\" />\n              <Label for=\"match_4\">\n                <Svg aria-label=\"question with round\">\n                  <use href={sprite + '#icon-puzzle-piece-02'}></use>\n                </Svg>\n              </Label>\n            </FormAnswer>\n            <FormAnswer>\n              <Input type=\"radio\" name=\"match\" id=\"match_5\" value=\"bacon\" />\n              <Label for=\"match_5\">\n                <Svg aria-label=\"question with round\">\n                  <use href={sprite + '#icon-container'}></use>\n                </Svg>\n              </Label>\n            </FormAnswer>\n            <FormAnswer>\n              <Input type=\"radio\" name=\"match\" id=\"match_6\" value=\"bacon\" />\n              <Label for=\"match_6\">\n                <Svg aria-label=\"question with round\">\n                  <use href={sprite + '#icon-lightning-02'}></use>\n                </Svg>\n              </Label>\n            </FormAnswer>\n            <FormAnswer>\n              <Input type=\"radio\" name=\"match\" id=\"match_7\" value=\"bacon\" />\n              <Label for=\"match_7\">\n                <Svg aria-label=\"question with round\">\n                  <use href={sprite + '#icon-colors'}></use>\n                </Svg>\n              </Label>\n            </FormAnswer>\n            <FormAnswer>\n              <Input type=\"radio\" name=\"match\" id=\"match_8\" value=\"bacon\" />\n              <Label for=\"match_8\">\n                <Svg aria-label=\"question with round\">\n                  <use href={sprite + '#icon-hexagon-01'}></use>\n                </Svg>\n              </Label>\n            </FormAnswer>\n          </FormOptions>\n        </form>\n      </Form>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Btn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  width: 24px;\n  height: 24px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n  background-color: transparent;\n  border: transparent;\n  border-radius: 50%;\n  color: #ffffff;\n  cursor: pointer;\n  transition: all 350ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    /* border: 1px solid #bedbb0; */\n    background-color: #1f1f1f;\n    color: #bedbb0;\n  }\n`;\n\nexport const IconClose = styled.svg`\n  width: 18px;\n  height: 18px;\n  stroke: currentColor;\n  flex-shrink: 0;\n`;\n","import sprite from '../../images/symbol-defs.svg';\nimport { Btn, IconClose } from './ButtonClose.styled';\n\nexport const ButtonClose = ({ onClose }) => {\n  return (\n    <Btn onClick={onClose}>\n      <IconClose aria-label=\"exit\">\n        <use href={sprite + '#icon-x-close'}></use>\n      </IconClose>\n    </Btn>\n  );\n};\n","import { useState } from 'react';\nimport { Forma, Label, Input, FormTitle } from './ModalBoard.styled';\nimport SubmitButton from '../../submitButton/submitButton';\nimport { IconRadioButtons } from '../../iconRadioButtons/IconRadioButtons';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { ButtonClose } from '../../modalBtnClose/ButtonClose';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n});\n\nexport const ModalBoard = () => {\n  const [name, setName] = useState('');\n\n  const handleSubmit = (query, { resetForm }) => {\n    if (!query) {\n      console.log('error');\n    } else {\n      setName(query.name);\n      console.log(name);\n      resetForm();\n    }\n  };\n\n  const initialValues = {\n    name: '',\n  };\n\n  return (\n    <>\n      <ButtonClose />\n      <FormTitle>New board</FormTitle>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <Forma>\n          <Label htmlFor=\"name\">\n            <Input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Title\"\n              required\n              minlength=\"4\"\n              maxlength=\"12\"\n            />\n            <ErrorMessage name=\"name\" component=\"div\" />\n          </Label>\n\n          <SubmitButton\n            title=\"Create\"\n            width=\"302\"\n            height=\"49\"\n            theme=\"Dark\"\n            icon={true}\n            addColumn={false}\n          />\n        </Forma>\n      </Formik>\n      <IconRadioButtons />\n    </>\n  );\n};\n","import { useState } from 'react';\nimport {\n  WrapperBoards,\n  Boards,\n  WrapperCreate,\n  CreateTitle,\n  CreateButton,\n  IconPlus,\n} from './CreateBoard.styled';\nimport sprite from '../../../images/symbol-defs.svg';\nimport { Modal } from 'components/modal/modal';\nimport { ModalBoard } from '../modalBoard/ModalBoard';\n\nexport const CreateBoard = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleModal = () => {\n    setIsOpen(isOpen => !isOpen);\n  };\n  return (\n    <>\n      <WrapperBoards>\n        <Boards>My boards</Boards>\n      </WrapperBoards>\n      <WrapperCreate>\n        <CreateTitle>Create a new board</CreateTitle>\n        <CreateButton type=\"button\" onClick={toggleModal}>\n          <IconPlus aria-label=\"question with round\" width=\"20px\" height=\"20px\">\n            <use href={sprite + '#icon-plus-add'}></use>\n          </IconPlus>\n        </CreateButton>\n        {isOpen && <Modal onClose={toggleModal} children={<ModalBoard />} />}\n      </WrapperCreate>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding-left: 0;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 61px;\n  width: 100%;\n  /* border-right: 4px solid #bedbb0; */\n  background-color: #1f1f1f;\n  margin-bottom: 24px;\n  color: #fff;\n  &:after {\n    content: '';\n    display: flex;\n    position: absolute;\n    right: 0;\n    border-radius: 4px 0px 0px 4px;\n    background: #bedbb0;\n    width: 4px;\n    height: 61px;\n  }\n`;\n\nexport const WrapperProjectOffice = styled.button`\n  display: flex;\n  align-items: center;\n  color: #fff;\n  border: none;\n  background: none;\n  cursor: pointer;\n`;\n\nexport const Project = styled.p`\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  margin-left: 8px;\n`;\n\nexport const WrapperProjectIcons = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const IconButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: #fff;\n`;\n","import {\n  List,\n  Item,\n  WrapperProjectOffice,\n  Project,\n  WrapperProjectIcons,\n  IconButton,\n} from './MyBoard.styled';\nimport sprite from '../../../images/symbol-defs.svg';\n\nexport const MyBoard = () => {\n  return (\n    <List>\n      <Item>\n        <WrapperProjectOffice onClick={() => {}}>\n          <svg aria-label=\"question with round\" width=\"18px\" height=\"16px\">\n            <use href={sprite + '#icon-Project'}></use>\n          </svg>\n          <Project>Project office</Project>\n        </WrapperProjectOffice>\n        <WrapperProjectIcons>\n          <IconButton onClick={() => {}}>\n            <svg aria-label=\"question with round\" width=\"16px\" height=\"16px\">\n              <use href={sprite + '#icon-pencil-01'}></use>\n            </svg>\n          </IconButton>\n          <IconButton onClick={() => {}}>\n            <svg aria-label=\"question with round\" width=\"16px\" height=\"16px\">\n              <use href={sprite + '#icon-trash-04'}></use>\n            </svg>\n          </IconButton>\n        </WrapperProjectIcons>\n      </Item>\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const LogOutButton = styled.button`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  background: none;\n  border: none;\n  padding: 0;\n`;\n\nexport const LogOutText = styled.span`\n  font-size: 16px;\n  font-family: Poppins;\n  font-weight: 500;\n  color: #fff;\n  margin-left: 14px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { logOut } from 'redux/auth/operations';\nimport { LogOutButton, LogOutText } from './LogOut.styled';\nimport sprite from '../../../images/symbol-defs.svg';\n\nexport const LogOut = () => {\n  const dispatch = useDispatch();\n  return (\n    <LogOutButton onClick={() => {}}>\n      <svg\n        aria-label=\"question with round\"\n        width=\"20px\"\n        height=\"20px\"\n        fill=\"inherit\"\n      >\n        <use href={sprite + '#icon-login'}></use>\n      </svg>\n      <LogOutButton type=\"button\" onClick={() => dispatch(logOut())}>\n        <LogOutText>Log out</LogOutText>\n      </LogOutButton>\n    </LogOutButton>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n    max-width: 197px;\n    padding: 20px;\n    margin-bottom: 20px;\n    border-radius: 8px;\n    background: #1F1F1F;\n    @media (min-width: 768px) {\n        max-width: 212px;\n      }\n`;\n\nexport const Text = styled.p`\n    color: #FFF;\n    font-size: 12px;\n    font-family: \"Poppins\";\n    line-height: 20px;\n    @media (min-width: 768px) {\n        font-size: 14px;\n      }\n`;\n\nexport const Span = styled.span`\n  color: #bedbb0;\n`;\n\nexport const Button = styled.button`\n    display: flex;\n    align-items: center;\n    font-size: 12px;\n    font-weight: 500;\n    padding: 0;\n    border: none;\n    color: #FFF;\n    background: #1F1F1F;\n    @media (min-width: 768px) {\n        font-size: 14px;\n      }\n`;\nexport const Image = styled.img`\n    width: 54px;\n    height: 78px;\n    margin-bottom: 14px;\n`;\nexport const TextButton = styled.span`\n  margin-left: 8px;\n  :hover{\n    color: #bedbb0\n  }\n`;\n\nexport const Svg = styled.svg`\n  stroke: #FFF;\n  :hover {\n    stroke: #bedbb0;\n  }\n`","import styled from '@emotion/styled';\nimport { Field as FormicField, Form as FormicForm } from 'formik';\n\nexport const Title = styled.h2`\n    margin: 0 0 24px 0;\n    font-size: 18px;\n    font-weight: 500;\n`;\n\nexport const Form = styled(FormicForm)`\n    display: flex;\n    flex-direction: column;\n    gap: 14px;\n`\n\nexport const Field = styled(FormicField)`\n    max-width: 100%;\n    padding-top: 14px;\n    padding-bottom: 14px;\n    padding-left: 18px;\n    border-radius: 8px;\n    border: 1px solid #BEDBB0;\n    opacity: 0.4000000059604645;\n    color: #FFF;\n    background-color: transparent; \n`;\n\nexport const Textarea = styled(FormicField)`\n    max-width: 100%;\n    height: 120px;\n    margin-bottom: 40px;\n    padding-top: 14px;\n    padding-bottom: 14px;\n    padding-left: 18px;\n    border-radius: 8px;\n    border: 1px solid #BEDBB0;\n    opacity: 0.4000000059604645;\n    color: #FFF;\n    background-color: transparent;\n     \n`;","import SubmitButton from \"../../submitButton/submitButton\";\nimport { Formik, ErrorMessage } from 'formik';\nimport { Title, Field, Form, Textarea } from './needHelpForm.styled';\nimport { ButtonClose } from 'components/modalBtnClose/ButtonClose';\nimport * as Yup from 'yup';\n\nconst helpSchema = Yup.object().shape({\n  email: Yup.string()\n    .matches(\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n      {\n        message: 'Email error',\n        excludeEmptyString: true,\n      }\n    )\n    .required('Required'),\n  text: Yup.string()\n    .required('Required'),\n});\n\nexport const NeedHelpForm = ({onClose}) => {\n\n    function handleSubmit(value) {\n        console.log(value);\n        // const { name, email, password } = value;\n        onClose()\n      }\n    return (\n        <>\n        <ButtonClose onClose={onClose} />\n        <Title>Need Help</Title>\n        <Formik\n        initialValues={{ email: '', text: '' }}\n          validationSchema={helpSchema}\n          onSubmit={(value, { resetForm }) => {\n            handleSubmit(value);\n            resetForm();\n          }}>\n            <Form>\n            <Field type=\"email\" name=\"email\" placeholder=\"Enter your email\" />\n            <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                style={{\n                  color: 'white',\n                }}\n              />\n              <Textarea type=\"text\" name=\"text\" placeholder=\"Enter your comment\" component=\"textarea\" />\n              <ErrorMessage\n                name=\"text\"\n                component=\"div\"\n                style={{\n                  color: 'white',\n                }}\n              />\n              <SubmitButton title=\"Send\" width=\"352\" height=\"49\" theme=\"Dark\"/>\n            </Form>\n        </Formik>\n        </>\n    )\n\n}","import { useState } from 'react';\nimport {\n  Container,\n  Text,\n  Span,\n  Button,\n  Image,\n  TextButton,\n  Svg\n} from './needHelp.styled';\nimport background from '../../../images/help.png';\nimport sprite from '../../../images/symbol-defs.svg';\nimport { Modal } from 'components/modal/modal';\nimport { NeedHelpForm } from './needHelpForm';\n\nexport const NeedHelp = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleModal = () => {\n    setIsOpen(isOpen => !isOpen)\n  }\n  return (\n    <Container>\n      <Image src={background} alt=\"Logo\" />\n      <Text>\n        If you need help with <Span>TaskPro</Span>, check out our support\n        resources or reach out to our customer support team.\n      </Text>\n      <Button onClick={toggleModal}>\n        <Svg aria-label=\"question with round\" width=\"20px\" height=\"20px\">\n          <use href={sprite + '#icon-help-circle'}></use>\n        </Svg>\n        <TextButton>Need help?</TextButton>\n      </Button>\n      {isOpen && <Modal onClose={toggleModal} children={<NeedHelpForm onClose={toggleModal}/>} />}\n    </Container>\n  );\n};\n\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  max-width: 260px;\n  align-items: center;\n  position: relative;\n  padding: 24px 24px 24px 24px;\n  color: #fff;\n  background: #121212;\n`;\n\nexport const WrapperTitle = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 64px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 16px;\n  font-family: Poppins;\n  font-weight: 600;\n  letter-spacing: -0.64px;\n`;\n\nexport const WrapperNeonProject = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 60px;\n`;\n\nexport const NeonProject = styled.p`\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  margin-left: 8px;\n`;\n\nexport const WrapperLogo = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 8px;\n  background-color: #1f1f1f;\n  border-radius: 5px;\n`;\n\nexport const Logo = styled.svg`\n  width: 32px;\n  height: 32px;\n  flex-shrink: 0;\n  fill: #1f1f1f;\n  color: #121212;\n`;\n","import { CreateBoard } from './CreateBoard/CreateBoard';\nimport { MyBoard } from './MyBoard/MyBoard';\nimport { LogOut } from './LogOut/LogOut';\nimport { NeedHelp } from './needHelp/needHelp';\nimport {\n  Container,\n  WrapperTitle,\n  Title,\n  WrapperNeonProject,\n  NeonProject,\n  WrapperLogo,\n  Logo,\n} from './Sidebar.styled';\nimport sprite from '../../../src/images/symbol-defs.svg';\n\nexport const Sidebar = () => {\n  return (\n    <Container>\n      <WrapperTitle>\n        <WrapperLogo>\n          <Logo aria-label=\"question with round\" width=\"32px\" height=\"32px\">\n            <use href={sprite + '#icon-icon'}></use>\n          </Logo>\n        </WrapperLogo>\n\n        <Title>Task Pro</Title>\n      </WrapperTitle>\n      <CreateBoard />\n      <MyBoard />\n      <WrapperNeonProject>\n        <svg aria-label=\"question with round\" width=\"18px\" height=\"18px\">\n          <use href={sprite + '#icon-puzzle-piece-02'}></use>\n        </svg>\n        <NeonProject>Neon Light Project</NeonProject>\n      </WrapperNeonProject>\n      <NeedHelp />\n      <LogOut />\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const HeaderStyled = styled.header`\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    width: 100%; \n    height: 68px;\n    background: #161616;\n\n`\n\nexport const ThemeContainer = styled.div`\n    position: relative;\n    display: inline-block;\n    width: 70px;\n    height: auto;\n    margin-right: 14px;\n    color: rgba(255, 255, 255, 0.80);\n\n}     \n`\n\nexport const ThemeList = styled.ul`\n    position: absolute;\n    top: 16px;\n    left: -12px;\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: repeat(3, 1fr);\n    grid-column-gap: 0px;\n    grid-row-gap: 4px;\n    margin: 0px;\n    max-height: 0px;\n    padding: 0 44px 0 18px;\n    \n    overflow: hidden;\n    list-style: none;\n    cursor: pointer;\n    background: #161616;\n    border-radius: 8px;\n    transition: all 0.3s ease-out;\n    z-index: 1000;\n\n      &.active  {\n        max-height: 107px;\n        padding: 18px 44px 18px 18px;\n      }\n  `\nexport const ThemeSelect = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.3s ease-out;\n\n  &:hover{\n    text-shadow: 0 1px 4px rgba(190, 219, 176, 1);\n  }\n`\n\nexport const P = styled.p`\n    padding: 0;\n    margin: 0;\n    font-size: 14px;\n    font-weight: 500;\n    letter-spacing: -0.28px;\n    margin-right: 4px;\n`\n\nexport const Item = styled.li`\n    \n`;\n\nexport const ItemBtn = styled.button`\n  height: 21px;\n  margin: 0;\n  padding: 0;\n  text-align: left;\n  text-transform: capitalize;\n  font-size: 14px;\n  letter-spacing: -0.28px;\n  border: none;\n  background: transparent;\n  cursor: ${({ disabled }) => (disabled ? '' : 'pointer')};\n  color: ${({ selected }) => (selected ? '#BEDBB0' : 'rgba(255, 255, 255, 0.50);')};\n  transition: all 0.3s ease-out;\n   \n    &:hover{\n      text-shadow:${({ disabled }) => (!disabled ? '0 1px 4px rgba(190, 219, 176, 1)' : '')};\n    }\n`;\n\n\n","import styled from '@emotion/styled';\n\nexport const UserContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: auto;\n    color: rgba(255, 255, 255, 1);\n    margin-right: 24px;\n`;\nexport const UserEmail = styled.p`\n    font-size: 14px;\n    font-weight: 500;\n    letter-spacing: -0.28px;\n    margin-right: 8px;\n`;\n\nexport const ImgWrapper = styled.div`\n    width: 32px;\n    height: 32px;\n    border-radius: 8px;\n    overflow: hidden;\n    cursor: pointer;\n`\nexport const Img = styled.img`\n        width: 100%;\n\t\theight: 100%;\n\t\tobject-fit: cover;\n`","import styled from '@emotion/styled';\nimport { Field as FormicField, Form as FormicForm } from 'formik';\n\nexport const Container = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n`;\n\nexport const UserForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  border-radius: 8px;\n  }\n`;\n\n\nexport const Title = styled.h3`\n  color: #fff;\n  font-size: 18px;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin: 0;\n`;\n\nexport const Form = styled(FormicForm)`\n  display: flex;\n  gap: 24px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const FormFields = styled.div`\n  display: flex;\n  gap: 14px;\n  flex-direction: column;\n`;\n\nexport const Field = styled(FormicField)`\n  font-size: 14px;\n  font-family: 'Poppins';\n  letter-spacing: -0.28px;\n\n  width: 269px;\n  height: 49px;\n  padding-left: 18px;\n  background-color: transparent;\n  color: white;\n  border-radius: 8px;\n  border: 1px solid #bedbb0;\n  opacity: 0.4000000059604645;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n\n  @media screen and (min-width: 768px) {\n    width: 326px;\n    height: 49px;\n  }\n`;\n\nexport const Button = styled.button`\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  letter-spacing: -0.28px;\n\n  width: 287px;\n  height: 49px;\n  background-color: #bedbb0;\n  border: none;\n  border-radius: 8px;\n\n  @media screen and (min-width: 768px) {\n    width: 344px;\n    height: 49px;\n  }\n`;\n\nexport const FormIcon = styled.span`\n  position: relative;\n  display: block;\n`;\n\nexport const Eye = styled.button`\n  position: absolute;\n  top: 50%;\n  right: 12px;\n  transform: translateY(-50%);\n\n  background-color: transparent;\n  border: none;\n  opacity: 0.4000000059604645;\n`;\n\nexport const Icon = styled.svg`\n  width: 18px;\n  height: 18px;\n`;\n\nexport const Label = styled.label`\n    width: 68px;\n    height: 79px;\n    margin: 25px auto 0 auto;\n    cursor: pointer;\n`\nexport const FieldAvatar = styled.input`\n    display: none;\n`\nexport const ImgWrapper = styled.div`\n    position: relative;\n    width: 68px;\n    height: 68px;\n`\nexport const Img = styled.img`\n    width: 100%;\n\t\theight: 100%;\n\t\tobject-fit: cover;\n    border-radius: 8px;\n`\nexport const IconPlus = styled.svg`\n  position: absolute;\n  top: 98%;\n  left: 50%;\n  transform:translate(-50%, -50%);\n  width: 24px;\n  height: 24px;\n  fill: ${props => props.fill};\n  color: ${props => props.color};\n`;","import { Formik, ErrorMessage } from 'formik';\nimport {\n  Container,\n  Title,\n  UserForm,\n  Form,\n  Field,\n  FormFields,\n  Button,\n  FormIcon,\n  Icon,\n  Eye,\n  ImgWrapper,\n  Img,\n  FieldAvatar,\n  IconPlus,\n  Label,\n} from './EditUserForm.styled';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updata } from 'redux/auth/operations';\nimport Sprite from '../../../../images/symbol-defs.svg'\nimport * as Yup from 'yup';\n// import SubmitButton from \"../../../submitButton/submitButton\"\n\n\nconst NewUserSchema = Yup.object().shape({\n  avatar: Yup.mixed()\n    .test('fileType', 'Invalid file format', (value) => {\n      if (!value) return true; \n      const supportedFormats = ['image/png', 'image/jpeg', 'image/jpg'];\n      return supportedFormats.includes(value.type);\n    }),\n  name: Yup.string()\n    .matches(/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/, {\n      message:\n        \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n      excludeEmptyString: true,\n    })\n    .required('Required'),\n  email: Yup.string()\n    .matches(\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n      {\n        message: 'Email error',\n        excludeEmptyString: true,\n      }\n    )\n    .required('Required'),\n  password: Yup.string()\n    .matches(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{5,}$/, {\n      message: 'Password error',\n      excludeEmptyString: true,\n    })\n    .required('Required'),\n});\n\nexport const  EdidUserForm = ({avatarURL}) => {\n  const dispatch = useDispatch();\n  const [type, setType] = useState('password');\n\n  function handleSubmit(value) {\n    const { avatar, name, email, password  } = value;\n    \n    const formData = new FormData();\n    formData.append('avatar', avatar);\n    formData.append('name', name);\n    formData.append('email', email);\n    formData.append('password', password);\n\n    dispatch(updata({ formData }));\n  }\n\n  function handleClick() {\n    switch (type) {\n      case 'text':\n        return setType('password');\n      case 'password':\n        return setType('text');\n\n      default:\n        break;\n    }\n  }\n\n  return (\n    <Container>\n      <UserForm>\n        <Title>Edit profile</Title>\n          \n        <Formik\n          initialValues={{name: '', email: '', password: ''  }}\n          validationSchema={NewUserSchema}\n          onSubmit={(values, { resetForm }) => {\n            handleSubmit(values);\n            resetForm();\n          }}\n        >\n           {({ setFieldValue }) => (\n          <Form>\n            <FormFields >\n              <Label htmlFor=\"avatar\">\n              <ImgWrapper >\n              {avatarURL ? (\n                <Img src={avatarURL} alt=\"User picture\" />\n                ) : (\n                <svg aria-label=\"User picture\" width=\"68px\" height=\"68px\">\n                  <use href={Sprite + '#icon-user'}></use>\n                </svg>\n                )}\n                <IconPlus aria-label=\"add\" fill=\"rgba(190, 219, 176, 1)\" color=\"rgba(22, 22, 22, 1)\">\n                  <use href={Sprite + '#icon-plus-add'}></use>\n                </IconPlus>\n              </ImgWrapper>\n              </Label>\n              <FieldAvatar \n                    id=\"avatar\" \n                    type=\"file\" \n                    name=\"avatar\" \n                    onChange={(event) => {\n                      setFieldValue('avatar', event.currentTarget.files[0]);\n                    }}\n              />               \n              <ErrorMessage\n                name=\"avatar\"\n                component=\"div\"\n                style={{\n                  color: 'white',\n                }}\n              />\n\n              <Field type=\"text\" name=\"name\" placeholder=\"Ivetta\" />\n              <ErrorMessage\n                name=\"name\"\n                component=\"div\"\n                style={{\n                  color: 'white',\n                }}\n              />\n              <Field type=\"email\" name=\"email\" placeholder=\"ivetta34@gmail.com\" />\n              <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                style={{\n                  color: 'white',\n                }}\n              />\n              <FormIcon>\n                <Field\n                  type={type}\n                  name=\"password\"\n                  placeholder=\"ivetta1999.23\"\n                />\n                <ErrorMessage\n                  name=\"password\"\n                  component=\"div\"\n                  style={{\n                    color: 'white',\n                  }}\n                />\n                <Eye type=\"button\" onClick={handleClick}>\n                  <Icon aria-label=\"Logo\">\n                    <use href={Sprite + '#icon-eye'}></use>\n                  </Icon>\n                </Eye>\n              </FormIcon>\n            </FormFields>\n            <Button type=\"submit\">Send</Button>\n          </Form>\n         )}\n        </Formik>\n      </UserForm>\n    </Container>\n  );\n}\n","import { useState } from 'react';\nimport { UserContainer, UserEmail, ImgWrapper, Img } from \"./UserInfo.stayled\";\nimport { Modal } from '../../modal/modal';\nimport { ButtonClose } from 'components/modalBtnClose/ButtonClose';\nimport { EdidUserForm }  from './EditUserForm/EditUserForm'\nimport sprite from '../../../images/symbol-defs.svg';\n\nexport const UserInfo = ({name=\"user\", avatarURL}) => {\n  const [modal, setModal] = useState(false);\n\n  const handleModalOpen = () => setModal(true);\n  const handleClose = () => setModal(false);\n\n  return (\n      <UserContainer>\n        <UserEmail>{name}</UserEmail>\n        <ImgWrapper onClick={handleModalOpen}>\n          {avatarURL ? (\n            <Img src={avatarURL} alt=\"User picture\" />\n          ) : (\n            <svg aria-label=\"User picture\" width=\"32px\" height=\"32px\">\n                <use href={sprite + '#icon-user'}></use>\n            </svg>\n          )}\n        </ImgWrapper>\n        {modal && \n          <Modal onClose={handleClose}>\n            <ButtonClose onClose={handleClose}/>\n            <EdidUserForm avatarURL={avatarURL} />\n          </Modal>}\n        \n      </UserContainer>\n  );\n};\n\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeTheme } from 'redux/auth/operations';\nimport { selectUser } from 'redux/auth/selectores';\nimport {\n  HeaderStyled,\n  ThemeContainer,\n  ThemeList,\n  P,\n  ThemeSelect,\n  Item,\n  ItemBtn,\n} from './Header.styled';\nimport { UserInfo } from './UserInfo/UserInfo';\nimport sprite from '../../images/symbol-defs.svg';\n\nexport const Header = () => {\n  const dispatch = useDispatch();\n  const {avatarURL, name, theme} = useSelector(selectUser)\n  const [currentTheme, setCurrentTheme] = useState(theme);\n  const [isDropdownActive, setIsDropdownActive] = useState(false);\n\n  const themeOptions = ['light', 'dark', 'violet'];\n\n  const handleDropdownClick = () => {\n    setIsDropdownActive(!isDropdownActive);\n  };\n  const handleThemeChange = e => {\n    setCurrentTheme(e.target.value);\n    dispatch(changeTheme({theme: e.target.value}));\n  };\n  console.log(theme);\n  return (\n    <HeaderStyled>\n      <ThemeContainer>\n        <ThemeSelect onClick={handleDropdownClick}>\n          <P> Theme </P>\n          <svg aria-label=\"question with round\" width=\"16px\" height=\"16px\">\n            <use href={sprite + '#icon-chevron-down'}></use>\n          </svg>\n        </ThemeSelect>\n        <ThemeList className={isDropdownActive ? 'active' : ''}>\n          {themeOptions.map(theme => (\n            <Item key={theme}>\n              <ItemBtn\n                selected={currentTheme === theme}\n                disabled={currentTheme === theme}\n                value={theme}\n                onClick={handleThemeChange}\n              >\n                {theme}\n              </ItemBtn>\n            </Item>\n          ))}\n        </ThemeList>\n      </ThemeContainer>\n\n      <UserInfo  name={name} avatarURL={avatarURL}/>\n    </HeaderStyled>\n  );\n};\n","import { Sidebar } from 'components/sidebar/Sidebar';\nimport { Header } from 'components/Header/Header';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  deskMenu: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n  },\n};\n\nexport default function Home() {\n  return (\n    <div style={styles.container}>\n      <Sidebar />\n      <div style={styles.deskMenu}>\n        <Header />\n      </div>\n    </div>\n  );\n}\n"],"names":["WrapperBoards","styled","Boards","WrapperCreate","CreateTitle","CreateButton","IconPlus","Backdrop","ModalWindow","modalRoot","document","querySelector","Modal","onClose","children","useEffect","keyDownEvent","e","code","window","addEventListener","removeEventListener","createPortal","onClick","currentTarget","target","Forma","Form","Input","Field","Label","FormTitle","SubmitBtn","props","width","height","bg","color","fill","SubmitButton","title","theme","icon","addColumn","handleClick","type","href","sprite","FormOptions","FormQuestion","FormAnswer","Svg","IconRadioButtons","name","id","value","for","Btn","IconClose","ButtonClose","schema","yup","shape","required","ModalBoard","useState","setName","initialValues","onSubmit","query","resetForm","console","log","validationSchema","htmlFor","placeholder","minlength","maxlength","component","CreateBoard","isOpen","setIsOpen","toggleModal","List","Item","WrapperProjectOffice","Project","WrapperProjectIcons","IconButton","MyBoard","LogOutButton","LogOutText","LogOut","dispatch","useDispatch","logOut","Container","Text","Span","Button","Image","TextButton","Title","FormicForm","FormicField","Textarea","helpSchema","Yup","email","matches","message","excludeEmptyString","text","NeedHelpForm","handleSubmit","style","NeedHelp","src","alt","WrapperTitle","WrapperNeonProject","NeonProject","WrapperLogo","Logo","Sidebar","HeaderStyled","ThemeContainer","ThemeList","ThemeSelect","P","ItemBtn","disabled","selected","UserContainer","UserEmail","ImgWrapper","Img","UserForm","FormFields","FormIcon","Eye","Icon","FieldAvatar","NewUserSchema","avatar","test","includes","password","EdidUserForm","avatarURL","setType","values","formData","FormData","append","updata","setFieldValue","Sprite","onChange","event","files","UserInfo","modal","setModal","handleClose","Header","useSelector","selectUser","currentTheme","setCurrentTheme","isDropdownActive","setIsDropdownActive","handleThemeChange","changeTheme","className","map","styles","container","display","flexDirection","deskMenu","Home"],"sourceRoot":""}